{"telemetry_id":"pymjy13vnuzkp8mi","slug":"pandas-for-machine-learning","agent":"vscode","tutorial_started_at":1725398484672,"steps":[{"slug":"00-welcome","position":0,"files":[{"path":".learn/exercises/00-welcome/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/00-welcome/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false},{"slug":"01-new-terminal","position":1,"files":[{"path":".learn/exercises/01-new-terminal/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/01-new-terminal/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false,"opened_at":1725403282932,"completed_at":1725403328793},{"slug":"01.2-pipenv","position":2,"files":[{"path":".learn/exercises/01.2-pipenv/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/01.2-pipenv/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false,"opened_at":1725403328793,"completed_at":1725403329654},{"slug":"02-install","position":3,"files":[{"path":".learn/exercises/02-install/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/02-install/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/02-install/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1725403468247,"ended_at":1725403468715,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAxIGl0ZW0KCi5sZWFybi9leGVyY2lzZXMvMDItaW5zdGFsbC90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTEgcGFzc2VkG1swbRtbMzJtIGluIDAuMDFzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725403404596,"completed_at":1725403468715},{"slug":"02.1-create-a-script","position":4,"files":[{"path":".learn/exercises/02.1-create-a-script/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/02.1-create-a-script/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/02.1-create-a-script/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/02.1-create-a-script/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1725403642586,"source_code":"cHJpbnQoIkhlbGxvIFdvcmxkIik=","ended_at":1725403642854,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAzIGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzAyLjEtY3JlYXRlLWEtc2NyaXB0L3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW0zIHBhc3NlZBtbMG0bWzMybSBpbiAwLjAxcxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725403471018,"completed_at":1725403642854},{"slug":"02.2-import","position":5,"files":[{"path":".learn/exercises/02.2-import/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/02.2-import/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/02.2-import/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/02.2-import/test.py","name":"test.py","hidden":true}],"ai_interactions":[{"starting_at":1725403835294,"student_message":"que deberia hacer?\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Pandas for machine learning\n<!-- endhide -->\n\nPandas es la mejor y más popular biblioteca de [Python](https://4geeks.com/es/lesson/que-es-python-tutorial) para machine learning. Esta biblioteca ofrece una amplia variedad de funciones que te ayudarán a manipular datos, optimizar tu algoritmo de machine learning y mucho más. Este **tutorial de python pandas** te ayudaremos a familiarizarte con esta biblioteca y dominar las funcionalidades más utilizadas con ejemplos de código y tutoriales en video que te ayudarán a crear tu primer marco de datos (data frame), limpiar un dataset de información, leer archivos CSV, entre otras cosas...\n\n> Este tutorial de pandas [es interactivo usando LearnPack](https://4geeks.com/es/learnpack-es) y tambien cuenta con un [mentor AI llamado Rigobot](https://4geeks.com/es/rigobot), que lee tu codigo y responde todas tus preguntas inmediatamente.\n\nLos ejercicios en este tutorial han sido creados en aproximadamente 80 horas de desarrollo por expertos en machine learning y revisados cuidadosamente por nuestros [colaboradores](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) para asegurarnos de que tengas la información más precisa e importante que te ayudará a comenzar tu carrera en machine learning.\n\n## Contenidos a revisar en el tutorial de pandas\n\nEn este tutorial, veremos las funciones más importantes y básicas proporcionadas por Pandas que te ayudarán a trabajar con datos en machine learning. A continuación, algunos de los temas que se cubrirán en este tutorial son:\n\n| Ejercicio     | Descripción del tema                                                                                                    |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|**Instalar Pandas** | Estos ejercicios cubren cómo instalar Pandas, cómo importar la biblioteca Pandas en un archivo de Python, y cómo crear tu primer script en Python.          |\n|**DataSets**       | Estos ejercicios explican qué son los conjuntos de datos y cómo trabajar con ellos.                                                                                |\n|**Series**         | Estos ejercicios explican qué son las **series** en Pandas y cómo usarlas.                                                                    |\n|**DataFrames**     | Estos ejercicios explican cómo crear un **DataFrame** de información y qué funciones se pueden usar para trabajar con ellos.                                    |\n|**Clean DataSets** | Esta clase cubre qué es la limpieza de datos, las funciones que Pandas ofrece para limpiar un DataSet, y las mejores prácticas para limpiar un DataSet. |\n\n## 🌱 ¿Cómo iniciar este tutorial de pandas?\n\nPuedes iniciar este tutorial rapidamente usando nuestra tecnologia `aprende en un clic` para tu maquina local o en la nube en 2 pasos sencillos, [haz click aqui para empezar](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=es&utm_source=github&utm_medium=organic&utm_content=readme).\n\n## Colaboradores\n\nQueremos expresar nuestro más profundo agradecimiento a los siguientes colaboradores por su valioso apoyo en la creación de este tutorial.\n\n| Colaborador       | Cuenta de GitHub                                  |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nEste tutorial y muchos otros ejercicios están diseñados para estudiantes como parte del [Bootcamp de Programación](https://4geeksacademy.com/us/coding-bootcamp) de 4Geeks Academy. Actualmente, tenemos dos cursos disponibles. El primero es el Curso de [Desarrollador Full Stack](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), en este curso aprenderás tecnologías como HTML5, CSS3, JavaScript, Python, Flask, SQL y muchas otras. El segundo es el [Bootcamp de Data Science](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning) donde aprenderás tecnologías como Python, fundamentos de algoritmos, Pandas, bases de datos SQL y muchas otras tecnologías. Puedes encontrar más información sobre estos cursos y el próximo curso de Blockchain y Web3 en la página web oficial de [4Geeks Academy](http://4geeksacademy.com/).\n\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `# Pandas for machine learning\n\nPandas is the best and most popular [Python](https://4geeks.com/lesson/intro-to-python) library for machine learning. This library offers a wide variety of functions that will help you manipulate data, optimize your machine-learning algorithm, and much more. This tutorial will help you to get familiar with this library and master the most used functionalities with code samples and video tutorials that will help you to create your first data frame, clean a dataset of information, read CSV files, etc.\n\n> This Pandas tutorial [is interactive using LearnPack](https://4geeks.com/learnpack) and also features an [AI mentor named Rigobot](https://4geeks.com/rigobot), which reads your code and answers all your questions immediately.\n\nThe exercises in this tutorial have been created after about 60 hours of development by many experts in machine learning and they have been carefully reviewed by our [contributors](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) to make sure you have the most accurate and important information that will help you start your machine learning career. \n\n## Content table\n\nIn this tutorial, we will see the most important and basic functions provided by Pandas that will help you work with data in machine learning. The following are some of the topics that will be covered in this tutorial. \n\n| Exercise      | Description of the topic                                                                                                                           |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|Install Pandas | These exercises cover how to install Pandas, how to import the Pandas library in a Python file, and how to create your first Python script.            |\n|DataSets       | These exercises explain what datasets are and how to work with them.                                                                                   |\n|Series         | These exercises explain what Series are in Pandas and how to use them.                                                                                 |\n|DataFrames     | These exercises explain how to create an information DataFrame and what functions can be used to work with them.                                      |\n|Clean DataSets | This class covers what data cleaning is, the functions Pandas offers to clean up a dataset, and the best practices to use when cleaning a dataset. |\n\n## 🌱 How to start these exercises?\n\nYou can start this tutorial quickly using our `learn in one click` technology for your local machine or in the cloud in 2 simple steps, [click here to get started](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=us&utm_source=github&utm_medium=organic&utm_content=readme).\n\n\n## Contributors\n\nWe would like to express our deepest gratitude to the following contributors for their invaluable support in making this tutorial possible.\n\n| Contributor       | GitHub account                                      |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nThis tutorial and many other exercises are designed for students as part of the 4Geeks Academy's [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp). Currently, we have two courses available. The first one is the [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer). In this course, you will learn technologies like HTML5, CSS3, JavaScript, Python, Flask, SQL and many others. The second one is the [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning), where you will learn technologies like Python, Algorithms' basics, Pandas, SQL Database, and many other technologies. You can find more information about these courses and the upcoming **Blockchain and Web3** course on the official [4Geeks Academy](http://4geeksacademy.com/) web page.\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import io, os, sys, pytest, re, pandas\ndata = pandas.read_csv('.learn/assets/pokemon_data.csv')\n\n@pytest.mark.it('You must import pandas')\ndef test_import_pandas():\n    path = os.path.dirname(os.path.abspath('app.py'))+'/app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"import\\s*pandas\\s*as\\s*pd\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it('The variable data_frame must exist')\ndef test_vatiable_existence():\n    from app import data_frame\n\n@pytest.mark.it(\"Use the print function\")\ndef test_output():\n    path = os.path.dirname(os.path.abspath('app.py'))+'/app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"print\\s*\\(\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it('The output should be the expected')\ndef test_output_print(capsys):\n    from app import data_frame\n    result = data_frame.empty == False and data.empty == False\n    assert result == True\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `02.2` Import \n\nAhora, vamos a añadir Pandas en nuestro script utilizando el comando `import`. \n\nEl comando `import` está destinado para cargar librerías de terceros (como Pandas) u otros archivos de Python que hayas creado (que haremos en el futuro).\n\n## 📝 Instrucciones:\n\n1. Escribe `import pandas as pd` dentro del archivo `app.py` para importar la librería de Pandas.\n\n2. Crea una variable llamada `data_frame`.\n\n3. Utiliza la función de Pandas `read_csv` para importar el contenido del archivo CSV en esta ruta `.learn/assets/pokemon_data.csv` y asígnalo a la variable `data_frame`\n\n4. Imprime la variable en el terminal usando la función `print`.\n\n## 💻 Resultado Esperado:\n\nCorre tu script y deberías ver la siguiente salida:\n\n![correr archivo app.py](../../assets/print-file.png)\n\n## 💡 Pista:\n\n+ Echa un vistazo a la documentación de `read_csv`: https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html\n\n> Nota: La función `read_csv` devuelve algo llamado `DataFrame`; nos estaremos refiriendo a eso como una variable de ahora en adelante.\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs: ============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-7.3.1, pluggy-1.0.0\nrootdir: /workspaces/python-pandas-tutorial\nplugins: testdox-3.1.0\ncollected 4 items\n\n.learn/exercises/02.2-import/test.py ...F                                [100%]\n\n=================================== FAILURES ===================================\n______________________________ test_output_print _______________________________\n\ncapsys = <_pytest.capture.CaptureFixture object at 0x7d53ee143670>\n\n    @pytest.mark.it('The output should be the expected')\n    def test_output_print(capsys):\n        from app import data_frame\n>       result = data_frame.empty == False and data.empty == False\nE       AttributeError: 'function' object has no attribute 'empty'\n\n.learn/exercises/02.2-import/test.py:27: AttributeError\n=========================== short test summary info ============================\nFAILED .learn/exercises/02.2-import/test.py::test_output_print - AttributeError: 'function' object has no attribute 'empty'\n========================= 1 failed, 3 passed in 0.39s ==========================\n,\n\n   \n          Your code must to comply with the following tests: \n\n     x (fail) 0. The output should be the expected \n\n","ending_at":1725403841577,"ai_response":"Vamos a revisar los pasos que debes seguir para asegurarnos de que tu código cumple con las instrucciones y pasa todas las pruebas.\n\n1. **Importar la librería Pandas**:\n   - Debes escribir `import pandas as pd` en tu archivo `app.py`.\n\n2. **Crear una variable llamada `data_frame`**:\n   - Utiliza la función `read_csv` de Pandas para leer el archivo CSV ubicado en `.learn/assets/pokemon_data.csv` y asigna el resultado a la variable `data_frame`.\n\n3. **Imprimir la variable `data_frame`**:\n   - Usa la función `print` para mostrar el contenido de `data_frame` en la terminal.\n\nVamos a pensar en cómo podrías estructurar tu código. ¿Cómo crees que podrías usar la función `read_csv` de Pandas para leer el archivo CSV y asignarlo a una variable? ¿Y cómo podrías imprimir esa variable?\n\nSi necesitas más ayuda, aquí tienes una pista: la función `read_csv` se usa de la siguiente manera: `pd.read_csv('ruta_del_archivo')`.\n\nIntenta escribir el código en tu archivo `app.py` y asegúrate de que siga estos pasos. ¿Qué piensas que podría estar causando el error que ves en los tests?"}],"compilations":[{"stderr":"","stdout":"PGZ1bmN0aW9uIHJlYWRfY3N2IGF0IDB4N2QzNjI3NTkzYzcwPgo=","signal":null,"memoryUsage":524288,"cpuUsage":4651,"starting_at":1725403792745,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKZGF0YV9mcmFtZSA9IHBkLnJlYWRfY3N2CgpwcmludChkYXRhX2ZyYW1lKQ==","ended_at":1725403794331,"exit_code":0},{"stderr":"","stdout":"ICAgICAgICMgICAgICAgICAgICAgICAgICAgTmFtZSAgIFR5cGUgMSAgLi4uIFNwZWVkICBHZW5lcmF0aW9uICBMZWdlbmRhcnkKMCAgICAgIDEgICAgICAgICAgICAgIEJ1bGJhc2F1ciAgICBHcmFzcyAgLi4uICAgIDQ1ICAgICAgICAgICAxICAgICAgRmFsc2UKMSAgICAgIDIgICAgICAgICAgICAgICAgSXZ5c2F1ciAgICBHcmFzcyAgLi4uICAgIDYwICAgICAgICAgICAxICAgICAgRmFsc2UKMiAgICAgIDMgICAgICAgICAgICAgICBWZW51c2F1ciAgICBHcmFzcyAgLi4uICAgIDgwICAgICAgICAgICAxICAgICAgRmFsc2UKMyAgICAgIDMgIFZlbnVzYXVyTWVnYSBWZW51c2F1ciAgICBHcmFzcyAgLi4uICAgIDgwICAgICAgICAgICAxICAgICAgRmFsc2UKNCAgICAgIDQgICAgICAgICAgICAgQ2hhcm1hbmRlciAgICAgRmlyZSAgLi4uICAgIDY1ICAgICAgICAgICAxICAgICAgRmFsc2UKLi4gICAuLi4gICAgICAgICAgICAgICAgICAgIC4uLiAgICAgIC4uLiAgLi4uICAgLi4uICAgICAgICAgLi4uICAgICAgICAuLi4KNzk1ICA3MTkgICAgICAgICAgICAgICAgRGlhbmNpZSAgICAgUm9jayAgLi4uICAgIDUwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk2ICA3MTkgICAgRGlhbmNpZU1lZ2EgRGlhbmNpZSAgICAgUm9jayAgLi4uICAgMTEwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk3ICA3MjAgICAgSG9vcGFIb29wYSBDb25maW5lZCAgUHN5Y2hpYyAgLi4uICAgIDcwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk4ICA3MjAgICAgIEhvb3BhSG9vcGEgVW5ib3VuZCAgUHN5Y2hpYyAgLi4uICAgIDgwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk5ICA3MjEgICAgICAgICAgICAgIFZvbGNhbmlvbiAgICAgRmlyZSAgLi4uICAgIDcwICAgICAgICAgICA2ICAgICAgIFRydWUKCls4MDAgcm93cyB4IDEyIGNvbHVtbnNdCg==","signal":null,"memoryUsage":524288,"cpuUsage":7599,"starting_at":1725403976148,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKZGF0YV9mcmFtZSA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQoKcHJpbnQoZGF0YV9mcmFtZSk=","ended_at":1725403976557,"exit_code":0}],"tests":[{"starting_at":1725403835227,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKZGF0YV9mcmFtZSA9IHBkLnJlYWRfY3N2CgpwcmludChkYXRhX2ZyYW1lKQ==","ended_at":1725403835943,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzAyLjItaW1wb3J0L3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMW1GG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gdGVzdF9vdXRwdXRfcHJpbnQgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4N2Q1M2VlMTQzNjcwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X291dHB1dF9wcmludChjYXBzeXMpOgogICAgICAgIGZyb20gYXBwIGltcG9ydCBkYXRhX2ZyYW1lCj4gICAgICAgcmVzdWx0ID0gZGF0YV9mcmFtZS5lbXB0eSA9PSBGYWxzZSBhbmQgZGF0YS5lbXB0eSA9PSBGYWxzZQobWzFtG1szMW1FICAgICAgIEF0dHJpYnV0ZUVycm9yOiAnZnVuY3Rpb24nIG9iamVjdCBoYXMgbm8gYXR0cmlidXRlICdlbXB0eScbWzBtCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzAyLjItaW1wb3J0L3Rlc3QucHkbWzBtOjI3OiBBdHRyaWJ1dGVFcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDIuMi1pbXBvcnQvdGVzdC5weTo6G1sxbXRlc3Rfb3V0cHV0X3ByaW50G1swbSAtIEF0dHJpYnV0ZUVycm9yOiAnZnVuY3Rpb24nIG9iamVjdCBoYXMgbm8gYXR0cmlidXRlICdlbXB0eScKG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbSwgG1szMm0zIHBhc3NlZBtbMG0bWzMxbSBpbiAwLjM5cxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0K","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzAyLjItaW1wb3J0L3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMW1GG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gdGVzdF9vdXRwdXRfcHJpbnQgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4N2Q1M2VlMTQzNjcwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X291dHB1dF9wcmludChjYXBzeXMpOgogICAgICAgIGZyb20gYXBwIGltcG9ydCBkYXRhX2ZyYW1lCj4gICAgICAgcmVzdWx0ID0gZGF0YV9mcmFtZS5lbXB0eSA9PSBGYWxzZSBhbmQgZGF0YS5lbXB0eSA9PSBGYWxzZQobWzFtG1szMW1FICAgICAgIEF0dHJpYnV0ZUVycm9yOiAnZnVuY3Rpb24nIG9iamVjdCBoYXMgbm8gYXR0cmlidXRlICdlbXB0eScbWzBtCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzAyLjItaW1wb3J0L3Rlc3QucHkbWzBtOjI3OiBBdHRyaWJ1dGVFcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDIuMi1pbXBvcnQvdGVzdC5weTo6G1sxbXRlc3Rfb3V0cHV0X3ByaW50G1swbSAtIEF0dHJpYnV0ZUVycm9yOiAnZnVuY3Rpb24nIG9iamVjdCBoYXMgbm8gYXR0cmlidXRlICdlbXB0eScKG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbSwgG1szMm0zIHBhc3NlZBtbMG0bWzMxbSBpbiAwLjM5cxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KLAoKICAgCiAgICAgICAgICAbWzMxbVlvdXIgY29kZSBtdXN0IHRvIGNvbXBseSB3aXRoIHRoZSBmb2xsb3dpbmcgdGVzdHM6G1szOW0gCgogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSAwLiAbWzM3bVRoZSBvdXRwdXQgc2hvdWxkIGJlIHRoZSBleHBlY3RlZBtbMzltIAoK","exit_code":1},{"starting_at":1725403986327,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKZGF0YV9mcmFtZSA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQoKcHJpbnQoZGF0YV9mcmFtZSk=","ended_at":1725403987047,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzAyLjItaW1wb3J0L3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW00IHBhc3NlZBtbMG0bWzMybSBpbiAwLjI5cxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725403644593,"completed_at":1725403987047},{"slug":"03-datasets","position":6,"files":[{"path":".learn/exercises/03-datasets/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/03-datasets/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false,"opened_at":1725403992423},{"slug":"04-Series","position":7,"files":[{"path":".learn/exercises/04-Series/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/04-Series/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/04-Series/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/04-Series/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"MCAgICAyMwoxICAgIDQ1CjIgICAgIDcKMyAgICAzNAo0ICAgICA2CjUgICAgNjMKNiAgICAzNgo3ICAgIDc4CjggICAgNTQKOSAgICAzNApkdHlwZTogaW50NjQK","signal":null,"memoryUsage":524288,"cpuUsage":7473,"starting_at":1725411958868,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgpkYXRhID0gcGQuU2VyaWVzKFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdKQoKcHJpbnQoZGF0YSk=","ended_at":1725411960864,"exit_code":0}],"tests":[{"starting_at":1725411983745,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgpkYXRhID0gcGQuU2VyaWVzKFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdKQoKcHJpbnQoZGF0YSk=","ended_at":1725411984681,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAzIGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA0LVNlcmllcy90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW0zIHBhc3NlZBtbMG0bWzMybSBpbiAwLjI5cxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725411780275,"completed_at":1725411984681},{"slug":"04.1-date-range","position":8,"files":[{"path":".learn/exercises/04.1-date-range/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/04.1-date-range/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/04.1-date-range/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/04.1-date-range/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"RGF0ZXRpbWVJbmRleChbJzIwMjEtMDUtMDEnLCAnMjAyMS0wNS0wMicsICcyMDIxLTA1LTAzJywgJzIwMjEtMDUtMDQnLAogICAgICAgICAgICAgICAnMjAyMS0wNS0wNScsICcyMDIxLTA1LTA2JywgJzIwMjEtMDUtMDcnLCAnMjAyMS0wNS0wOCcsCiAgICAgICAgICAgICAgICcyMDIxLTA1LTA5JywgJzIwMjEtMDUtMTAnLCAnMjAyMS0wNS0xMScsICcyMDIxLTA1LTEyJ10sCiAgICAgICAgICAgICAgZHR5cGU9J2RhdGV0aW1lNjRbbnNdJywgZnJlcT0nRCcpCg==","signal":null,"memoryUsage":524288,"cpuUsage":4219,"starting_at":1725412272351,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgpkYXRhID0gcGQuZGF0ZV9yYW5nZShzdGFydD0nMjAyMS0wNS0wMScsIGVuZD0nMjAyMS0wNS0xMicpCgpwcmludChkYXRhKQ==","ended_at":1725412272765,"exit_code":0}],"tests":[{"starting_at":1725412291854,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgpkYXRhID0gcGQuZGF0ZV9yYW5nZShzdGFydD0nMjAyMS0wNS0wMScsIGVuZD0nMjAyMS0wNS0xMicpCgpwcmludChkYXRhKQ==","ended_at":1725412292440,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA0LjEtZGF0ZS1yYW5nZS90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybSAgICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW00IHBhc3NlZBtbMG0bWzMybSBpbiAwLjI4cxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725411987225,"completed_at":1725412292441},{"slug":"04.2-series-apply","position":9,"files":[{"path":".learn/exercises/04.2-series-apply/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/04.2-series-apply/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/04.2-series-apply/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/04.2-series-apply/test.py","name":"test.py","hidden":true}],"ai_interactions":[{"starting_at":1725412436497,"student_message":"como hago la division en la funcion?\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Pandas for machine learning\n<!-- endhide -->\n\nPandas es la mejor y más popular biblioteca de [Python](https://4geeks.com/es/lesson/que-es-python-tutorial) para machine learning. Esta biblioteca ofrece una amplia variedad de funciones que te ayudarán a manipular datos, optimizar tu algoritmo de machine learning y mucho más. Este **tutorial de python pandas** te ayudaremos a familiarizarte con esta biblioteca y dominar las funcionalidades más utilizadas con ejemplos de código y tutoriales en video que te ayudarán a crear tu primer marco de datos (data frame), limpiar un dataset de información, leer archivos CSV, entre otras cosas...\n\n> Este tutorial de pandas [es interactivo usando LearnPack](https://4geeks.com/es/learnpack-es) y tambien cuenta con un [mentor AI llamado Rigobot](https://4geeks.com/es/rigobot), que lee tu codigo y responde todas tus preguntas inmediatamente.\n\nLos ejercicios en este tutorial han sido creados en aproximadamente 80 horas de desarrollo por expertos en machine learning y revisados cuidadosamente por nuestros [colaboradores](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) para asegurarnos de que tengas la información más precisa e importante que te ayudará a comenzar tu carrera en machine learning.\n\n## Contenidos a revisar en el tutorial de pandas\n\nEn este tutorial, veremos las funciones más importantes y básicas proporcionadas por Pandas que te ayudarán a trabajar con datos en machine learning. A continuación, algunos de los temas que se cubrirán en este tutorial son:\n\n| Ejercicio     | Descripción del tema                                                                                                    |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|**Instalar Pandas** | Estos ejercicios cubren cómo instalar Pandas, cómo importar la biblioteca Pandas en un archivo de Python, y cómo crear tu primer script en Python.          |\n|**DataSets**       | Estos ejercicios explican qué son los conjuntos de datos y cómo trabajar con ellos.                                                                                |\n|**Series**         | Estos ejercicios explican qué son las **series** en Pandas y cómo usarlas.                                                                    |\n|**DataFrames**     | Estos ejercicios explican cómo crear un **DataFrame** de información y qué funciones se pueden usar para trabajar con ellos.                                    |\n|**Clean DataSets** | Esta clase cubre qué es la limpieza de datos, las funciones que Pandas ofrece para limpiar un DataSet, y las mejores prácticas para limpiar un DataSet. |\n\n## 🌱 ¿Cómo iniciar este tutorial de pandas?\n\nPuedes iniciar este tutorial rapidamente usando nuestra tecnologia `aprende en un clic` para tu maquina local o en la nube en 2 pasos sencillos, [haz click aqui para empezar](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=es&utm_source=github&utm_medium=organic&utm_content=readme).\n\n## Colaboradores\n\nQueremos expresar nuestro más profundo agradecimiento a los siguientes colaboradores por su valioso apoyo en la creación de este tutorial.\n\n| Colaborador       | Cuenta de GitHub                                  |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nEste tutorial y muchos otros ejercicios están diseñados para estudiantes como parte del [Bootcamp de Programación](https://4geeksacademy.com/us/coding-bootcamp) de 4Geeks Academy. Actualmente, tenemos dos cursos disponibles. El primero es el Curso de [Desarrollador Full Stack](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), en este curso aprenderás tecnologías como HTML5, CSS3, JavaScript, Python, Flask, SQL y muchas otras. El segundo es el [Bootcamp de Data Science](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning) donde aprenderás tecnologías como Python, fundamentos de algoritmos, Pandas, bases de datos SQL y muchas otras tecnologías. Puedes encontrar más información sobre estos cursos y el próximo curso de Blockchain y Web3 en la página web oficial de [4Geeks Academy](http://4geeksacademy.com/).\n\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `# Pandas for machine learning\n\nPandas is the best and most popular [Python](https://4geeks.com/lesson/intro-to-python) library for machine learning. This library offers a wide variety of functions that will help you manipulate data, optimize your machine-learning algorithm, and much more. This tutorial will help you to get familiar with this library and master the most used functionalities with code samples and video tutorials that will help you to create your first data frame, clean a dataset of information, read CSV files, etc.\n\n> This Pandas tutorial [is interactive using LearnPack](https://4geeks.com/learnpack) and also features an [AI mentor named Rigobot](https://4geeks.com/rigobot), which reads your code and answers all your questions immediately.\n\nThe exercises in this tutorial have been created after about 60 hours of development by many experts in machine learning and they have been carefully reviewed by our [contributors](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) to make sure you have the most accurate and important information that will help you start your machine learning career. \n\n## Content table\n\nIn this tutorial, we will see the most important and basic functions provided by Pandas that will help you work with data in machine learning. The following are some of the topics that will be covered in this tutorial. \n\n| Exercise      | Description of the topic                                                                                                                           |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|Install Pandas | These exercises cover how to install Pandas, how to import the Pandas library in a Python file, and how to create your first Python script.            |\n|DataSets       | These exercises explain what datasets are and how to work with them.                                                                                   |\n|Series         | These exercises explain what Series are in Pandas and how to use them.                                                                                 |\n|DataFrames     | These exercises explain how to create an information DataFrame and what functions can be used to work with them.                                      |\n|Clean DataSets | This class covers what data cleaning is, the functions Pandas offers to clean up a dataset, and the best practices to use when cleaning a dataset. |\n\n## 🌱 How to start these exercises?\n\nYou can start this tutorial quickly using our `learn in one click` technology for your local machine or in the cloud in 2 simple steps, [click here to get started](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=us&utm_source=github&utm_medium=organic&utm_content=readme).\n\n\n## Contributors\n\nWe would like to express our deepest gratitude to the following contributors for their invaluable support in making this tutorial possible.\n\n| Contributor       | GitHub account                                      |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nThis tutorial and many other exercises are designed for students as part of the 4Geeks Academy's [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp). Currently, we have two courses available. The first one is the [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer). In this course, you will learn technologies like HTML5, CSS3, JavaScript, Python, Flask, SQL and many others. The second one is the [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning), where you will learn technologies like Python, Algorithms' basics, Pandas, SQL Database, and many other technologies. You can find more information about these courses and the upcoming **Blockchain and Web3** course on the official [4Geeks Academy](http://4geeksacademy.com/) web page.\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import io, os, re, sys, pytest\n\n@pytest.mark.it('You must import pandas')\ndef test_import_pandas():\n    path = os.path.dirname(os.path.abspath('app.py'))+'/app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"import\\s*pandas\\s*as\\s*pd\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it(\"Use the print function\")\ndef test_output():\n    path = os.path.dirname(os.path.abspath('app.py'))+'/app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"print\\s*\\(\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it('The output should be the expected')\ndef test_expected_output(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert   \"\"\"0    1.0\n1    2.0\n2    3.0\n3    4.0\n4    5.0\ndtype: float64\n\"\"\" in captured.out\n\n@pytest.mark.it('The variable my_series should exist')\ndef test_variable_existence():\n    from app import my_series\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `04.2` Series Apply\n\nDada una variable que contiene una serie:\n\n```py\nmy_series = pd.Series([2, 4, 6, 8, 10])\n```\n\n## 📝 Instrucciones: \n\n1. Usa la función `my_series.apply` para dividir todos los números de la siguiente serie por 2 e imprime el resultado a la terminal.\n\n## 💻 Resultado Esperado:\n\n```bash\n0    1.0\n1    2.0\n2    3.0\n3    4.0\n4    5.0\ndtype: float64\n```\n\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs: ============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-7.3.1, pluggy-1.0.0\nrootdir: /workspaces/python-pandas-tutorial\nplugins: testdox-3.1.0\ncollected 4 items\n\n.learn/exercises/04.2-series-apply/test.py ..F.                          [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_expected_output _____________________________\n\ncapsys = <_pytest.capture.CaptureFixture object at 0x7ff8775c26b0>\n\n    @pytest.mark.it('The output should be the expected')\n    def test_expected_output(capsys):\n        import app\n        captured = capsys.readouterr()\n>       assert   \"\"\"0    1.0\n    1    2.0\n    2    3.0\n    3    4.0\n    4    5.0\n    dtype: float64\n    \"\"\" in captured.out\nE       AssertionError: assert '0    1.0\\n1    2.0\\n2    3.0\\n3    4.0\\n4    5.0\\ndtype: float64\\n' in ''\nE        +  where '' = CaptureResult(out='', err='').out\n\n.learn/exercises/04.2-series-apply/test.py:23: AssertionError\n=========================== short test summary info ============================\nFAILED .learn/exercises/04.2-series-apply/test.py::test_expected_output - AssertionError: assert '0    1.0\\n1    2.0\\n2    3.0\\n3    4.0\\n4    5.0\\nd...\n========================= 1 failed, 3 passed in 0.35s ==========================\n,\n\n   \n          Your code must to comply with the following tests: \n\n     x (fail) 0. The output should be the expected \n\n","ending_at":1725412439666,"ai_response":"Para dividir todos los números de la serie por 2 usando la función `apply`, puedes pasarle una función lambda que realice la operación de división. Las funciones lambda son funciones anónimas y rápidas que puedes definir en una sola línea.\n\nAquí tienes una guía paso a paso para lograrlo:\n\n1. Importa la biblioteca `pandas` como `pd`.\n2. Define la serie `my_series`.\n3. Usa la función `apply` con una función lambda para dividir cada elemento por 2.\n4. Imprime el resultado.\n\nPiensa en la función lambda como una pequeña receta que le dices a `apply` que use para cada elemento de la serie. En este caso, la receta es dividir el número por 2.\n\n¿Cómo crees que podrías escribir esa función lambda para dividir por 2?"}],"compilations":[{"stderr":"","stdout":"MCAgICAxLjAKMSAgICAyLjAKMiAgICAzLjAKMyAgICA0LjAKNCAgICA1LjAKZHR5cGU6IGZsb2F0NjQK","signal":null,"memoryUsage":524288,"cpuUsage":8142,"starting_at":1725412670194,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCm15X3NlcmllcyA9IHBkLlNlcmllcyhbMiwgNCwgNiwgOCwgMTBdKQoKbXlfc2VyaWVzID0gbXlfc2VyaWVzLmFwcGx5KGxhbWJkYSB4OiB4LzIpCgpwcmludChteV9zZXJpZXMp","ended_at":1725412670629,"exit_code":0}],"tests":[{"starting_at":1725412438093,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCm15X3NlcmllcyA9IHBkLlNlcmllcyhbMiwgNCwgNiwgOCwgMTBdKQoKbXlfc2VyaWVzLmFwcGx5","ended_at":1725412438725,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA0LjItc2VyaWVzLWFwcGx5L3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMxbUYbWzBtG1szMm0uG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4N2ZmODc3NWMyNmIwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiIiIwICAgIDEuMAogICAgMSAgICAyLjAKICAgIDIgICAgMy4wCiAgICAzICAgIDQuMAogICAgNCAgICA1LjAKICAgIGR0eXBlOiBmbG9hdDY0CiAgICAiIiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnMCAgICAxLjBcbjEgICAgMi4wXG4yICAgIDMuMFxuMyAgICA0LjBcbjQgICAgNS4wXG5kdHlwZTogZmxvYXQ2NFxuJyBpbiAnJxtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgd2hlcmUgJycgPSBDYXB0dXJlUmVzdWx0KG91dD0nJywgZXJyPScnKS5vdXQbWzBtCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzA0LjItc2VyaWVzLWFwcGx5L3Rlc3QucHkbWzBtOjIzOiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDQuMi1zZXJpZXMtYXBwbHkvdGVzdC5weTo6G1sxbXRlc3RfZXhwZWN0ZWRfb3V0cHV0G1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJzAgICAgMS4wXG4xICAgIDIuMFxuMiAgICAzLjBcbjMgICAgNC4wXG40ICAgIDUuMFxuZC4uLgobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtLCAbWzMybTMgcGFzc2VkG1swbRtbMzFtIGluIDAuMzVzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA0LjItc2VyaWVzLWFwcGx5L3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMxbUYbWzBtG1szMm0uG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4N2ZmODc3NWMyNmIwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiIiIwICAgIDEuMAogICAgMSAgICAyLjAKICAgIDIgICAgMy4wCiAgICAzICAgIDQuMAogICAgNCAgICA1LjAKICAgIGR0eXBlOiBmbG9hdDY0CiAgICAiIiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnMCAgICAxLjBcbjEgICAgMi4wXG4yICAgIDMuMFxuMyAgICA0LjBcbjQgICAgNS4wXG5kdHlwZTogZmxvYXQ2NFxuJyBpbiAnJxtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgd2hlcmUgJycgPSBDYXB0dXJlUmVzdWx0KG91dD0nJywgZXJyPScnKS5vdXQbWzBtCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzA0LjItc2VyaWVzLWFwcGx5L3Rlc3QucHkbWzBtOjIzOiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDQuMi1zZXJpZXMtYXBwbHkvdGVzdC5weTo6G1sxbXRlc3RfZXhwZWN0ZWRfb3V0cHV0G1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJzAgICAgMS4wXG4xICAgIDIuMFxuMiAgICAzLjBcbjMgICAgNC4wXG40ICAgIDUuMFxuZC4uLgobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtLCAbWzMybTMgcGFzc2VkG1swbRtbMzFtIGluIDAuMzVzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQosCgogICAKICAgICAgICAgIBtbMzFtWW91ciBjb2RlIG11c3QgdG8gY29tcGx5IHdpdGggdGhlIGZvbGxvd2luZyB0ZXN0czobWzM5bSAKCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDAuIBtbMzdtVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkG1szOW0gCgo=","exit_code":1},{"starting_at":1725412679990,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCm15X3NlcmllcyA9IHBkLlNlcmllcyhbMiwgNCwgNiwgOCwgMTBdKQoKbXlfc2VyaWVzID0gbXlfc2VyaWVzLmFwcGx5KGxhbWJkYSB4OiB4LzIpCgpwcmludChteV9zZXJpZXMp","ended_at":1725412680619,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA0LjItc2VyaWVzLWFwcGx5L3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW00IHBhc3NlZBtbMG0bWzMybSBpbiAwLjMxcxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725412295041,"completed_at":1725412680619},{"slug":"05-dataframes","position":10,"files":[{"path":".learn/exercises/05-dataframes/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05-dataframes/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/05-dataframes/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/05-dataframes/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"ICAgICBCcmFuZCAgICBNb2RlbCAgIENvbG9yCjAgICBUb3lvdGEgIENvcm9sbGEgICAgQmx1ZQoxICAgICBGb3JkICAgICAgICBLICBZZWxsb3cKMiAgUG9yc2NoZSAgQ2F5ZW5uZSAgIFdoaXRlCg==","signal":null,"memoryUsage":393216,"cpuUsage":3384,"starting_at":1725413277598,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gW1siVG95b3RhIiwgIkNvcm9sbGEiLCAiQmx1ZSJdLCBbIkZvcmQiLCAiSyIsICJZZWxsb3ciXSwgWyJQb3JzY2hlIiwgIkNheWVubmUiLCAiV2hpdGUiXV0KCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQoKcHJpbnQoZGYp","ended_at":1725413277959,"exit_code":0}],"tests":[{"starting_at":1725413306115,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gW1siVG95b3RhIiwgIkNvcm9sbGEiLCAiQmx1ZSJdLCBbIkZvcmQiLCAiSyIsICJZZWxsb3ciXSwgWyJQb3JzY2hlIiwgIkNheWVubmUiLCAiV2hpdGUiXV0KCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQoKcHJpbnQoZGYp","ended_at":1725413306725,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LWRhdGFmcmFtZXMvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW00IHBhc3NlZBtbMG0bWzMybSBpbiAwLjMycxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725412699296,"completed_at":1725413306725},{"slug":"05.1-dataframe-dict","position":11,"files":[{"path":".learn/exercises/05.1-dataframe-dict/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05.1-dataframe-dict/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/05.1-dataframe-dict/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/05.1-dataframe-dict/test.py","name":"test.py","hidden":true}],"ai_interactions":[{"starting_at":1725425583279,"student_message":"cual es el error?\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Pandas for machine learning\n<!-- endhide -->\n\nPandas es la mejor y más popular biblioteca de [Python](https://4geeks.com/es/lesson/que-es-python-tutorial) para machine learning. Esta biblioteca ofrece una amplia variedad de funciones que te ayudarán a manipular datos, optimizar tu algoritmo de machine learning y mucho más. Este **tutorial de python pandas** te ayudaremos a familiarizarte con esta biblioteca y dominar las funcionalidades más utilizadas con ejemplos de código y tutoriales en video que te ayudarán a crear tu primer marco de datos (data frame), limpiar un dataset de información, leer archivos CSV, entre otras cosas...\n\n> Este tutorial de pandas [es interactivo usando LearnPack](https://4geeks.com/es/learnpack-es) y tambien cuenta con un [mentor AI llamado Rigobot](https://4geeks.com/es/rigobot), que lee tu codigo y responde todas tus preguntas inmediatamente.\n\nLos ejercicios en este tutorial han sido creados en aproximadamente 80 horas de desarrollo por expertos en machine learning y revisados cuidadosamente por nuestros [colaboradores](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) para asegurarnos de que tengas la información más precisa e importante que te ayudará a comenzar tu carrera en machine learning.\n\n## Contenidos a revisar en el tutorial de pandas\n\nEn este tutorial, veremos las funciones más importantes y básicas proporcionadas por Pandas que te ayudarán a trabajar con datos en machine learning. A continuación, algunos de los temas que se cubrirán en este tutorial son:\n\n| Ejercicio     | Descripción del tema                                                                                                    |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|**Instalar Pandas** | Estos ejercicios cubren cómo instalar Pandas, cómo importar la biblioteca Pandas en un archivo de Python, y cómo crear tu primer script en Python.          |\n|**DataSets**       | Estos ejercicios explican qué son los conjuntos de datos y cómo trabajar con ellos.                                                                                |\n|**Series**         | Estos ejercicios explican qué son las **series** en Pandas y cómo usarlas.                                                                    |\n|**DataFrames**     | Estos ejercicios explican cómo crear un **DataFrame** de información y qué funciones se pueden usar para trabajar con ellos.                                    |\n|**Clean DataSets** | Esta clase cubre qué es la limpieza de datos, las funciones que Pandas ofrece para limpiar un DataSet, y las mejores prácticas para limpiar un DataSet. |\n\n## 🌱 ¿Cómo iniciar este tutorial de pandas?\n\nPuedes iniciar este tutorial rapidamente usando nuestra tecnologia `aprende en un clic` para tu maquina local o en la nube en 2 pasos sencillos, [haz click aqui para empezar](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=es&utm_source=github&utm_medium=organic&utm_content=readme).\n\n## Colaboradores\n\nQueremos expresar nuestro más profundo agradecimiento a los siguientes colaboradores por su valioso apoyo en la creación de este tutorial.\n\n| Colaborador       | Cuenta de GitHub                                  |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nEste tutorial y muchos otros ejercicios están diseñados para estudiantes como parte del [Bootcamp de Programación](https://4geeksacademy.com/us/coding-bootcamp) de 4Geeks Academy. Actualmente, tenemos dos cursos disponibles. El primero es el Curso de [Desarrollador Full Stack](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), en este curso aprenderás tecnologías como HTML5, CSS3, JavaScript, Python, Flask, SQL y muchas otras. El segundo es el [Bootcamp de Data Science](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning) donde aprenderás tecnologías como Python, fundamentos de algoritmos, Pandas, bases de datos SQL y muchas otras tecnologías. Puedes encontrar más información sobre estos cursos y el próximo curso de Blockchain y Web3 en la página web oficial de [4Geeks Academy](http://4geeksacademy.com/).\n\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `# Pandas for machine learning\n\nPandas is the best and most popular [Python](https://4geeks.com/lesson/intro-to-python) library for machine learning. This library offers a wide variety of functions that will help you manipulate data, optimize your machine-learning algorithm, and much more. This tutorial will help you to get familiar with this library and master the most used functionalities with code samples and video tutorials that will help you to create your first data frame, clean a dataset of information, read CSV files, etc.\n\n> This Pandas tutorial [is interactive using LearnPack](https://4geeks.com/learnpack) and also features an [AI mentor named Rigobot](https://4geeks.com/rigobot), which reads your code and answers all your questions immediately.\n\nThe exercises in this tutorial have been created after about 60 hours of development by many experts in machine learning and they have been carefully reviewed by our [contributors](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) to make sure you have the most accurate and important information that will help you start your machine learning career. \n\n## Content table\n\nIn this tutorial, we will see the most important and basic functions provided by Pandas that will help you work with data in machine learning. The following are some of the topics that will be covered in this tutorial. \n\n| Exercise      | Description of the topic                                                                                                                           |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|Install Pandas | These exercises cover how to install Pandas, how to import the Pandas library in a Python file, and how to create your first Python script.            |\n|DataSets       | These exercises explain what datasets are and how to work with them.                                                                                   |\n|Series         | These exercises explain what Series are in Pandas and how to use them.                                                                                 |\n|DataFrames     | These exercises explain how to create an information DataFrame and what functions can be used to work with them.                                      |\n|Clean DataSets | This class covers what data cleaning is, the functions Pandas offers to clean up a dataset, and the best practices to use when cleaning a dataset. |\n\n## 🌱 How to start these exercises?\n\nYou can start this tutorial quickly using our `learn in one click` technology for your local machine or in the cloud in 2 simple steps, [click here to get started](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=us&utm_source=github&utm_medium=organic&utm_content=readme).\n\n\n## Contributors\n\nWe would like to express our deepest gratitude to the following contributors for their invaluable support in making this tutorial possible.\n\n| Contributor       | GitHub account                                      |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nThis tutorial and many other exercises are designed for students as part of the 4Geeks Academy's [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp). Currently, we have two courses available. The first one is the [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer). In this course, you will learn technologies like HTML5, CSS3, JavaScript, Python, Flask, SQL and many others. The second one is the [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning), where you will learn technologies like Python, Algorithms' basics, Pandas, SQL Database, and many other technologies. You can find more information about these courses and the upcoming **Blockchain and Web3** course on the official [4Geeks Academy](http://4geeksacademy.com/) web page.\n`\n      ---\n      \n---\n      # File name: __pycache__. Content: \n      `Error: This is not a file to be read, but a directory: ./__pycache__`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import pytest, io, os, sys, re\n\n@pytest.mark.it('You must import pandas')\ndef test_import_pandas():\n    path = 'app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"import\\s*pandas\\s*as\\s*pd\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it(\"Use the print function\")\ndef test_output():\n    path = os.path.dirname(os.path.abspath('app.py'))+'/app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"print\\s*\\(\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it('The output should be the expected')\ndef test_expected_output(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert   \"\"\"    brand    model   color\n0   Toyota  Corolla    Blue\n1     Ford        K  Yellow\n2  Porsche  Cayenne   White\n3    Tesla  Model S     Red\n\"\"\" in captured.out\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `05.1` DataFrame Dict\n\nOtra manera de organizar tus datos antes de crear un DataFrame será usando `dict` (diccionario) en vez de `list`.\n\nEn este ejemplo tenemos una lista de diccionarios que hace más fácil la lectura de los datos antes de crear el DataFrame.\n\n```python\ndata = [\n    { \n        \"brand\": \"Toyota\", \n        \"model\": \"Corolla\",\n        \"color\": \"Blue\"\n    },\n    {\n        \"brand\": \"Ford\", \n        \"model\": \"K\",\n        \"color\": \"Yellow\"\n    },\n    {\n        \"brand\": \"Porsche\", \n        \"model\": \"Cayenne\",\n        \"color\": \"White\"\n    }\n]\n```\n\n## 📝 Instrucciones: \n\n1. Usa estos datos para crear un DataFrame pero agrégale una nueva fila para un Tesla, Model S, Red. \n\n## 💻 Resultado Esperado:\n\n```bash\n     brand    model   color\n0   Toyota  Corolla    Blue\n1     Ford        K  Yellow\n2  Porsche  Cayenne   White\n3    Tesla  Model S     Red\n```\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs: ============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-7.3.1, pluggy-1.0.0\nrootdir: /workspaces/python-pandas-tutorial\nplugins: testdox-3.1.0\ncollected 3 items\n\n.learn/exercises/05.1-dataframe-dict/test.py ..F                         [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_expected_output _____________________________\n\ncapsys = <_pytest.capture.CaptureFixture object at 0x760cb2adbc10>\n\n    @pytest.mark.it('The output should be the expected')\n    def test_expected_output(capsys):\n        import app\n        captured = capsys.readouterr()\n>       assert   \"\"\"    brand    model   color\n    0   Toyota  Corolla    Blue\n    1     Ford        K  Yellow\n    2  Porsche  Cayenne   White\n    3    Tesla  Model S     Red\n    \"\"\" in captured.out\nE       assert '    brand    model   color\\n0   Toyota  Corolla    Blue\\n1     Ford        K  Yellow\\n2  Porsche  Cayenne   White\\n3    Tesla  Model S     Red\\n' in \"[{'brand': 'Toyota', 'model': 'Corolla', 'color': 'Blue'}, {'brand': 'Ford', 'model': 'K', 'color': 'Yellow'}, {'bran...d    Model Color\\n0    NaN      NaN   NaN\\n1    NaN      NaN   NaN\\n2    NaN      NaN   NaN\\n3  Tesla  Model S   Red\\n\"\nE        +  where \"[{'brand': 'Toyota', 'model': 'Corolla', 'color': 'Blue'}, {'brand': 'Ford', 'model': 'K', 'color': 'Yellow'}, {'bran...d    Model Color\\n0    NaN      NaN   NaN\\n1    NaN      NaN   NaN\\n2    NaN      NaN   NaN\\n3  Tesla  Model S   Red\\n\" = CaptureResult(out=\"[{'brand': 'Toyota', 'model': 'Corolla', 'color': 'Blue'}, {'brand': 'Ford', 'model': 'K', 'color':...l Color\\n0    NaN      NaN   NaN\\n1    NaN      NaN   NaN\\n2    NaN      NaN   NaN\\n3  Tesla  Model S   Red\\n\", err='').out\n\n.learn/exercises/05.1-dataframe-dict/test.py:23: AssertionError\n=========================== short test summary info ============================\nFAILED .learn/exercises/05.1-dataframe-dict/test.py::test_expected_output - assert '    brand    model   color\\n0   Toyota  Corolla    Blue\\n1     Ford...\n========================= 1 failed, 2 passed in 0.36s ==========================\n,\n\n   \n          Your code must to comply with the following tests: \n\n     x (fail) 0. The output should be the expected \n\n","ending_at":1725425586321,"ai_response":"Parece que el error está en cómo estás creando y mostrando el DataFrame. El mensaje de error indica que el formato de salida no coincide con el esperado. Vamos a revisar los pasos necesarios para crear el DataFrame correctamente y agregar la nueva fila.\n\n1. **Crear el DataFrame a partir de la lista de diccionarios**: Primero, necesitas importar la biblioteca `pandas` y luego crear el DataFrame usando los datos proporcionados.\n\n2. **Agregar una nueva fila**: Puedes usar el método `append` de pandas para agregar una nueva fila al DataFrame.\n\n3. **Imprimir el DataFrame**: Finalmente, imprime el DataFrame para verificar que la salida sea la esperada.\n\nVamos a pensar en cómo podrías hacer esto. ¿Cómo crees que podrías usar `pandas` para crear un DataFrame a partir de una lista de diccionarios y luego agregar una nueva fila?"}],"compilations":[{"stderr":"","stdout":"ICAgQnJhbmQgTW9kZWwgQ29sb3IKMCAgICBOYU4gICBOYU4gICBOYU4KMSAgICBOYU4gICBOYU4gICBOYU4KMiAgICBOYU4gICBOYU4gICBOYU4KMyAgVGVzbGEgICAgIFMgICBSZWQK","signal":null,"memoryUsage":393216,"cpuUsage":9424,"starting_at":1725424964800,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQpkZi5sb2NbbGVuKGRmKV0gPSBbJ1Rlc2xhJywgJ1MnLCAnUmVkJ10KCnByaW50KGRmKQ==","ended_at":1725424966938,"exit_code":0},{"stderr":"","stdout":"ICAgQnJhbmQgICAgTW9kZWwgQ29sb3IKMCAgICBOYU4gICAgICBOYU4gICBOYU4KMSAgICBOYU4gICAgICBOYU4gICBOYU4KMiAgICBOYU4gICAgICBOYU4gICBOYU4KMyAgVGVzbGEgIE1vZGVsIFMgICBSZWQK","signal":null,"memoryUsage":262144,"cpuUsage":7354,"starting_at":1725424977616,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQpkZi5sb2NbbGVuKGRmKV0gPSBbJ1Rlc2xhJywgJ01vZGVsIFMnLCAnUmVkJ10KCnByaW50KGRmKQ==","ended_at":1725424978002,"exit_code":0},{"stderr":"","stdout":"ICAgQnJhbmQgICAgTW9kZWwgQ29sb3IKMCAgICBOYU4gICAgICBOYU4gICBOYU4KMSAgICBOYU4gICAgICBOYU4gICBOYU4KMiAgICBOYU4gICAgICBOYU4gICBOYU4KMyAgVGVzbGEgIE1vZGVsIFMgICBSZWQK","signal":null,"memoryUsage":393216,"cpuUsage":7866,"starting_at":1725425501330,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQpkZi5sb2NbbGVuKGRmKV0gPSBbJ1Rlc2xhJywgJ01vZGVsIFMnLCAnUmVkJ10KCnByaW50KGRmKQ==","ended_at":1725425501749,"exit_code":0},{"stderr":"","stdout":"W3snYnJhbmQnOiAnVG95b3RhJywgJ21vZGVsJzogJ0Nvcm9sbGEnLCAnY29sb3InOiAnQmx1ZSd9LCB7J2JyYW5kJzogJ0ZvcmQnLCAnbW9kZWwnOiAnSycsICdjb2xvcic6ICdZZWxsb3cnfSwgeydicmFuZCc6ICdQb3JzY2hlJywgJ21vZGVsJzogJ0NheWVubmUnLCAnY29sb3InOiAnV2hpdGUnfV0KICAgQnJhbmQgICAgTW9kZWwgQ29sb3IKMCAgICBOYU4gICAgICBOYU4gICBOYU4KMSAgICBOYU4gICAgICBOYU4gICBOYU4KMiAgICBOYU4gICAgICBOYU4gICBOYU4KMyAgVGVzbGEgIE1vZGVsIFMgICBSZWQK","signal":null,"memoryUsage":524288,"cpuUsage":8078,"starting_at":1725425534348,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCnByaW50KGRhdGEpCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQpkZi5sb2NbbGVuKGRmKV0gPSBbJ1Rlc2xhJywgJ01vZGVsIFMnLCAnUmVkJ10KCnByaW50KGRmKQ==","ended_at":1725425534780,"exit_code":0},{"stderr":"","stdout":"W3snYnJhbmQnOiAnVG95b3RhJywgJ21vZGVsJzogJ0Nvcm9sbGEnLCAnY29sb3InOiAnQmx1ZSd9LCB7J2JyYW5kJzogJ0ZvcmQnLCAnbW9kZWwnOiAnSycsICdjb2xvcic6ICdZZWxsb3cnfSwgeydicmFuZCc6ICdQb3JzY2hlJywgJ21vZGVsJzogJ0NheWVubmUnLCAnY29sb3InOiAnV2hpdGUnfV0KICAgQnJhbmQgICAgTW9kZWwgQ29sb3IKMCAgICBOYU4gICAgICBOYU4gICBOYU4KMSAgICBOYU4gICAgICBOYU4gICBOYU4KMiAgICBOYU4gICAgICBOYU4gICBOYU4KMyAgVGVzbGEgIE1vZGVsIFMgICBSZWQK","signal":null,"memoryUsage":393216,"cpuUsage":7269,"starting_at":1725425540890,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCnByaW50KGRhdGEpCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQpkZi5sb2NbbGVuKGRmKV0gPSBbJ1Rlc2xhJywgJ01vZGVsIFMnLCAnUmVkJ10KCnByaW50KGRmKQ==","ended_at":1725425541330,"exit_code":0},{"stderr":"","stdout":"W3snYnJhbmQnOiAnVG95b3RhJywgJ21vZGVsJzogJ0Nvcm9sbGEnLCAnY29sb3InOiAnQmx1ZSd9LCB7J2JyYW5kJzogJ0ZvcmQnLCAnbW9kZWwnOiAnSycsICdjb2xvcic6ICdZZWxsb3cnfSwgeydicmFuZCc6ICdQb3JzY2hlJywgJ21vZGVsJzogJ0NheWVubmUnLCAnY29sb3InOiAnV2hpdGUnfV0KICAgQnJhbmQgICAgTW9kZWwgQ29sb3IKMCAgICBOYU4gICAgICBOYU4gICBOYU4KMSAgICBOYU4gICAgICBOYU4gICBOYU4KMiAgICBOYU4gICAgICBOYU4gICBOYU4KMyAgVGVzbGEgIE1vZGVsIFMgICBSZWQK","signal":null,"memoryUsage":524288,"cpuUsage":7328,"starting_at":1725425655625,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCnByaW50KGRhdGEpCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQpkZi5sb2NbbGVuKGRmKV0gPSBbJ1Rlc2xhJywgJ01vZGVsIFMnLCAnUmVkJ10KCnByaW50KGRmKQ==","ended_at":1725425656004,"exit_code":0},{"stderr":"","stdout":"ICAgICBicmFuZCAgICBtb2RlbCAgIGNvbG9yCjAgICBUb3lvdGEgIENvcm9sbGEgICAgQmx1ZQoxICAgICBGb3JkICAgICAgICBLICBZZWxsb3cKMiAgUG9yc2NoZSAgQ2F5ZW5uZSAgIFdoaXRlCjMgICAgVGVzbGEgIE1vZGVsIFMgICAgIFJlZAo=","signal":null,"memoryUsage":524288,"cpuUsage":7814,"starting_at":1725425874464,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCiMgZGYgPSBwZC5EYXRhRnJhbWUoZGF0YSwgY29sdW1ucz1bJ0JyYW5kJywgJ01vZGVsJywgJ0NvbG9yJ10pCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCmRmLmxvY1tsZW4oZGYpXSA9IFsnVGVzbGEnLCAnTW9kZWwgUycsICdSZWQnXQoKcHJpbnQoZGYp","ended_at":1725425874870,"exit_code":0}],"tests":[{"starting_at":1725425343756,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQpkZi5sb2NbbGVuKGRmKV0gPSBbJ1Rlc2xhJywgJ01vZGVsIFMnLCAnUmVkJ10KCnByaW50KGRmKQ==","ended_at":1725425345016,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAzIGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4NzMxODUwMTBkNTQwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiIiIgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvcgogICAgMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlCiAgICAxICAgICBGb3JkICAgICAgICBLICBZZWxsb3cKICAgIDIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZQogICAgMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkCiAgICAiIiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnICAgIGJyYW5kICAgIG1vZGVsICAgY29sb3JcbjAgICBUb3lvdGEgIENvcm9sbGEgICAgQmx1ZVxuMSAgICAgRm9yZCAgICAgICAgSyAgWWVsbG93XG4yICBQb3JzY2hlICBDYXllbm5lICAgV2hpdGVcbjMgICAgVGVzbGEgIE1vZGVsIFMgICAgIFJlZFxuJyBpbiAnICAgQnJhbmQgICAgTW9kZWwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4nG1swbQobWzFtG1szMW1FICAgICAgICArICB3aGVyZSAnICAgQnJhbmQgICAgTW9kZWwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4nID0gQ2FwdHVyZVJlc3VsdChvdXQ9JyAgIEJyYW5kICAgIE1vZGVsIENvbG9yXG4wICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMSAgICBOYU4gICAgICBOYU4gICBOYU5cbjIgICAgTmFOICAgICAgTmFOICAgTmFOXG4zICBUZXNsYSAgTW9kZWwgUyAgIFJlZFxuJywgZXJyPScnKS5vdXQbWzBtCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weRtbMG06MjM6IEFzc2VydGlvbkVycm9yChtbMzZtG1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PSBzaG9ydCB0ZXN0IHN1bW1hcnkgaW5mbyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wNS4xLWRhdGFmcmFtZS1kaWN0L3Rlc3QucHk6OhtbMW10ZXN0X2V4cGVjdGVkX291dHB1dBtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvclxuMCAgIFRveW90YSAgQ29yb2xsYSAgICAuLi4KG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbSwgG1szMm0yIHBhc3NlZBtbMG0bWzMxbSBpbiAwLjM2cxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0K","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAzIGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4NzMxODUwMTBkNTQwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiIiIgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvcgogICAgMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlCiAgICAxICAgICBGb3JkICAgICAgICBLICBZZWxsb3cKICAgIDIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZQogICAgMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkCiAgICAiIiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnICAgIGJyYW5kICAgIG1vZGVsICAgY29sb3JcbjAgICBUb3lvdGEgIENvcm9sbGEgICAgQmx1ZVxuMSAgICAgRm9yZCAgICAgICAgSyAgWWVsbG93XG4yICBQb3JzY2hlICBDYXllbm5lICAgV2hpdGVcbjMgICAgVGVzbGEgIE1vZGVsIFMgICAgIFJlZFxuJyBpbiAnICAgQnJhbmQgICAgTW9kZWwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4nG1swbQobWzFtG1szMW1FICAgICAgICArICB3aGVyZSAnICAgQnJhbmQgICAgTW9kZWwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4nID0gQ2FwdHVyZVJlc3VsdChvdXQ9JyAgIEJyYW5kICAgIE1vZGVsIENvbG9yXG4wICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMSAgICBOYU4gICAgICBOYU4gICBOYU5cbjIgICAgTmFOICAgICAgTmFOICAgTmFOXG4zICBUZXNsYSAgTW9kZWwgUyAgIFJlZFxuJywgZXJyPScnKS5vdXQbWzBtCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weRtbMG06MjM6IEFzc2VydGlvbkVycm9yChtbMzZtG1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PSBzaG9ydCB0ZXN0IHN1bW1hcnkgaW5mbyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wNS4xLWRhdGFmcmFtZS1kaWN0L3Rlc3QucHk6OhtbMW10ZXN0X2V4cGVjdGVkX291dHB1dBtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvclxuMCAgIFRveW90YSAgQ29yb2xsYSAgICAuLi4KG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbSwgG1szMm0yIHBhc3NlZBtbMG0bWzMxbSBpbiAwLjM2cxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KLAoKICAgCiAgICAgICAgICAbWzMxbVlvdXIgY29kZSBtdXN0IHRvIGNvbXBseSB3aXRoIHRoZSBmb2xsb3dpbmcgdGVzdHM6G1szOW0gCgogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSAwLiAbWzM3bVRoZSBvdXRwdXQgc2hvdWxkIGJlIHRoZSBleHBlY3RlZBtbMzltIAoK","exit_code":1},{"starting_at":1725425570718,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCnByaW50KGRhdGEpCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQpkZi5sb2NbbGVuKGRmKV0gPSBbJ1Rlc2xhJywgJ01vZGVsIFMnLCAnUmVkJ10KCnByaW50KGRmKQ==","ended_at":1725425571431,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAzIGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4NzIxMTc2MjM3YzEwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiIiIgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvcgogICAgMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlCiAgICAxICAgICBGb3JkICAgICAgICBLICBZZWxsb3cKICAgIDIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZQogICAgMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkCiAgICAiIiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgYXNzZXJ0ICcgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvclxuMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlXG4xICAgICBGb3JkICAgICAgICBLICBZZWxsb3dcbjIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZVxuMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkXG4nIGluICJbeydicmFuZCc6ICdUb3lvdGEnLCAnbW9kZWwnOiAnQ29yb2xsYScsICdjb2xvcic6ICdCbHVlJ30sIHsnYnJhbmQnOiAnRm9yZCcsICdtb2RlbCc6ICdLJywgJ2NvbG9yJzogJ1llbGxvdyd9LCB7J2JyYW4uLi5kICAgIE1vZGVsIENvbG9yXG4wICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMSAgICBOYU4gICAgICBOYU4gICBOYU5cbjIgICAgTmFOICAgICAgTmFOICAgTmFOXG4zICBUZXNsYSAgTW9kZWwgUyAgIFJlZFxuIhtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgd2hlcmUgIlt7J2JyYW5kJzogJ1RveW90YScsICdtb2RlbCc6ICdDb3JvbGxhJywgJ2NvbG9yJzogJ0JsdWUnfSwgeydicmFuZCc6ICdGb3JkJywgJ21vZGVsJzogJ0snLCAnY29sb3InOiAnWWVsbG93J30sIHsnYnJhbi4uLmQgICAgTW9kZWwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4iID0gQ2FwdHVyZVJlc3VsdChvdXQ9Ilt7J2JyYW5kJzogJ1RveW90YScsICdtb2RlbCc6ICdDb3JvbGxhJywgJ2NvbG9yJzogJ0JsdWUnfSwgeydicmFuZCc6ICdGb3JkJywgJ21vZGVsJzogJ0snLCAnY29sb3InOi4uLmwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4iLCBlcnI9JycpLm91dBtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDUuMS1kYXRhZnJhbWUtZGljdC90ZXN0LnB5G1swbToyMzogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weTo6G1sxbXRlc3RfZXhwZWN0ZWRfb3V0cHV0G1swbSAtIGFzc2VydCAnICAgIGJyYW5kICAgIG1vZGVsICAgY29sb3JcbjAgICBUb3lvdGEgIENvcm9sbGEgICAgQmx1ZVxuMSAgICAgRm9yZC4uLgobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtLCAbWzMybTIgcGFzc2VkG1swbRtbMzFtIGluIDAuMzdzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAzIGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4NzIxMTc2MjM3YzEwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiIiIgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvcgogICAgMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlCiAgICAxICAgICBGb3JkICAgICAgICBLICBZZWxsb3cKICAgIDIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZQogICAgMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkCiAgICAiIiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgYXNzZXJ0ICcgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvclxuMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlXG4xICAgICBGb3JkICAgICAgICBLICBZZWxsb3dcbjIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZVxuMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkXG4nIGluICJbeydicmFuZCc6ICdUb3lvdGEnLCAnbW9kZWwnOiAnQ29yb2xsYScsICdjb2xvcic6ICdCbHVlJ30sIHsnYnJhbmQnOiAnRm9yZCcsICdtb2RlbCc6ICdLJywgJ2NvbG9yJzogJ1llbGxvdyd9LCB7J2JyYW4uLi5kICAgIE1vZGVsIENvbG9yXG4wICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMSAgICBOYU4gICAgICBOYU4gICBOYU5cbjIgICAgTmFOICAgICAgTmFOICAgTmFOXG4zICBUZXNsYSAgTW9kZWwgUyAgIFJlZFxuIhtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgd2hlcmUgIlt7J2JyYW5kJzogJ1RveW90YScsICdtb2RlbCc6ICdDb3JvbGxhJywgJ2NvbG9yJzogJ0JsdWUnfSwgeydicmFuZCc6ICdGb3JkJywgJ21vZGVsJzogJ0snLCAnY29sb3InOiAnWWVsbG93J30sIHsnYnJhbi4uLmQgICAgTW9kZWwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4iID0gQ2FwdHVyZVJlc3VsdChvdXQ9Ilt7J2JyYW5kJzogJ1RveW90YScsICdtb2RlbCc6ICdDb3JvbGxhJywgJ2NvbG9yJzogJ0JsdWUnfSwgeydicmFuZCc6ICdGb3JkJywgJ21vZGVsJzogJ0snLCAnY29sb3InOi4uLmwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4iLCBlcnI9JycpLm91dBtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDUuMS1kYXRhZnJhbWUtZGljdC90ZXN0LnB5G1swbToyMzogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weTo6G1sxbXRlc3RfZXhwZWN0ZWRfb3V0cHV0G1swbSAtIGFzc2VydCAnICAgIGJyYW5kICAgIG1vZGVsICAgY29sb3JcbjAgICBUb3lvdGEgIENvcm9sbGEgICAgQmx1ZVxuMSAgICAgRm9yZC4uLgobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtLCAbWzMybTIgcGFzc2VkG1swbRtbMzFtIGluIDAuMzdzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQosCgogICAKICAgICAgICAgIBtbMzFtWW91ciBjb2RlIG11c3QgdG8gY29tcGx5IHdpdGggdGhlIGZvbGxvd2luZyB0ZXN0czobWzM5bSAKCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDAuIBtbMzdtVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkG1szOW0gCgo=","exit_code":1},{"starting_at":1725425584883,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCnByaW50KGRhdGEpCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQpkZi5sb2NbbGVuKGRmKV0gPSBbJ1Rlc2xhJywgJ01vZGVsIFMnLCAnUmVkJ10KCnByaW50KGRmKQ==","ended_at":1725425585579,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAzIGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4NzYwY2IyYWRiYzEwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiIiIgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvcgogICAgMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlCiAgICAxICAgICBGb3JkICAgICAgICBLICBZZWxsb3cKICAgIDIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZQogICAgMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkCiAgICAiIiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgYXNzZXJ0ICcgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvclxuMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlXG4xICAgICBGb3JkICAgICAgICBLICBZZWxsb3dcbjIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZVxuMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkXG4nIGluICJbeydicmFuZCc6ICdUb3lvdGEnLCAnbW9kZWwnOiAnQ29yb2xsYScsICdjb2xvcic6ICdCbHVlJ30sIHsnYnJhbmQnOiAnRm9yZCcsICdtb2RlbCc6ICdLJywgJ2NvbG9yJzogJ1llbGxvdyd9LCB7J2JyYW4uLi5kICAgIE1vZGVsIENvbG9yXG4wICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMSAgICBOYU4gICAgICBOYU4gICBOYU5cbjIgICAgTmFOICAgICAgTmFOICAgTmFOXG4zICBUZXNsYSAgTW9kZWwgUyAgIFJlZFxuIhtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgd2hlcmUgIlt7J2JyYW5kJzogJ1RveW90YScsICdtb2RlbCc6ICdDb3JvbGxhJywgJ2NvbG9yJzogJ0JsdWUnfSwgeydicmFuZCc6ICdGb3JkJywgJ21vZGVsJzogJ0snLCAnY29sb3InOiAnWWVsbG93J30sIHsnYnJhbi4uLmQgICAgTW9kZWwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4iID0gQ2FwdHVyZVJlc3VsdChvdXQ9Ilt7J2JyYW5kJzogJ1RveW90YScsICdtb2RlbCc6ICdDb3JvbGxhJywgJ2NvbG9yJzogJ0JsdWUnfSwgeydicmFuZCc6ICdGb3JkJywgJ21vZGVsJzogJ0snLCAnY29sb3InOi4uLmwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4iLCBlcnI9JycpLm91dBtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDUuMS1kYXRhZnJhbWUtZGljdC90ZXN0LnB5G1swbToyMzogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weTo6G1sxbXRlc3RfZXhwZWN0ZWRfb3V0cHV0G1swbSAtIGFzc2VydCAnICAgIGJyYW5kICAgIG1vZGVsICAgY29sb3JcbjAgICBUb3lvdGEgIENvcm9sbGEgICAgQmx1ZVxuMSAgICAgRm9yZC4uLgobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtLCAbWzMybTIgcGFzc2VkG1swbRtbMzFtIGluIDAuMzZzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAzIGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4NzYwY2IyYWRiYzEwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiIiIgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvcgogICAgMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlCiAgICAxICAgICBGb3JkICAgICAgICBLICBZZWxsb3cKICAgIDIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZQogICAgMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkCiAgICAiIiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgYXNzZXJ0ICcgICAgYnJhbmQgICAgbW9kZWwgICBjb2xvclxuMCAgIFRveW90YSAgQ29yb2xsYSAgICBCbHVlXG4xICAgICBGb3JkICAgICAgICBLICBZZWxsb3dcbjIgIFBvcnNjaGUgIENheWVubmUgICBXaGl0ZVxuMyAgICBUZXNsYSAgTW9kZWwgUyAgICAgUmVkXG4nIGluICJbeydicmFuZCc6ICdUb3lvdGEnLCAnbW9kZWwnOiAnQ29yb2xsYScsICdjb2xvcic6ICdCbHVlJ30sIHsnYnJhbmQnOiAnRm9yZCcsICdtb2RlbCc6ICdLJywgJ2NvbG9yJzogJ1llbGxvdyd9LCB7J2JyYW4uLi5kICAgIE1vZGVsIENvbG9yXG4wICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMSAgICBOYU4gICAgICBOYU4gICBOYU5cbjIgICAgTmFOICAgICAgTmFOICAgTmFOXG4zICBUZXNsYSAgTW9kZWwgUyAgIFJlZFxuIhtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgd2hlcmUgIlt7J2JyYW5kJzogJ1RveW90YScsICdtb2RlbCc6ICdDb3JvbGxhJywgJ2NvbG9yJzogJ0JsdWUnfSwgeydicmFuZCc6ICdGb3JkJywgJ21vZGVsJzogJ0snLCAnY29sb3InOiAnWWVsbG93J30sIHsnYnJhbi4uLmQgICAgTW9kZWwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4iID0gQ2FwdHVyZVJlc3VsdChvdXQ9Ilt7J2JyYW5kJzogJ1RveW90YScsICdtb2RlbCc6ICdDb3JvbGxhJywgJ2NvbG9yJzogJ0JsdWUnfSwgeydicmFuZCc6ICdGb3JkJywgJ21vZGVsJzogJ0snLCAnY29sb3InOi4uLmwgQ29sb3JcbjAgICAgTmFOICAgICAgTmFOICAgTmFOXG4xICAgIE5hTiAgICAgIE5hTiAgIE5hTlxuMiAgICBOYU4gICAgICBOYU4gICBOYU5cbjMgIFRlc2xhICBNb2RlbCBTICAgUmVkXG4iLCBlcnI9JycpLm91dBtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDUuMS1kYXRhZnJhbWUtZGljdC90ZXN0LnB5G1swbToyMzogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weTo6G1sxbXRlc3RfZXhwZWN0ZWRfb3V0cHV0G1swbSAtIGFzc2VydCAnICAgIGJyYW5kICAgIG1vZGVsICAgY29sb3JcbjAgICBUb3lvdGEgIENvcm9sbGEgICAgQmx1ZVxuMSAgICAgRm9yZC4uLgobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtLCAbWzMybTIgcGFzc2VkG1swbRtbMzFtIGluIDAuMzZzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQosCgogICAKICAgICAgICAgIBtbMzFtWW91ciBjb2RlIG11c3QgdG8gY29tcGx5IHdpdGggdGhlIGZvbGxvd2luZyB0ZXN0czobWzM5bSAKCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDAuIBtbMzdtVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkG1szOW0gCgo=","exit_code":1},{"starting_at":1725425907593,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgpkYXRhID0gWwogICAgeyAKICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiAgICAgICAgIm1vZGVsIjogIkNvcm9sbGEiLAogICAgICAgICJjb2xvciI6ICJCbHVlIgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiRm9yZCIsIAogICAgICAgICJtb2RlbCI6ICJLIiwKICAgICAgICAiY29sb3IiOiAiWWVsbG93IgogICAgfSwKICAgIHsKICAgICAgICAiYnJhbmQiOiAiUG9yc2NoZSIsIAogICAgICAgICJtb2RlbCI6ICJDYXllbm5lIiwKICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiAgICB9Cl0KCiMgZGYgPSBwZC5EYXRhRnJhbWUoZGF0YSwgY29sdW1ucz1bJ0JyYW5kJywgJ01vZGVsJywgJ0NvbG9yJ10pCmRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCmRmLmxvY1tsZW4oZGYpXSA9IFsnVGVzbGEnLCAnTW9kZWwgUycsICdSZWQnXQoKcHJpbnQoZGYp","ended_at":1725425908216,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCAzIGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjEtZGF0YWZyYW1lLWRpY3QvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW0zIHBhc3NlZBtbMG0bWzMybSBpbiAwLjI5cxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725413310034,"completed_at":1725425908216},{"slug":"05.2-dataframe-iloc","position":12,"files":[{"path":".learn/exercises/05.2-dataframe-iloc/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05.2-dataframe-iloc/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/05.2-dataframe-iloc/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/05.2-dataframe-iloc/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL3B5dGhvbi1wYW5kYXMtdHV0b3JpYWwvYXBwLnB5IiwgbGluZSA0NSwgaW4gPG1vZHVsZT4KICAgIGRmID0gcGQuRGF0YUZyYW1lKCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9mcmFtZS5weSIsIGxpbmUgODg2LCBpbiBfX2luaXRfXwogICAgcmFpc2UgVmFsdWVFcnJvcigiRGF0YUZyYW1lIGNvbnN0cnVjdG9yIG5vdCBwcm9wZXJseSBjYWxsZWQhIikKVmFsdWVFcnJvcjogRGF0YUZyYW1lIGNvbnN0cnVjdG9yIG5vdCBwcm9wZXJseSBjYWxsZWQhCg==","stdout":"","signal":null,"memoryUsage":524288,"cpuUsage":3570,"errorType":"run-time","starting_at":1725470498158,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLkRhdGFGcmFtZSgnLmxlYXJuL2Fzc2V0cy9wb2tlbW9uX2RhdGEuY3N2JykKCnByaW50KGRmKQ==","ended_at":1725470500254,"exit_code":1},{"stderr":"","stdout":"ICAgICAgICMgICAgICAgICAgICAgICAgICAgTmFtZSAgIFR5cGUgMSAgLi4uIFNwZWVkICBHZW5lcmF0aW9uICBMZWdlbmRhcnkKMCAgICAgIDEgICAgICAgICAgICAgIEJ1bGJhc2F1ciAgICBHcmFzcyAgLi4uICAgIDQ1ICAgICAgICAgICAxICAgICAgRmFsc2UKMSAgICAgIDIgICAgICAgICAgICAgICAgSXZ5c2F1ciAgICBHcmFzcyAgLi4uICAgIDYwICAgICAgICAgICAxICAgICAgRmFsc2UKMiAgICAgIDMgICAgICAgICAgICAgICBWZW51c2F1ciAgICBHcmFzcyAgLi4uICAgIDgwICAgICAgICAgICAxICAgICAgRmFsc2UKMyAgICAgIDMgIFZlbnVzYXVyTWVnYSBWZW51c2F1ciAgICBHcmFzcyAgLi4uICAgIDgwICAgICAgICAgICAxICAgICAgRmFsc2UKNCAgICAgIDQgICAgICAgICAgICAgQ2hhcm1hbmRlciAgICAgRmlyZSAgLi4uICAgIDY1ICAgICAgICAgICAxICAgICAgRmFsc2UKLi4gICAuLi4gICAgICAgICAgICAgICAgICAgIC4uLiAgICAgIC4uLiAgLi4uICAgLi4uICAgICAgICAgLi4uICAgICAgICAuLi4KNzk1ICA3MTkgICAgICAgICAgICAgICAgRGlhbmNpZSAgICAgUm9jayAgLi4uICAgIDUwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk2ICA3MTkgICAgRGlhbmNpZU1lZ2EgRGlhbmNpZSAgICAgUm9jayAgLi4uICAgMTEwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk3ICA3MjAgICAgSG9vcGFIb29wYSBDb25maW5lZCAgUHN5Y2hpYyAgLi4uICAgIDcwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk4ICA3MjAgICAgIEhvb3BhSG9vcGEgVW5ib3VuZCAgUHN5Y2hpYyAgLi4uICAgIDgwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk5ICA3MjEgICAgICAgICAgICAgIFZvbGNhbmlvbiAgICAgRmlyZSAgLi4uICAgIDcwICAgICAgICAgICA2ICAgICAgIFRydWUKCls4MDAgcm93cyB4IDEyIGNvbHVtbnNdCg==","signal":null,"memoryUsage":524288,"cpuUsage":4512,"starting_at":1725470560446,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQoKcHJpbnQoZGYp","ended_at":1725470560857,"exit_code":0},{"stderr":"","stdout":"MzUK","signal":null,"memoryUsage":524288,"cpuUsage":1878,"starting_at":1725470664481,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725470664976,"exit_code":0}],"tests":[{"starting_at":1725470679039,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725470680136,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA1IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjItZGF0YWZyYW1lLWlsb2MvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW01IHBhc3NlZBtbMG0bWzMybSBpbiAwLjMycxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725425910531,"completed_at":1725470680136},{"slug":"05.3-dataframe-head","position":13,"files":[{"path":".learn/exercises/05.3-dataframe-head/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05.3-dataframe-head/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/05.3-dataframe-head/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/05.3-dataframe-head/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"ICAgIyAgICAgICBOYW1lIFR5cGUgMSAgVHlwZSAyICAuLi4gIFNwLiBEZWYgIFNwZWVkICBHZW5lcmF0aW9uICBMZWdlbmRhcnkKMCAgMSAgQnVsYmFzYXVyICBHcmFzcyAgUG9pc29uICAuLi4gICAgICAgNjUgICAgIDQ1ICAgICAgICAgICAxICAgICAgRmFsc2UKMSAgMiAgICBJdnlzYXVyICBHcmFzcyAgUG9pc29uICAuLi4gICAgICAgODAgICAgIDYwICAgICAgICAgICAxICAgICAgRmFsc2UKMiAgMyAgIFZlbnVzYXVyICBHcmFzcyAgUG9pc29uICAuLi4gICAgICAxMDAgICAgIDgwICAgICAgICAgICAxICAgICAgRmFsc2UKClszIHJvd3MgeCAxMiBjb2x1bW5zXQo=","signal":null,"memoryUsage":524288,"cpuUsage":7613,"starting_at":1725471075812,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5oZWFkKDMpKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725471076211,"exit_code":0}],"tests":[{"starting_at":1725471330119,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5oZWFkKDMpKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725471330839,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjMtZGF0YWZyYW1lLWhlYWQvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW00IHBhc3NlZBtbMG0bWzMybSBpbiAwLjQwcxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725470684459,"completed_at":1725471330839},{"slug":"05.4-dataframe-tail","position":14,"files":[{"path":".learn/exercises/05.4-dataframe-tail/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05.4-dataframe-tail/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/05.4-dataframe-tail/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/05.4-dataframe-tail/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"ICAgICAgICMgICAgICAgICAgICAgICAgIE5hbWUgICBUeXBlIDEgIC4uLiBTcGVlZCAgR2VuZXJhdGlvbiAgTGVnZW5kYXJ5Cjc5NyAgNzIwICBIb29wYUhvb3BhIENvbmZpbmVkICBQc3ljaGljICAuLi4gICAgNzAgICAgICAgICAgIDYgICAgICAgVHJ1ZQo3OTggIDcyMCAgIEhvb3BhSG9vcGEgVW5ib3VuZCAgUHN5Y2hpYyAgLi4uICAgIDgwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk5ICA3MjEgICAgICAgICAgICBWb2xjYW5pb24gICAgIEZpcmUgIC4uLiAgICA3MCAgICAgICAgICAgNiAgICAgICBUcnVlCgpbMyByb3dzIHggMTIgY29sdW1uc10K","signal":null,"memoryUsage":524288,"cpuUsage":7902,"starting_at":1725573089184,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi50YWlsKDMpKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725573091160,"exit_code":0}],"tests":[{"starting_at":1725573099460,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi50YWlsKDMpKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725573100618,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjQtZGF0YWZyYW1lLXRhaWwvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW00IHBhc3NlZBtbMG0bWzMybSBpbiAwLjMzcxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725471335740,"completed_at":1725573100618},{"slug":"05.5-print-columns","position":15,"files":[{"path":".learn/exercises/05.5-print-columns/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05.5-print-columns/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/05.5-print-columns/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/05.5-print-columns/test.py","name":"test.py","hidden":true}],"ai_interactions":[{"starting_at":1725574226605,"student_message":"cual es el error?\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Pandas for machine learning\n<!-- endhide -->\n\nPandas es la mejor y más popular biblioteca de [Python](https://4geeks.com/es/lesson/que-es-python-tutorial) para machine learning. Esta biblioteca ofrece una amplia variedad de funciones que te ayudarán a manipular datos, optimizar tu algoritmo de machine learning y mucho más. Este **tutorial de python pandas** te ayudaremos a familiarizarte con esta biblioteca y dominar las funcionalidades más utilizadas con ejemplos de código y tutoriales en video que te ayudarán a crear tu primer marco de datos (data frame), limpiar un dataset de información, leer archivos CSV, entre otras cosas...\n\n> Este tutorial de pandas [es interactivo usando LearnPack](https://4geeks.com/es/learnpack-es) y tambien cuenta con un [mentor AI llamado Rigobot](https://4geeks.com/es/rigobot), que lee tu codigo y responde todas tus preguntas inmediatamente.\n\nLos ejercicios en este tutorial han sido creados en aproximadamente 80 horas de desarrollo por expertos en machine learning y revisados cuidadosamente por nuestros [colaboradores](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) para asegurarnos de que tengas la información más precisa e importante que te ayudará a comenzar tu carrera en machine learning.\n\n## Contenidos a revisar en el tutorial de pandas\n\nEn este tutorial, veremos las funciones más importantes y básicas proporcionadas por Pandas que te ayudarán a trabajar con datos en machine learning. A continuación, algunos de los temas que se cubrirán en este tutorial son:\n\n| Ejercicio     | Descripción del tema                                                                                                    |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|**Instalar Pandas** | Estos ejercicios cubren cómo instalar Pandas, cómo importar la biblioteca Pandas en un archivo de Python, y cómo crear tu primer script en Python.          |\n|**DataSets**       | Estos ejercicios explican qué son los conjuntos de datos y cómo trabajar con ellos.                                                                                |\n|**Series**         | Estos ejercicios explican qué son las **series** en Pandas y cómo usarlas.                                                                    |\n|**DataFrames**     | Estos ejercicios explican cómo crear un **DataFrame** de información y qué funciones se pueden usar para trabajar con ellos.                                    |\n|**Clean DataSets** | Esta clase cubre qué es la limpieza de datos, las funciones que Pandas ofrece para limpiar un DataSet, y las mejores prácticas para limpiar un DataSet. |\n\n## 🌱 ¿Cómo iniciar este tutorial de pandas?\n\nPuedes iniciar este tutorial rapidamente usando nuestra tecnologia `aprende en un clic` para tu maquina local o en la nube en 2 pasos sencillos, [haz click aqui para empezar](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=es&utm_source=github&utm_medium=organic&utm_content=readme).\n\n## Colaboradores\n\nQueremos expresar nuestro más profundo agradecimiento a los siguientes colaboradores por su valioso apoyo en la creación de este tutorial.\n\n| Colaborador       | Cuenta de GitHub                                  |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nEste tutorial y muchos otros ejercicios están diseñados para estudiantes como parte del [Bootcamp de Programación](https://4geeksacademy.com/us/coding-bootcamp) de 4Geeks Academy. Actualmente, tenemos dos cursos disponibles. El primero es el Curso de [Desarrollador Full Stack](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), en este curso aprenderás tecnologías como HTML5, CSS3, JavaScript, Python, Flask, SQL y muchas otras. El segundo es el [Bootcamp de Data Science](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning) donde aprenderás tecnologías como Python, fundamentos de algoritmos, Pandas, bases de datos SQL y muchas otras tecnologías. Puedes encontrar más información sobre estos cursos y el próximo curso de Blockchain y Web3 en la página web oficial de [4Geeks Academy](http://4geeksacademy.com/).\n\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `# Pandas for machine learning\n\nPandas is the best and most popular [Python](https://4geeks.com/lesson/intro-to-python) library for machine learning. This library offers a wide variety of functions that will help you manipulate data, optimize your machine-learning algorithm, and much more. This tutorial will help you to get familiar with this library and master the most used functionalities with code samples and video tutorials that will help you to create your first data frame, clean a dataset of information, read CSV files, etc.\n\n> This Pandas tutorial [is interactive using LearnPack](https://4geeks.com/learnpack) and also features an [AI mentor named Rigobot](https://4geeks.com/rigobot), which reads your code and answers all your questions immediately.\n\nThe exercises in this tutorial have been created after about 60 hours of development by many experts in machine learning and they have been carefully reviewed by our [contributors](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) to make sure you have the most accurate and important information that will help you start your machine learning career. \n\n## Content table\n\nIn this tutorial, we will see the most important and basic functions provided by Pandas that will help you work with data in machine learning. The following are some of the topics that will be covered in this tutorial. \n\n| Exercise      | Description of the topic                                                                                                                           |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|Install Pandas | These exercises cover how to install Pandas, how to import the Pandas library in a Python file, and how to create your first Python script.            |\n|DataSets       | These exercises explain what datasets are and how to work with them.                                                                                   |\n|Series         | These exercises explain what Series are in Pandas and how to use them.                                                                                 |\n|DataFrames     | These exercises explain how to create an information DataFrame and what functions can be used to work with them.                                      |\n|Clean DataSets | This class covers what data cleaning is, the functions Pandas offers to clean up a dataset, and the best practices to use when cleaning a dataset. |\n\n## 🌱 How to start these exercises?\n\nYou can start this tutorial quickly using our `learn in one click` technology for your local machine or in the cloud in 2 simple steps, [click here to get started](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=us&utm_source=github&utm_medium=organic&utm_content=readme).\n\n\n## Contributors\n\nWe would like to express our deepest gratitude to the following contributors for their invaluable support in making this tutorial possible.\n\n| Contributor       | GitHub account                                      |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nThis tutorial and many other exercises are designed for students as part of the 4Geeks Academy's [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp). Currently, we have two courses available. The first one is the [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer). In this course, you will learn technologies like HTML5, CSS3, JavaScript, Python, Flask, SQL and many others. The second one is the [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning), where you will learn technologies like Python, Algorithms' basics, Pandas, SQL Database, and many other technologies. You can find more information about these courses and the upcoming **Blockchain and Web3** course on the official [4Geeks Academy](http://4geeksacademy.com/) web page.\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import io, os, sys, pytest, re\n\n@pytest.mark.it('You must import pandas')\ndef test_import_pandas():\n    path = 'app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"import\\s*pandas\\s*as\\s*pd\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it(\"Use the print function\")\ndef test_output():\n    f = open('app.py')\n    content = f.read()\n    assert \"print\" in content\n\n@pytest.mark.it(\"You should be reading the csv file located at .learn/assets/pokemon_data.csv to create your DataFrame\")\ndef test_reading_csv():\n    f = open('app.py')\n    content = f.read()\n    assert \".learn/assets/pokemon_data.csv\" in content and 'read_csv' in content\n\n@pytest.mark.it('The output should be the expected')\ndef test_expected_output(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert  \"\"\"                        Name Type 1\n0                  Bulbasaur  Grass\n1                    Ivysaur  Grass\n2                   Venusaur  Grass\n3      VenusaurMega Venusaur  Grass\n4                 Charmander   Fire\n5                 Charmeleon   Fire\n6                  Charizard   Fire\n7  CharizardMega Charizard X   Fire\n8  CharizardMega Charizard Y   Fire\n9                   Squirtle  Water\n\"\"\" in captured.out`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `05.5` Print Columns\n\nYou can print the column of your choice, for example:\n\n```python\nprint(data_frame['Type 1'])  # This will print only the column \"Type 1\"\n```\n\nYou can also use the square brackets `[]` to pick the range of rows you want to print, like this:\n\n```python\nprint(data_frame[0:10])\n```\n\nOr you can combine both tricks this way:\n\n```python\nprint(data_frame['Type 1'][0:10])\n```\n\n## 📝 Instructions:\n\n1. Use the same DataFrame variable you used in the previous exercise.\n\n2. Print only the columns 'Name' and 'Type 1' from your Dataset, and only the first 10 elements.\n\n\n## 💻 Expected Result:\n\nYour terminal should look like this:\n\n![Expected result](../../assets/07-print-columns.png)\n\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs: ============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-7.3.1, pluggy-1.0.0\nrootdir: /workspaces/python-pandas-tutorial\nplugins: testdox-3.1.0\ncollected 4 items\n\n.learn/exercises/05.5-print-columns/test.py ...F                         [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_expected_output _____________________________\n\nself = Index(['#', 'Name', 'Type 1', 'Type 2', 'HP', 'Attack', 'Defense', 'Sp. Atk',\n       'Sp. Def', 'Speed', 'Generation', 'Legendary'],\n      dtype='object')\nkey = ('Name', 'Type 1')\n\n    def get_loc(self, key):\n        \"\"\"\n        Get integer location, slice or boolean mask for requested label.\n    \n        Parameters\n        ----------\n        key : label\n    \n        Returns\n        -------\n        int if unique index, slice if monotonic index, else mask\n    \n        Examples\n        --------\n        >>> unique_index = pd.Index(list('abc'))\n        >>> unique_index.get_loc('b')\n        1\n    \n        >>> monotonic_index = pd.Index(list('abbc'))\n        >>> monotonic_index.get_loc('b')\n        slice(1, 3, None)\n    \n        >>> non_monotonic_index = pd.Index(list('abcb'))\n        >>> non_monotonic_index.get_loc('b')\n        array([False,  True, False,  True])\n        \"\"\"\n        casted_key = self._maybe_cast_indexer(key)\n        try:\n>           return self._engine.get_loc(casted_key)\n\n/home/vscode/.local/lib/python3.10/site-packages/pandas/core/indexes/base.py:3805: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\n\nindex.pyx:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\n\nindex.pyx:196: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\n\npandas/_libs/hashtable_class_helper.pxi:7081: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   KeyError: ('Name', 'Type 1')\n\npandas/_libs/hashtable_class_helper.pxi:7089: KeyError\n\nThe above exception was the direct cause of the following exception:\n\ncapsys = <_pytest.capture.CaptureFixture object at 0x7c6f7f93a440>\n\n    @pytest.mark.it('The output should be the expected')\n    def test_expected_output(capsys):\n>       import app\n\n.learn/exercises/05.5-print-columns/test.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napp.py:46: in <module>\n    print(df['Name', 'Type 1'][0:10])\n/home/vscode/.local/lib/python3.10/site-packages/pandas/core/frame.py:4102: in __getitem__\n    indexer = self.columns.get_loc(key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Index(['#', 'Name', 'Type 1', 'Type 2', 'HP', 'Attack', 'Defense', 'Sp. Atk',\n       'Sp. Def', 'Speed', 'Generation', 'Legendary'],\n      dtype='object')\nkey = ('Name', 'Type 1')\n\n    def get_loc(self, key):\n        \"\"\"\n        Get integer location, slice or boolean mask for requested label.\n    \n        Parameters\n        ----------\n        key : label\n    \n        Returns\n        -------\n        int if unique index, slice if monotonic index, else mask\n    \n        Examples\n        --------\n        >>> unique_index = pd.Index(list('abc'))\n        >>> unique_index.get_loc('b')\n        1\n    \n        >>> monotonic_index = pd.Index(list('abbc'))\n        >>> monotonic_index.get_loc('b')\n        slice(1, 3, None)\n    \n        >>> non_monotonic_index = pd.Index(list('abcb'))\n        >>> non_monotonic_index.get_loc('b')\n        array([False,  True, False,  True])\n        \"\"\"\n        casted_key = self._maybe_cast_indexer(key)\n        try:\n            return self._engine.get_loc(casted_key)\n        except KeyError as err:\n            if isinstance(casted_key, slice) or (\n                isinstance(casted_key, abc.Iterable)\n                and any(isinstance(x, slice) for x in casted_key)\n            ):\n                raise InvalidIndexError(key)\n>           raise KeyError(key) from err\nE           KeyError: ('Name', 'Type 1')\n\n/home/vscode/.local/lib/python3.10/site-packages/pandas/core/indexes/base.py:3812: KeyError\n=========================== short test summary info ============================\nFAILED .learn/exercises/05.5-print-columns/test.py::test_expected_output - KeyError: ('Name', 'Type 1')\n========================= 1 failed, 3 passed in 0.55s ==========================\n,\n\n   \n          Your code must to comply with the following tests: \n\n     x (fail) 0. The output should be the expected \n\n","ending_at":1725574229744,"ai_response":"Parece que el error se debe a la forma en que estás intentando acceder a las columnas 'Name' y 'Type 1'. En Pandas, para seleccionar múltiples columnas, debes usar una lista de nombres de columnas dentro de los corchetes. \n\nPor ejemplo, en lugar de:\n\n```python\nprint(df['Name', 'Type 1'][0:10])\n```\n\nDeberías usar:\n\n```python\nprint(df[['Name', 'Type 1']][0:10])\n```\n\nObserva que las columnas están dentro de una lista `[['Name', 'Type 1']]`.\n\n¿Por qué no intentas hacer ese cambio y ver si resuelve el problema?"},{"starting_at":1725574580982,"student_message":"no entiendo por que sigue imprimiendo las ultimas filas\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Pandas for machine learning\n<!-- endhide -->\n\nPandas es la mejor y más popular biblioteca de [Python](https://4geeks.com/es/lesson/que-es-python-tutorial) para machine learning. Esta biblioteca ofrece una amplia variedad de funciones que te ayudarán a manipular datos, optimizar tu algoritmo de machine learning y mucho más. Este **tutorial de python pandas** te ayudaremos a familiarizarte con esta biblioteca y dominar las funcionalidades más utilizadas con ejemplos de código y tutoriales en video que te ayudarán a crear tu primer marco de datos (data frame), limpiar un dataset de información, leer archivos CSV, entre otras cosas...\n\n> Este tutorial de pandas [es interactivo usando LearnPack](https://4geeks.com/es/learnpack-es) y tambien cuenta con un [mentor AI llamado Rigobot](https://4geeks.com/es/rigobot), que lee tu codigo y responde todas tus preguntas inmediatamente.\n\nLos ejercicios en este tutorial han sido creados en aproximadamente 80 horas de desarrollo por expertos en machine learning y revisados cuidadosamente por nuestros [colaboradores](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) para asegurarnos de que tengas la información más precisa e importante que te ayudará a comenzar tu carrera en machine learning.\n\n## Contenidos a revisar en el tutorial de pandas\n\nEn este tutorial, veremos las funciones más importantes y básicas proporcionadas por Pandas que te ayudarán a trabajar con datos en machine learning. A continuación, algunos de los temas que se cubrirán en este tutorial son:\n\n| Ejercicio     | Descripción del tema                                                                                                    |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|**Instalar Pandas** | Estos ejercicios cubren cómo instalar Pandas, cómo importar la biblioteca Pandas en un archivo de Python, y cómo crear tu primer script en Python.          |\n|**DataSets**       | Estos ejercicios explican qué son los conjuntos de datos y cómo trabajar con ellos.                                                                                |\n|**Series**         | Estos ejercicios explican qué son las **series** en Pandas y cómo usarlas.                                                                    |\n|**DataFrames**     | Estos ejercicios explican cómo crear un **DataFrame** de información y qué funciones se pueden usar para trabajar con ellos.                                    |\n|**Clean DataSets** | Esta clase cubre qué es la limpieza de datos, las funciones que Pandas ofrece para limpiar un DataSet, y las mejores prácticas para limpiar un DataSet. |\n\n## 🌱 ¿Cómo iniciar este tutorial de pandas?\n\nPuedes iniciar este tutorial rapidamente usando nuestra tecnologia `aprende en un clic` para tu maquina local o en la nube en 2 pasos sencillos, [haz click aqui para empezar](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=es&utm_source=github&utm_medium=organic&utm_content=readme).\n\n## Colaboradores\n\nQueremos expresar nuestro más profundo agradecimiento a los siguientes colaboradores por su valioso apoyo en la creación de este tutorial.\n\n| Colaborador       | Cuenta de GitHub                                  |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nEste tutorial y muchos otros ejercicios están diseñados para estudiantes como parte del [Bootcamp de Programación](https://4geeksacademy.com/us/coding-bootcamp) de 4Geeks Academy. Actualmente, tenemos dos cursos disponibles. El primero es el Curso de [Desarrollador Full Stack](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), en este curso aprenderás tecnologías como HTML5, CSS3, JavaScript, Python, Flask, SQL y muchas otras. El segundo es el [Bootcamp de Data Science](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning) donde aprenderás tecnologías como Python, fundamentos de algoritmos, Pandas, bases de datos SQL y muchas otras tecnologías. Puedes encontrar más información sobre estos cursos y el próximo curso de Blockchain y Web3 en la página web oficial de [4Geeks Academy](http://4geeksacademy.com/).\n\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `# Pandas for machine learning\n\nPandas is the best and most popular [Python](https://4geeks.com/lesson/intro-to-python) library for machine learning. This library offers a wide variety of functions that will help you manipulate data, optimize your machine-learning algorithm, and much more. This tutorial will help you to get familiar with this library and master the most used functionalities with code samples and video tutorials that will help you to create your first data frame, clean a dataset of information, read CSV files, etc.\n\n> This Pandas tutorial [is interactive using LearnPack](https://4geeks.com/learnpack) and also features an [AI mentor named Rigobot](https://4geeks.com/rigobot), which reads your code and answers all your questions immediately.\n\nThe exercises in this tutorial have been created after about 60 hours of development by many experts in machine learning and they have been carefully reviewed by our [contributors](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) to make sure you have the most accurate and important information that will help you start your machine learning career. \n\n## Content table\n\nIn this tutorial, we will see the most important and basic functions provided by Pandas that will help you work with data in machine learning. The following are some of the topics that will be covered in this tutorial. \n\n| Exercise      | Description of the topic                                                                                                                           |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|Install Pandas | These exercises cover how to install Pandas, how to import the Pandas library in a Python file, and how to create your first Python script.            |\n|DataSets       | These exercises explain what datasets are and how to work with them.                                                                                   |\n|Series         | These exercises explain what Series are in Pandas and how to use them.                                                                                 |\n|DataFrames     | These exercises explain how to create an information DataFrame and what functions can be used to work with them.                                      |\n|Clean DataSets | This class covers what data cleaning is, the functions Pandas offers to clean up a dataset, and the best practices to use when cleaning a dataset. |\n\n## 🌱 How to start these exercises?\n\nYou can start this tutorial quickly using our `learn in one click` technology for your local machine or in the cloud in 2 simple steps, [click here to get started](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=us&utm_source=github&utm_medium=organic&utm_content=readme).\n\n\n## Contributors\n\nWe would like to express our deepest gratitude to the following contributors for their invaluable support in making this tutorial possible.\n\n| Contributor       | GitHub account                                      |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nThis tutorial and many other exercises are designed for students as part of the 4Geeks Academy's [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp). Currently, we have two courses available. The first one is the [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer). In this course, you will learn technologies like HTML5, CSS3, JavaScript, Python, Flask, SQL and many others. The second one is the [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning), where you will learn technologies like Python, Algorithms' basics, Pandas, SQL Database, and many other technologies. You can find more information about these courses and the upcoming **Blockchain and Web3** course on the official [4Geeks Academy](http://4geeksacademy.com/) web page.\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import io, os, sys, pytest, re\n\n@pytest.mark.it('You must import pandas')\ndef test_import_pandas():\n    path = 'app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"import\\s*pandas\\s*as\\s*pd\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it(\"Use the print function\")\ndef test_output():\n    f = open('app.py')\n    content = f.read()\n    assert \"print\" in content\n\n@pytest.mark.it(\"You should be reading the csv file located at .learn/assets/pokemon_data.csv to create your DataFrame\")\ndef test_reading_csv():\n    f = open('app.py')\n    content = f.read()\n    assert \".learn/assets/pokemon_data.csv\" in content and 'read_csv' in content\n\n@pytest.mark.it('The output should be the expected')\ndef test_expected_output(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert  \"\"\"                        Name Type 1\n0                  Bulbasaur  Grass\n1                    Ivysaur  Grass\n2                   Venusaur  Grass\n3      VenusaurMega Venusaur  Grass\n4                 Charmander   Fire\n5                 Charmeleon   Fire\n6                  Charizard   Fire\n7  CharizardMega Charizard X   Fire\n8  CharizardMega Charizard Y   Fire\n9                   Squirtle  Water\n\"\"\" in captured.out`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `05.5` Print Columns\n\nYou can print the column of your choice, for example:\n\n```python\nprint(data_frame['Type 1'])  # This will print only the column \"Type 1\"\n```\n\nYou can also use the square brackets `[]` to pick the range of rows you want to print, like this:\n\n```python\nprint(data_frame[0:10])\n```\n\nOr you can combine both tricks this way:\n\n```python\nprint(data_frame['Type 1'][0:10])\n```\n\n## 📝 Instructions:\n\n1. Use the same DataFrame variable you used in the previous exercise.\n\n2. Print only the columns 'Name' and 'Type 1' from your Dataset, and only the first 10 elements.\n\n\n## 💻 Expected Result:\n\nYour terminal should look like this:\n\n![Expected result](../../assets/07-print-columns.png)\n\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      ","ending_at":1725574584949,"ai_response":"Let's break down the task step by step to ensure we are on the right track. \n\n1. **Import Pandas**: Ensure you have imported the Pandas library.\n2. **Read the CSV file**: Load the dataset into a DataFrame.\n3. **Select Specific Columns**: Select the 'Name' and 'Type 1' columns.\n4. **Print the First 10 Rows**: Print only the first 10 rows of the selected columns.\n\nLet's think about each step. \n\n1. **Importing Pandas**:\n    ```python\n    import pandas as pd\n    ```\n\n2. **Reading the CSV file**:\n    ```python\n    df = pd.read_csv('.learn/assets/pokemon_data.csv')\n    ```\n\n3. **Selecting Specific Columns**:\n    ```python\n    selected_columns = df[['Name', 'Type 1']]\n    ```\n\n4. **Printing the First 10 Rows**:\n    ```python\n    print(selected_columns.head(10))\n    ```\n\nNotice that we use `head(10)` to get the first 10 rows. This ensures that only the first 10 rows are printed.\n\nCan you try combining these steps in your `app.py` file and see if it prints the correct output?"}],"compilations":[{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9pbmRleGVzL2Jhc2UucHkiLCBsaW5lIDM4MDUsIGluIGdldF9sb2MKICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTY3LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTk2LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4MSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4OSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQpLZXlFcnJvcjogKCdOYW1lJywgJ1R5cGUgMScpCgpUaGUgYWJvdmUgZXhjZXB0aW9uIHdhcyB0aGUgZGlyZWN0IGNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgZXhjZXB0aW9uOgoKVHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL3B5dGhvbi1wYW5kYXMtdHV0b3JpYWwvYXBwLnB5IiwgbGluZSA0NiwgaW4gPG1vZHVsZT4KICAgIHByaW50KGRmWydOYW1lJywgJ1R5cGUgMSddWzA6MTBdKQogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9mcmFtZS5weSIsIGxpbmUgNDEwMiwgaW4gX19nZXRpdGVtX18KICAgIGluZGV4ZXIgPSBzZWxmLmNvbHVtbnMuZ2V0X2xvYyhrZXkpCiAgRmlsZSAiL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLQ==","stdout":"","signal":"SIGTERM","memoryUsage":524288,"cpuUsage":4553,"errorType":"run-time","starting_at":1725574182871,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZlsnTmFtZScsICdUeXBlIDEnXVswOjEwXSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725574183240,"exit_code":null},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9pbmRleGVzL2Jhc2UucHkiLCBsaW5lIDM4MDUsIGluIGdldF9sb2MKICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTY3LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTk2LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4MSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4OSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQpLZXlFcnJvcjogKCdOYW1lJywgJ1R5cGUgMScpCgpUaGUgYWJvdmUgZXhjZXB0aW9uIHdhcyB0aGUgZGlyZWN0IGNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgZXhjZXB0aW9uOgoKVHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL3B5dGhvbi1wYW5kYXMtdHV0b3JpYWwvYXBwLnB5IiwgbGluZSA0NiwgaW4gPG1vZHVsZT4KICAgIHByaW50KGRmWydOYW1lJywgJ1R5cGUgMSddWzA6MTBdKQogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9mcmFtZS5weSIsIGxpbmUgNDEwMiwgaW4gX19nZXRpdGVtX18KICAgIGluZGV4ZXIgPSBzZWxmLmNvbHVtbnMuZ2V0X2xvYyhrZXkpCiAgRmlsZSAiL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLQ==","stdout":"","signal":"SIGTERM","memoryUsage":262144,"cpuUsage":5374,"errorType":"run-time","starting_at":1725574201213,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZlsnTmFtZScsICdUeXBlIDEnXVswOjEwXSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725574201565,"exit_code":null},{"stderr":"","stdout":"ICAgICAgICAgICAgICAgICAgICAgIE5hbWUgICBUeXBlIDEKMCAgICAgICAgICAgICAgICBCdWxiYXNhdXIgICAgR3Jhc3MKMSAgICAgICAgICAgICAgICAgIEl2eXNhdXIgICAgR3Jhc3MKMiAgICAgICAgICAgICAgICAgVmVudXNhdXIgICAgR3Jhc3MKMyAgICBWZW51c2F1ck1lZ2EgVmVudXNhdXIgICAgR3Jhc3MKNCAgICAgICAgICAgICAgIENoYXJtYW5kZXIgICAgIEZpcmUKLi4gICAgICAgICAgICAgICAgICAgICAuLi4gICAgICAuLi4KNzk1ICAgICAgICAgICAgICAgIERpYW5jaWUgICAgIFJvY2sKNzk2ICAgIERpYW5jaWVNZWdhIERpYW5jaWUgICAgIFJvY2sKNzk3ICAgIEhvb3BhSG9vcGEgQ29uZmluZWQgIFBzeWNoaWMKNzk4ICAgICBIb29wYUhvb3BhIFVuYm91bmQgIFBzeWNoaWMKNzk5ICAgICAgICAgICAgICBWb2xjYW5pb24gICAgIEZpcmUKCls4MDAgcm93cyB4IDIgY29sdW1uc10K","signal":null,"memoryUsage":393216,"cpuUsage":7804,"starting_at":1725574260854,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZltbJ05hbWUnLCAnVHlwZSAxJ11bMDoxMF1dKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725574261244,"exit_code":0},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL3B5dGhvbi1wYW5kYXMtdHV0b3JpYWwvYXBwLnB5IiwgbGluZSA0NiwgaW4gPG1vZHVsZT4KICAgIHByaW50KGRmW1snTmFtZScsICdUeXBlIDEnXVsxMF1dKQpJbmRleEVycm9yOiBsaXN0IGluZGV4IG91dCBvZiByYW5nZQo=","stdout":"","signal":null,"memoryUsage":262144,"cpuUsage":5396,"errorType":"run-time","starting_at":1725574292285,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZltbJ05hbWUnLCAnVHlwZSAxJ11bMTBdXSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725574292707,"exit_code":1},{"stderr":"","stdout":"ICAgICAgICAgICAgICAgICAgICAgIE5hbWUgICBUeXBlIDEKMCAgICAgICAgICAgICAgICBCdWxiYXNhdXIgICAgR3Jhc3MKMSAgICAgICAgICAgICAgICAgIEl2eXNhdXIgICAgR3Jhc3MKMiAgICAgICAgICAgICAgICAgVmVudXNhdXIgICAgR3Jhc3MKMyAgICBWZW51c2F1ck1lZ2EgVmVudXNhdXIgICAgR3Jhc3MKNCAgICAgICAgICAgICAgIENoYXJtYW5kZXIgICAgIEZpcmUKLi4gICAgICAgICAgICAgICAgICAgICAuLi4gICAgICAuLi4KNzk1ICAgICAgICAgICAgICAgIERpYW5jaWUgICAgIFJvY2sKNzk2ICAgIERpYW5jaWVNZWdhIERpYW5jaWUgICAgIFJvY2sKNzk3ICAgIEhvb3BhSG9vcGEgQ29uZmluZWQgIFBzeWNoaWMKNzk4ICAgICBIb29wYUhvb3BhIFVuYm91bmQgIFBzeWNoaWMKNzk5ICAgICAgICAgICAgICBWb2xjYW5pb24gICAgIEZpcmUKCls4MDAgcm93cyB4IDIgY29sdW1uc10K","signal":null,"memoryUsage":393216,"cpuUsage":8019,"starting_at":1725574504202,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZltbJ05hbWUnLCAnVHlwZSAxJ11bMDo5XV0pCiMgcHJpbnQoZGYuaWxvY1sxMzMsNl0p","ended_at":1725574504594,"exit_code":0},{"stderr":"","stdout":"ICAgICAgVHlwZSAxCjAgICAgICBHcmFzcwoxICAgICAgR3Jhc3MKMiAgICAgIEdyYXNzCjMgICAgICBHcmFzcwo0ICAgICAgIEZpcmUKLi4gICAgICAgLi4uCjc5NSAgICAgUm9jawo3OTYgICAgIFJvY2sKNzk3ICBQc3ljaGljCjc5OCAgUHN5Y2hpYwo3OTkgICAgIEZpcmUKCls4MDAgcm93cyB4IDEgY29sdW1uc10K","signal":null,"memoryUsage":393216,"cpuUsage":5185,"starting_at":1725574536876,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZltbJ1R5cGUgMSddWzA6MTBdXSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725574537323,"exit_code":0},{"stderr":"","stdout":"ICAgICAgICAgICAgICAgICAgICAgICAgTmFtZSBUeXBlIDEKMCAgICAgICAgICAgICAgICAgIEJ1bGJhc2F1ciAgR3Jhc3MKMSAgICAgICAgICAgICAgICAgICAgSXZ5c2F1ciAgR3Jhc3MKMiAgICAgICAgICAgICAgICAgICBWZW51c2F1ciAgR3Jhc3MKMyAgICAgIFZlbnVzYXVyTWVnYSBWZW51c2F1ciAgR3Jhc3MKNCAgICAgICAgICAgICAgICAgQ2hhcm1hbmRlciAgIEZpcmUKNSAgICAgICAgICAgICAgICAgQ2hhcm1lbGVvbiAgIEZpcmUKNiAgICAgICAgICAgICAgICAgIENoYXJpemFyZCAgIEZpcmUKNyAgQ2hhcml6YXJkTWVnYSBDaGFyaXphcmQgWCAgIEZpcmUKOCAgQ2hhcml6YXJkTWVnYSBDaGFyaXphcmQgWSAgIEZpcmUKOSAgICAgICAgICAgICAgICAgICBTcXVpcnRsZSAgV2F0ZXIK","signal":null,"memoryUsage":524288,"cpuUsage":8480,"starting_at":1725574709019,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpzZWxlY3RlZF9jb2x1bW5zID0gZGZbWydOYW1lJywgJ1R5cGUgMSddXQpwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725574709401,"exit_code":0}],"tests":[{"starting_at":1725574223494,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZlsnTmFtZScsICdUeXBlIDEnXVswOjEwXSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725574224338,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjUtcHJpbnQtY29sdW1ucy90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCnNlbGYgPSBJbmRleChbJyMnLCAnTmFtZScsICdUeXBlIDEnLCAnVHlwZSAyJywgJ0hQJywgJ0F0dGFjaycsICdEZWZlbnNlJywgJ1NwLiBBdGsnLAogICAgICAgJ1NwLiBEZWYnLCAnU3BlZWQnLCAnR2VuZXJhdGlvbicsICdMZWdlbmRhcnknXSwKICAgICAgZHR5cGU9J29iamVjdCcpCmtleSA9ICgnTmFtZScsICdUeXBlIDEnKQoKICAgIGRlZiBnZXRfbG9jKHNlbGYsIGtleSk6CiAgICAgICAgIiIiCiAgICAgICAgR2V0IGludGVnZXIgbG9jYXRpb24sIHNsaWNlIG9yIGJvb2xlYW4gbWFzayBmb3IgcmVxdWVzdGVkIGxhYmVsLgogICAgCiAgICAgICAgUGFyYW1ldGVycwogICAgICAgIC0tLS0tLS0tLS0KICAgICAgICBrZXkgOiBsYWJlbAogICAgCiAgICAgICAgUmV0dXJucwogICAgICAgIC0tLS0tLS0KICAgICAgICBpbnQgaWYgdW5pcXVlIGluZGV4LCBzbGljZSBpZiBtb25vdG9uaWMgaW5kZXgsIGVsc2UgbWFzawogICAgCiAgICAgICAgRXhhbXBsZXMKICAgICAgICAtLS0tLS0tLQogICAgICAgID4+PiB1bmlxdWVfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmMnKSkKICAgICAgICA+Pj4gdW5pcXVlX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIDEKICAgIAogICAgICAgID4+PiBtb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmJjJykpCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBzbGljZSgxLCAzLCBOb25lKQogICAgCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmNiJykpCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgYXJyYXkoW0ZhbHNlLCAgVHJ1ZSwgRmFsc2UsICBUcnVlXSkKICAgICAgICAiIiIKICAgICAgICBjYXN0ZWRfa2V5ID0gc2VsZi5fbWF5YmVfY2FzdF9pbmRleGVyKGtleSkKICAgICAgICB0cnk6Cj4gICAgICAgICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQoKG1sxbRtbMzFtL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3BhbmRhcy9jb3JlL2luZGV4ZXMvYmFzZS5weRtbMG06MzgwNTogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/CgobWzFtG1szMW1pbmRleC5weXgbWzBtOjE2NzogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/CgobWzFtG1szMW1pbmRleC5weXgbWzBtOjE5NjogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/CgobWzFtG1szMW1wYW5kYXMvX2xpYnMvaGFzaHRhYmxlX2NsYXNzX2hlbHBlci5weGkbWzBtOjcwODE6IApfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIAoKPiAgID8/PwobWzFtG1szMW1FICAgS2V5RXJyb3I6ICgnTmFtZScsICdUeXBlIDEnKRtbMG0KChtbMW0bWzMxbXBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aRtbMG06NzA4OTogS2V5RXJyb3IKChtbMzNtVGhlIGFib3ZlIGV4Y2VwdGlvbiB3YXMgdGhlIGRpcmVjdCBjYXVzZSBvZiB0aGUgZm9sbG93aW5nIGV4Y2VwdGlvbjobWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDdjNmY3ZjkzYTQ0MD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1RoZSBvdXRwdXQgc2hvdWxkIGJlIHRoZSBleHBlY3RlZCcpCiAgICBkZWYgdGVzdF9leHBlY3RlZF9vdXRwdXQoY2Fwc3lzKToKPiAgICAgICBpbXBvcnQgYXBwCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzA1LjUtcHJpbnQtY29sdW1ucy90ZXN0LnB5G1swbToyNTogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gChtbMW0bWzMxbWFwcC5weRtbMG06NDY6IGluIDxtb2R1bGU+CiAgICBwcmludChkZlsnTmFtZScsICdUeXBlIDEnXVswOjEwXSkKG1sxbRtbMzFtL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3BhbmRhcy9jb3JlL2ZyYW1lLnB5G1swbTo0MTAyOiBpbiBfX2dldGl0ZW1fXwogICAgaW5kZXhlciA9IHNlbGYuY29sdW1ucy5nZXRfbG9jKGtleSkKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCnNlbGYgPSBJbmRleChbJyMnLCAnTmFtZScsICdUeXBlIDEnLCAnVHlwZSAyJywgJ0hQJywgJ0F0dGFjaycsICdEZWZlbnNlJywgJ1NwLiBBdGsnLAogICAgICAgJ1NwLiBEZWYnLCAnU3BlZWQnLCAnR2VuZXJhdGlvbicsICdMZWdlbmRhcnknXSwKICAgICAgZHR5cGU9J29iamVjdCcpCmtleSA9ICgnTmFtZScsICdUeXBlIDEnKQoKICAgIGRlZiBnZXRfbG9jKHNlbGYsIGtleSk6CiAgICAgICAgIiIiCiAgICAgICAgR2V0IGludGVnZXIgbG9jYXRpb24sIHNsaWNlIG9yIGJvb2xlYW4gbWFzayBmb3IgcmVxdWVzdGVkIGxhYmVsLgogICAgCiAgICAgICAgUGFyYW1ldGVycwogICAgICAgIC0tLS0tLS0tLS0KICAgICAgICBrZXkgOiBsYWJlbAogICAgCiAgICAgICAgUmV0dXJucwogICAgICAgIC0tLS0tLS0KICAgICAgICBpbnQgaWYgdW5pcXVlIGluZGV4LCBzbGljZSBpZiBtb25vdG9uaWMgaW5kZXgsIGVsc2UgbWFzawogICAgCiAgICAgICAgRXhhbXBsZXMKICAgICAgICAtLS0tLS0tLQogICAgICAgID4+PiB1bmlxdWVfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmMnKSkKICAgICAgICA+Pj4gdW5pcXVlX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIDEKICAgIAogICAgICAgID4+PiBtb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmJjJykpCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBzbGljZSgxLCAzLCBOb25lKQogICAgCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmNiJykpCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgYXJyYXkoW0ZhbHNlLCAgVHJ1ZSwgRmFsc2UsICBUcnVlXSkKICAgICAgICAiIiIKICAgICAgICBjYXN0ZWRfa2V5ID0gc2VsZi5fbWF5YmVfY2FzdF9pbmRleGVyKGtleSkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogICAgICAgIGV4Y2VwdCBLZXlFcnJvciBhcyBlcnI6CiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UoY2FzdGVkX2tleSwgc2xpY2UpIG9yICgKICAgICAgICAgICAgICAgIGlzaW5zdGFuY2UoY2FzdGVkX2tleSwgYWJjLkl0ZXJhYmxlKQogICAgICAgICAgICAgICAgYW5kIGFueShpc2luc3RhbmNlKHgsIHNsaWNlKSBmb3IgeCBpbiBjYXN0ZWRfa2V5KQogICAgICAgICAgICApOgogICAgICAgICAgICAgICAgcmFpc2UgSW52YWxpZEluZGV4RXJyb3Ioa2V5KQo+ICAgICAgICAgICByYWlzZSBLZXlFcnJvcihrZXkpIGZyb20gZXJyChtbMW0bWzMxbUUgICAgICAgICAgIEtleUVycm9yOiAoJ05hbWUnLCAnVHlwZSAxJykbWzBtCgobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5G1swbTozODEyOiBLZXlFcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDUuNS1wcmludC1jb2x1bW5zL3Rlc3QucHk6OhtbMW10ZXN0X2V4cGVjdGVkX291dHB1dBtbMG0gLSBLZXlFcnJvcjogKCdOYW1lJywgJ1R5cGUgMScpChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMxbRtbMW0xIGZhaWxlZBtbMG0sIBtbMzJtMyBwYXNzZWQbWzBtG1szMW0gaW4gMC41NXMbWzBtG1szMW0gPT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjUtcHJpbnQtY29sdW1ucy90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCnNlbGYgPSBJbmRleChbJyMnLCAnTmFtZScsICdUeXBlIDEnLCAnVHlwZSAyJywgJ0hQJywgJ0F0dGFjaycsICdEZWZlbnNlJywgJ1NwLiBBdGsnLAogICAgICAgJ1NwLiBEZWYnLCAnU3BlZWQnLCAnR2VuZXJhdGlvbicsICdMZWdlbmRhcnknXSwKICAgICAgZHR5cGU9J29iamVjdCcpCmtleSA9ICgnTmFtZScsICdUeXBlIDEnKQoKICAgIGRlZiBnZXRfbG9jKHNlbGYsIGtleSk6CiAgICAgICAgIiIiCiAgICAgICAgR2V0IGludGVnZXIgbG9jYXRpb24sIHNsaWNlIG9yIGJvb2xlYW4gbWFzayBmb3IgcmVxdWVzdGVkIGxhYmVsLgogICAgCiAgICAgICAgUGFyYW1ldGVycwogICAgICAgIC0tLS0tLS0tLS0KICAgICAgICBrZXkgOiBsYWJlbAogICAgCiAgICAgICAgUmV0dXJucwogICAgICAgIC0tLS0tLS0KICAgICAgICBpbnQgaWYgdW5pcXVlIGluZGV4LCBzbGljZSBpZiBtb25vdG9uaWMgaW5kZXgsIGVsc2UgbWFzawogICAgCiAgICAgICAgRXhhbXBsZXMKICAgICAgICAtLS0tLS0tLQogICAgICAgID4+PiB1bmlxdWVfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmMnKSkKICAgICAgICA+Pj4gdW5pcXVlX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIDEKICAgIAogICAgICAgID4+PiBtb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmJjJykpCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBzbGljZSgxLCAzLCBOb25lKQogICAgCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmNiJykpCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgYXJyYXkoW0ZhbHNlLCAgVHJ1ZSwgRmFsc2UsICBUcnVlXSkKICAgICAgICAiIiIKICAgICAgICBjYXN0ZWRfa2V5ID0gc2VsZi5fbWF5YmVfY2FzdF9pbmRleGVyKGtleSkKICAgICAgICB0cnk6Cj4gICAgICAgICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQoKG1sxbRtbMzFtL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3BhbmRhcy9jb3JlL2luZGV4ZXMvYmFzZS5weRtbMG06MzgwNTogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/CgobWzFtG1szMW1pbmRleC5weXgbWzBtOjE2NzogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/CgobWzFtG1szMW1pbmRleC5weXgbWzBtOjE5NjogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/CgobWzFtG1szMW1wYW5kYXMvX2xpYnMvaGFzaHRhYmxlX2NsYXNzX2hlbHBlci5weGkbWzBtOjcwODE6IApfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIAoKPiAgID8/PwobWzFtG1szMW1FICAgS2V5RXJyb3I6ICgnTmFtZScsICdUeXBlIDEnKRtbMG0KChtbMW0bWzMxbXBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aRtbMG06NzA4OTogS2V5RXJyb3IKChtbMzNtVGhlIGFib3ZlIGV4Y2VwdGlvbiB3YXMgdGhlIGRpcmVjdCBjYXVzZSBvZiB0aGUgZm9sbG93aW5nIGV4Y2VwdGlvbjobWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDdjNmY3ZjkzYTQ0MD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1RoZSBvdXRwdXQgc2hvdWxkIGJlIHRoZSBleHBlY3RlZCcpCiAgICBkZWYgdGVzdF9leHBlY3RlZF9vdXRwdXQoY2Fwc3lzKToKPiAgICAgICBpbXBvcnQgYXBwCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzA1LjUtcHJpbnQtY29sdW1ucy90ZXN0LnB5G1swbToyNTogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gChtbMW0bWzMxbWFwcC5weRtbMG06NDY6IGluIDxtb2R1bGU+CiAgICBwcmludChkZlsnTmFtZScsICdUeXBlIDEnXVswOjEwXSkKG1sxbRtbMzFtL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3BhbmRhcy9jb3JlL2ZyYW1lLnB5G1swbTo0MTAyOiBpbiBfX2dldGl0ZW1fXwogICAgaW5kZXhlciA9IHNlbGYuY29sdW1ucy5nZXRfbG9jKGtleSkKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCnNlbGYgPSBJbmRleChbJyMnLCAnTmFtZScsICdUeXBlIDEnLCAnVHlwZSAyJywgJ0hQJywgJ0F0dGFjaycsICdEZWZlbnNlJywgJ1NwLiBBdGsnLAogICAgICAgJ1NwLiBEZWYnLCAnU3BlZWQnLCAnR2VuZXJhdGlvbicsICdMZWdlbmRhcnknXSwKICAgICAgZHR5cGU9J29iamVjdCcpCmtleSA9ICgnTmFtZScsICdUeXBlIDEnKQoKICAgIGRlZiBnZXRfbG9jKHNlbGYsIGtleSk6CiAgICAgICAgIiIiCiAgICAgICAgR2V0IGludGVnZXIgbG9jYXRpb24sIHNsaWNlIG9yIGJvb2xlYW4gbWFzayBmb3IgcmVxdWVzdGVkIGxhYmVsLgogICAgCiAgICAgICAgUGFyYW1ldGVycwogICAgICAgIC0tLS0tLS0tLS0KICAgICAgICBrZXkgOiBsYWJlbAogICAgCiAgICAgICAgUmV0dXJucwogICAgICAgIC0tLS0tLS0KICAgICAgICBpbnQgaWYgdW5pcXVlIGluZGV4LCBzbGljZSBpZiBtb25vdG9uaWMgaW5kZXgsIGVsc2UgbWFzawogICAgCiAgICAgICAgRXhhbXBsZXMKICAgICAgICAtLS0tLS0tLQogICAgICAgID4+PiB1bmlxdWVfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmMnKSkKICAgICAgICA+Pj4gdW5pcXVlX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIDEKICAgIAogICAgICAgID4+PiBtb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmJjJykpCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBzbGljZSgxLCAzLCBOb25lKQogICAgCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmNiJykpCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgYXJyYXkoW0ZhbHNlLCAgVHJ1ZSwgRmFsc2UsICBUcnVlXSkKICAgICAgICAiIiIKICAgICAgICBjYXN0ZWRfa2V5ID0gc2VsZi5fbWF5YmVfY2FzdF9pbmRleGVyKGtleSkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogICAgICAgIGV4Y2VwdCBLZXlFcnJvciBhcyBlcnI6CiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UoY2FzdGVkX2tleSwgc2xpY2UpIG9yICgKICAgICAgICAgICAgICAgIGlzaW5zdGFuY2UoY2FzdGVkX2tleSwgYWJjLkl0ZXJhYmxlKQogICAgICAgICAgICAgICAgYW5kIGFueShpc2luc3RhbmNlKHgsIHNsaWNlKSBmb3IgeCBpbiBjYXN0ZWRfa2V5KQogICAgICAgICAgICApOgogICAgICAgICAgICAgICAgcmFpc2UgSW52YWxpZEluZGV4RXJyb3Ioa2V5KQo+ICAgICAgICAgICByYWlzZSBLZXlFcnJvcihrZXkpIGZyb20gZXJyChtbMW0bWzMxbUUgICAgICAgICAgIEtleUVycm9yOiAoJ05hbWUnLCAnVHlwZSAxJykbWzBtCgobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5G1swbTozODEyOiBLZXlFcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDUuNS1wcmludC1jb2x1bW5zL3Rlc3QucHk6OhtbMW10ZXN0X2V4cGVjdGVkX291dHB1dBtbMG0gLSBLZXlFcnJvcjogKCdOYW1lJywgJ1R5cGUgMScpChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMxbRtbMW0xIGZhaWxlZBtbMG0sIBtbMzJtMyBwYXNzZWQbWzBtG1szMW0gaW4gMC41NXMbWzBtG1szMW0gPT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCiwKCiAgIAogICAgICAgICAgG1szMW1Zb3VyIGNvZGUgbXVzdCB0byBjb21wbHkgd2l0aCB0aGUgZm9sbG93aW5nIHRlc3RzOhtbMzltIAoKICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMC4gG1szN21UaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQbWzM5bSAKCg==","exit_code":1},{"starting_at":1725574510390,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZltbJ05hbWUnLCAnVHlwZSAxJ11bMDo5XV0pCiMgcHJpbnQoZGYuaWxvY1sxMzMsNl0p","ended_at":1725574511067,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjUtcHJpbnQtY29sdW1ucy90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4NzY1NWUxMTZmZjQwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICIiIiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWUgVHlwZSAxCiAgICAwICAgICAgICAgICAgICAgICAgQnVsYmFzYXVyICBHcmFzcwogICAgMSAgICAgICAgICAgICAgICAgICAgSXZ5c2F1ciAgR3Jhc3MKICAgIDIgICAgICAgICAgICAgICAgICAgVmVudXNhdXIgIEdyYXNzCiAgICAzICAgICAgVmVudXNhdXJNZWdhIFZlbnVzYXVyICBHcmFzcwogICAgNCAgICAgICAgICAgICAgICAgQ2hhcm1hbmRlciAgIEZpcmUKICAgIDUgICAgICAgICAgICAgICAgIENoYXJtZWxlb24gICBGaXJlCiAgICA2ICAgICAgICAgICAgICAgICAgQ2hhcml6YXJkICAgRmlyZQogICAgNyAgQ2hhcml6YXJkTWVnYSBDaGFyaXphcmQgWCAgIEZpcmUKICAgIDggIENoYXJpemFyZE1lZ2EgQ2hhcml6YXJkIFkgICBGaXJlCiAgICA5ICAgICAgICAgICAgICAgICAgIFNxdWlydGxlICBXYXRlcgogICAgIiIiIGluIGNhcHR1cmVkLm91dAobWzFtG1szMW1FICAgICAgIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJyAgICAgICAgICAgICAgICAgICAgICAgIE5hbWUgVHlwZSAxXG4wICAgICAgICAgICAgICAgICAgQnVsYmFzYXVyICBHcmFzc1xuMSAgICAgICAgICAgICAgICAgICAgSXZ5c2F1ciAgR3Jhc3NcbjIgICAgIC4uLiBGaXJlXG43ICBDaGFyaXphcmRNZWdhIENoYXJpemFyZCBYICAgRmlyZVxuOCAgQ2hhcml6YXJkTWVnYSBDaGFyaXphcmQgWSAgIEZpcmVcbjkgICAgICAgICAgICAgICAgICAgU3F1aXJ0bGUgIFdhdGVyXG4nIGluICcgICAgICAgICAgICAgICAgICAgICAgTmFtZSAgIFR5cGUgMVxuMCAgICAgICAgICAgICAgICBCdWxiYXNhdXIgICAgR3Jhc3NcbjEgICAgICAgICAgICAgICAgICBJdnlzYXVyICAgIEdyYXNzXG4yICAgICAuLi5vbmZpbmVkICBQc3ljaGljXG43OTggICAgIEhvb3BhSG9vcGEgVW5ib3VuZCAgUHN5Y2hpY1xuNzk5ICAgICAgICAgICAgICBWb2xjYW5pb24gICAgIEZpcmVcblxuWzgwMCByb3dzIHggMiBjb2x1bW5zXVxuJxtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgd2hlcmUgJyAgICAgICAgICAgICAgICAgICAgICBOYW1lICAgVHlwZSAxXG4wICAgICAgICAgICAgICAgIEJ1bGJhc2F1ciAgICBHcmFzc1xuMSAgICAgICAgICAgICAgICAgIEl2eXNhdXIgICAgR3Jhc3NcbjIgICAgIC4uLm9uZmluZWQgIFBzeWNoaWNcbjc5OCAgICAgSG9vcGFIb29wYSBVbmJvdW5kICBQc3ljaGljXG43OTkgICAgICAgICAgICAgIFZvbGNhbmlvbiAgICAgRmlyZVxuXG5bODAwIHJvd3MgeCAyIGNvbHVtbnNdXG4nID0gQ2FwdHVyZVJlc3VsdChvdXQ9JyAgICAgICAgICAgICAgICAgICAgICBOYW1lICAgVHlwZSAxXG4wICAgICAgICAgICAgICAgIEJ1bGJhc2F1ciAgICBHcmFzc1xuMSAgICAgICAgICAgICAgICAgIEl2eXNhdS4uLlBzeWNoaWNcbjc5OCAgICAgSG9vcGFIb29wYSBVbmJvdW5kICBQc3ljaGljXG43OTkgICAgICAgICAgICAgIFZvbGNhbmlvbiAgICAgRmlyZVxuXG5bODAwIHJvd3MgeCAyIGNvbHVtbnNdXG4nLCBlcnI9JycpLm91dBtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDUuNS1wcmludC1jb2x1bW5zL3Rlc3QucHkbWzBtOjI3OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDUuNS1wcmludC1jb2x1bW5zL3Rlc3QucHk6OhtbMW10ZXN0X2V4cGVjdGVkX291dHB1dBtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcgICAgICAgICAgICAgICAgICAgICAgICBOYW1lIFR5cGUgMVxuMCAgICAgICAgICAgICAuLi4KG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbSwgG1szMm0zIHBhc3NlZBtbMG0bWzMxbSBpbiAwLjM3cxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0K","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjUtcHJpbnQtY29sdW1ucy90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4NzY1NWUxMTZmZjQwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICIiIiAgICAgICAgICAgICAgICAgICAgICAgIE5hbWUgVHlwZSAxCiAgICAwICAgICAgICAgICAgICAgICAgQnVsYmFzYXVyICBHcmFzcwogICAgMSAgICAgICAgICAgICAgICAgICAgSXZ5c2F1ciAgR3Jhc3MKICAgIDIgICAgICAgICAgICAgICAgICAgVmVudXNhdXIgIEdyYXNzCiAgICAzICAgICAgVmVudXNhdXJNZWdhIFZlbnVzYXVyICBHcmFzcwogICAgNCAgICAgICAgICAgICAgICAgQ2hhcm1hbmRlciAgIEZpcmUKICAgIDUgICAgICAgICAgICAgICAgIENoYXJtZWxlb24gICBGaXJlCiAgICA2ICAgICAgICAgICAgICAgICAgQ2hhcml6YXJkICAgRmlyZQogICAgNyAgQ2hhcml6YXJkTWVnYSBDaGFyaXphcmQgWCAgIEZpcmUKICAgIDggIENoYXJpemFyZE1lZ2EgQ2hhcml6YXJkIFkgICBGaXJlCiAgICA5ICAgICAgICAgICAgICAgICAgIFNxdWlydGxlICBXYXRlcgogICAgIiIiIGluIGNhcHR1cmVkLm91dAobWzFtG1szMW1FICAgICAgIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJyAgICAgICAgICAgICAgICAgICAgICAgIE5hbWUgVHlwZSAxXG4wICAgICAgICAgICAgICAgICAgQnVsYmFzYXVyICBHcmFzc1xuMSAgICAgICAgICAgICAgICAgICAgSXZ5c2F1ciAgR3Jhc3NcbjIgICAgIC4uLiBGaXJlXG43ICBDaGFyaXphcmRNZWdhIENoYXJpemFyZCBYICAgRmlyZVxuOCAgQ2hhcml6YXJkTWVnYSBDaGFyaXphcmQgWSAgIEZpcmVcbjkgICAgICAgICAgICAgICAgICAgU3F1aXJ0bGUgIFdhdGVyXG4nIGluICcgICAgICAgICAgICAgICAgICAgICAgTmFtZSAgIFR5cGUgMVxuMCAgICAgICAgICAgICAgICBCdWxiYXNhdXIgICAgR3Jhc3NcbjEgICAgICAgICAgICAgICAgICBJdnlzYXVyICAgIEdyYXNzXG4yICAgICAuLi5vbmZpbmVkICBQc3ljaGljXG43OTggICAgIEhvb3BhSG9vcGEgVW5ib3VuZCAgUHN5Y2hpY1xuNzk5ICAgICAgICAgICAgICBWb2xjYW5pb24gICAgIEZpcmVcblxuWzgwMCByb3dzIHggMiBjb2x1bW5zXVxuJxtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgd2hlcmUgJyAgICAgICAgICAgICAgICAgICAgICBOYW1lICAgVHlwZSAxXG4wICAgICAgICAgICAgICAgIEJ1bGJhc2F1ciAgICBHcmFzc1xuMSAgICAgICAgICAgICAgICAgIEl2eXNhdXIgICAgR3Jhc3NcbjIgICAgIC4uLm9uZmluZWQgIFBzeWNoaWNcbjc5OCAgICAgSG9vcGFIb29wYSBVbmJvdW5kICBQc3ljaGljXG43OTkgICAgICAgICAgICAgIFZvbGNhbmlvbiAgICAgRmlyZVxuXG5bODAwIHJvd3MgeCAyIGNvbHVtbnNdXG4nID0gQ2FwdHVyZVJlc3VsdChvdXQ9JyAgICAgICAgICAgICAgICAgICAgICBOYW1lICAgVHlwZSAxXG4wICAgICAgICAgICAgICAgIEJ1bGJhc2F1ciAgICBHcmFzc1xuMSAgICAgICAgICAgICAgICAgIEl2eXNhdS4uLlBzeWNoaWNcbjc5OCAgICAgSG9vcGFIb29wYSBVbmJvdW5kICBQc3ljaGljXG43OTkgICAgICAgICAgICAgIFZvbGNhbmlvbiAgICAgRmlyZVxuXG5bODAwIHJvd3MgeCAyIGNvbHVtbnNdXG4nLCBlcnI9JycpLm91dBtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDUuNS1wcmludC1jb2x1bW5zL3Rlc3QucHkbWzBtOjI3OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDUuNS1wcmludC1jb2x1bW5zL3Rlc3QucHk6OhtbMW10ZXN0X2V4cGVjdGVkX291dHB1dBtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcgICAgICAgICAgICAgICAgICAgICAgICBOYW1lIFR5cGUgMVxuMCAgICAgICAgICAgICAuLi4KG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbSwgG1szMm0zIHBhc3NlZBtbMG0bWzMxbSBpbiAwLjM3cxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KLAoKICAgCiAgICAgICAgICAbWzMxbVlvdXIgY29kZSBtdXN0IHRvIGNvbXBseSB3aXRoIHRoZSBmb2xsb3dpbmcgdGVzdHM6G1szOW0gCgogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSAwLiAbWzM3bVRoZSBvdXRwdXQgc2hvdWxkIGJlIHRoZSBleHBlY3RlZBtbMzltIAoK","exit_code":1},{"starting_at":1725574742120,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpzZWxlY3RlZF9jb2x1bW5zID0gZGZbWydOYW1lJywgJ1R5cGUgMSddXQpwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725574742731,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA0IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjUtcHJpbnQtY29sdW1ucy90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW00IHBhc3NlZBtbMG0bWzMybSBpbiAwLjMxcxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725573126204,"completed_at":1725574742731},{"slug":"05.6-loc-function","position":16,"files":[{"path":".learn/exercises/05.6-loc-function/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05.6-loc-function/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/05.6-loc-function/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/05.6-loc-function/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"ICAgICAgICMgICAgICAgICAgICAgICAgICAgICAgIE5hbWUgICBUeXBlIDEgIC4uLiBTcGVlZCAgR2VuZXJhdGlvbiAgTGVnZW5kYXJ5CjIgICAgICAzICAgICAgICAgICAgICAgICAgIFZlbnVzYXVyICAgIEdyYXNzICAuLi4gICAgODAgICAgICAgICAgIDEgICAgICBGYWxzZQozICAgICAgMyAgICAgIFZlbnVzYXVyTWVnYSBWZW51c2F1ciAgICBHcmFzcyAgLi4uICAgIDgwICAgICAgICAgICAxICAgICAgRmFsc2UKNiAgICAgIDYgICAgICAgICAgICAgICAgICBDaGFyaXphcmQgICAgIEZpcmUgIC4uLiAgIDEwMCAgICAgICAgICAgMSAgICAgIEZhbHNlCjcgICAgICA2ICBDaGFyaXphcmRNZWdhIENoYXJpemFyZCBYICAgICBGaXJlICAuLi4gICAxMDAgICAgICAgICAgIDEgICAgICBGYWxzZQo4ICAgICAgNiAgQ2hhcml6YXJkTWVnYSBDaGFyaXphcmQgWSAgICAgRmlyZSAgLi4uICAgMTAwICAgICAgICAgICAxICAgICAgRmFsc2UKLi4gICAuLi4gICAgICAgICAgICAgICAgICAgICAgICAuLi4gICAgICAuLi4gIC4uLiAgIC4uLiAgICAgICAgIC4uLiAgICAgICAgLi4uCjc5NSAgNzE5ICAgICAgICAgICAgICAgICAgICBEaWFuY2llICAgICBSb2NrICAuLi4gICAgNTAgICAgICAgICAgIDYgICAgICAgVHJ1ZQo3OTYgIDcxOSAgICAgICAgRGlhbmNpZU1lZ2EgRGlhbmNpZSAgICAgUm9jayAgLi4uICAgMTEwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk3ICA3MjAgICAgICAgIEhvb3BhSG9vcGEgQ29uZmluZWQgIFBzeWNoaWMgIC4uLiAgICA3MCAgICAgICAgICAgNiAgICAgICBUcnVlCjc5OCAgNzIwICAgICAgICAgSG9vcGFIb29wYSBVbmJvdW5kICBQc3ljaGljICAuLi4gICAgODAgICAgICAgICAgIDYgICAgICAgVHJ1ZQo3OTkgIDcyMSAgICAgICAgICAgICAgICAgIFZvbGNhbmlvbiAgICAgRmlyZSAgLi4uICAgIDcwICAgICAgICAgICA2ICAgICAgIFRydWUKClszNDEgcm93cyB4IDEyIGNvbHVtbnNdCg==","signal":null,"memoryUsage":524288,"cpuUsage":6236,"starting_at":1725575062695,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5sb2NbZGZbJ0F0dGFjayddID4gODBdKQoKCiMgc2VsZWN0ZWRfY29sdW1ucyA9IGRmW1snTmFtZScsICdUeXBlIDEnXV0KIyBwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725575063083,"exit_code":0}],"tests":[{"starting_at":1725575076385,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5sb2NbZGZbJ0F0dGFjayddID4gODBdKQoKCiMgc2VsZWN0ZWRfY29sdW1ucyA9IGRmW1snTmFtZScsICdUeXBlIDEnXV0KIyBwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725575077010,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA1IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjYtbG9jLWZ1bmN0aW9uL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW01IHBhc3NlZBtbMG0bWzMybSBpbiAwLjMycxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725574744825,"completed_at":1725575077010},{"slug":"05.7-filter-and-count","position":17,"files":[{"path":".learn/exercises/05.7-filter-and-count/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05.7-filter-and-count/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/05.7-filter-and-count/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/05.7-filter-and-count/test.py","name":"test.py","hidden":true}],"ai_interactions":[{"starting_at":1725575824962,"student_message":"que estoy haciendo mal?\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Pandas for machine learning\n<!-- endhide -->\n\nPandas es la mejor y más popular biblioteca de [Python](https://4geeks.com/es/lesson/que-es-python-tutorial) para machine learning. Esta biblioteca ofrece una amplia variedad de funciones que te ayudarán a manipular datos, optimizar tu algoritmo de machine learning y mucho más. Este **tutorial de python pandas** te ayudaremos a familiarizarte con esta biblioteca y dominar las funcionalidades más utilizadas con ejemplos de código y tutoriales en video que te ayudarán a crear tu primer marco de datos (data frame), limpiar un dataset de información, leer archivos CSV, entre otras cosas...\n\n> Este tutorial de pandas [es interactivo usando LearnPack](https://4geeks.com/es/learnpack-es) y tambien cuenta con un [mentor AI llamado Rigobot](https://4geeks.com/es/rigobot), que lee tu codigo y responde todas tus preguntas inmediatamente.\n\nLos ejercicios en este tutorial han sido creados en aproximadamente 80 horas de desarrollo por expertos en machine learning y revisados cuidadosamente por nuestros [colaboradores](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) para asegurarnos de que tengas la información más precisa e importante que te ayudará a comenzar tu carrera en machine learning.\n\n## Contenidos a revisar en el tutorial de pandas\n\nEn este tutorial, veremos las funciones más importantes y básicas proporcionadas por Pandas que te ayudarán a trabajar con datos en machine learning. A continuación, algunos de los temas que se cubrirán en este tutorial son:\n\n| Ejercicio     | Descripción del tema                                                                                                    |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|**Instalar Pandas** | Estos ejercicios cubren cómo instalar Pandas, cómo importar la biblioteca Pandas en un archivo de Python, y cómo crear tu primer script en Python.          |\n|**DataSets**       | Estos ejercicios explican qué son los conjuntos de datos y cómo trabajar con ellos.                                                                                |\n|**Series**         | Estos ejercicios explican qué son las **series** en Pandas y cómo usarlas.                                                                    |\n|**DataFrames**     | Estos ejercicios explican cómo crear un **DataFrame** de información y qué funciones se pueden usar para trabajar con ellos.                                    |\n|**Clean DataSets** | Esta clase cubre qué es la limpieza de datos, las funciones que Pandas ofrece para limpiar un DataSet, y las mejores prácticas para limpiar un DataSet. |\n\n## 🌱 ¿Cómo iniciar este tutorial de pandas?\n\nPuedes iniciar este tutorial rapidamente usando nuestra tecnologia `aprende en un clic` para tu maquina local o en la nube en 2 pasos sencillos, [haz click aqui para empezar](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=es&utm_source=github&utm_medium=organic&utm_content=readme).\n\n## Colaboradores\n\nQueremos expresar nuestro más profundo agradecimiento a los siguientes colaboradores por su valioso apoyo en la creación de este tutorial.\n\n| Colaborador       | Cuenta de GitHub                                  |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nEste tutorial y muchos otros ejercicios están diseñados para estudiantes como parte del [Bootcamp de Programación](https://4geeksacademy.com/us/coding-bootcamp) de 4Geeks Academy. Actualmente, tenemos dos cursos disponibles. El primero es el Curso de [Desarrollador Full Stack](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), en este curso aprenderás tecnologías como HTML5, CSS3, JavaScript, Python, Flask, SQL y muchas otras. El segundo es el [Bootcamp de Data Science](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning) donde aprenderás tecnologías como Python, fundamentos de algoritmos, Pandas, bases de datos SQL y muchas otras tecnologías. Puedes encontrar más información sobre estos cursos y el próximo curso de Blockchain y Web3 en la página web oficial de [4Geeks Academy](http://4geeksacademy.com/).\n\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `# Pandas for machine learning\n\nPandas is the best and most popular [Python](https://4geeks.com/lesson/intro-to-python) library for machine learning. This library offers a wide variety of functions that will help you manipulate data, optimize your machine-learning algorithm, and much more. This tutorial will help you to get familiar with this library and master the most used functionalities with code samples and video tutorials that will help you to create your first data frame, clean a dataset of information, read CSV files, etc.\n\n> This Pandas tutorial [is interactive using LearnPack](https://4geeks.com/learnpack) and also features an [AI mentor named Rigobot](https://4geeks.com/rigobot), which reads your code and answers all your questions immediately.\n\nThe exercises in this tutorial have been created after about 60 hours of development by many experts in machine learning and they have been carefully reviewed by our [contributors](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) to make sure you have the most accurate and important information that will help you start your machine learning career. \n\n## Content table\n\nIn this tutorial, we will see the most important and basic functions provided by Pandas that will help you work with data in machine learning. The following are some of the topics that will be covered in this tutorial. \n\n| Exercise      | Description of the topic                                                                                                                           |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|Install Pandas | These exercises cover how to install Pandas, how to import the Pandas library in a Python file, and how to create your first Python script.            |\n|DataSets       | These exercises explain what datasets are and how to work with them.                                                                                   |\n|Series         | These exercises explain what Series are in Pandas and how to use them.                                                                                 |\n|DataFrames     | These exercises explain how to create an information DataFrame and what functions can be used to work with them.                                      |\n|Clean DataSets | This class covers what data cleaning is, the functions Pandas offers to clean up a dataset, and the best practices to use when cleaning a dataset. |\n\n## 🌱 How to start these exercises?\n\nYou can start this tutorial quickly using our `learn in one click` technology for your local machine or in the cloud in 2 simple steps, [click here to get started](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=us&utm_source=github&utm_medium=organic&utm_content=readme).\n\n\n## Contributors\n\nWe would like to express our deepest gratitude to the following contributors for their invaluable support in making this tutorial possible.\n\n| Contributor       | GitHub account                                      |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nThis tutorial and many other exercises are designed for students as part of the 4Geeks Academy's [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp). Currently, we have two courses available. The first one is the [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer). In this course, you will learn technologies like HTML5, CSS3, JavaScript, Python, Flask, SQL and many others. The second one is the [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning), where you will learn technologies like Python, Algorithms' basics, Pandas, SQL Database, and many other technologies. You can find more information about these courses and the upcoming **Blockchain and Web3** course on the official [4Geeks Academy](http://4geeksacademy.com/) web page.\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import io, os, sys, pytest, re\n\n\n@pytest.mark.it('You must import pandas')\ndef test_import_pandas():\n    path = 'app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"import\\s*pandas\\s*as\\s*pd\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it(\"Use the print function\")\ndef test_output():\n    f = open('app.py')\n    content = f.read()\n    assert \"print\" in content\n\n@pytest.mark.it('The output should be the expected')\ndef test_expected_output(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert \"65\\n\" in captured.out\n\n@pytest.mark.it(\"Do not hardcode the expected output\")\ndef test_harcoded_output():\n    path = os.path.dirname(os.path.abspath('app.py'))+'/app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"print\\s*\\((?!\\s*\\d)\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it(\"Use the loc function\")\ndef test_loc_func_exists():\n    f = open('app.py')\n    content = f.read()\n    assert \"loc\" in content\n\n@pytest.mark.it(\"You should be reading the csv file located at .learn/assets/pokemon_data.csv to create your DataFrame\")\ndef test_reading_csv():\n    f = open('app.py')\n    content = f.read()\n    assert \".learn/assets/pokemon_data.csv\" in content and 'read_csv' in content`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `05.7` Filter and Count\n\n¿Cuántos pokemones son legendarios?\n\n## 📝 Instrucciones:\n\n1. Usa la misma variable de DataFrame que usaste en el ejercicio anterior.\n\n2. Usa la función `loc` con una operación lógica como índice. \n\n## 💻 Resultado Esperado:\n\n```bash\n65\n```\n\n## 💡 Pista: \n\n+ Usa la función `len` para contar.\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs: ============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-7.3.1, pluggy-1.0.0\nrootdir: /workspaces/python-pandas-tutorial\nplugins: testdox-3.1.0\ncollected 6 items\n\n.learn/exercises/05.7-filter-and-count/test.py ..F...                    [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_expected_output _____________________________\n\nself = Index(['#', 'Name', 'Type 1', 'Type 2', 'HP', 'Attack', 'Defense', 'Sp. Atk',\n       'Sp. Def', 'Speed', 'Generation', 'Legendary'],\n      dtype='object')\nkey = 'legendary'\n\n    def get_loc(self, key):\n        \"\"\"\n        Get integer location, slice or boolean mask for requested label.\n    \n        Parameters\n        ----------\n        key : label\n    \n        Returns\n        -------\n        int if unique index, slice if monotonic index, else mask\n    \n        Examples\n        --------\n        >>> unique_index = pd.Index(list('abc'))\n        >>> unique_index.get_loc('b')\n        1\n    \n        >>> monotonic_index = pd.Index(list('abbc'))\n        >>> monotonic_index.get_loc('b')\n        slice(1, 3, None)\n    \n        >>> non_monotonic_index = pd.Index(list('abcb'))\n        >>> non_monotonic_index.get_loc('b')\n        array([False,  True, False,  True])\n        \"\"\"\n        casted_key = self._maybe_cast_indexer(key)\n        try:\n>           return self._engine.get_loc(casted_key)\n\n/home/vscode/.local/lib/python3.10/site-packages/pandas/core/indexes/base.py:3805: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\n\nindex.pyx:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\n\nindex.pyx:196: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\n\npandas/_libs/hashtable_class_helper.pxi:7081: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   KeyError: 'legendary'\n\npandas/_libs/hashtable_class_helper.pxi:7089: KeyError\n\nThe above exception was the direct cause of the following exception:\n\ncapsys = <_pytest.capture.CaptureFixture object at 0x713aa68be9e0>\n\n    @pytest.mark.it('The output should be the expected')\n    def test_expected_output(capsys):\n>       import app\n\n.learn/exercises/05.7-filter-and-count/test.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napp.py:46: in <module>\n    print(df.loc[df['legendary'].len])\n/home/vscode/.local/lib/python3.10/site-packages/pandas/core/frame.py:4102: in __getitem__\n    indexer = self.columns.get_loc(key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Index(['#', 'Name', 'Type 1', 'Type 2', 'HP', 'Attack', 'Defense', 'Sp. Atk',\n       'Sp. Def', 'Speed', 'Generation', 'Legendary'],\n      dtype='object')\nkey = 'legendary'\n\n    def get_loc(self, key):\n        \"\"\"\n        Get integer location, slice or boolean mask for requested label.\n    \n        Parameters\n        ----------\n        key : label\n    \n        Returns\n        -------\n        int if unique index, slice if monotonic index, else mask\n    \n        Examples\n        --------\n        >>> unique_index = pd.Index(list('abc'))\n        >>> unique_index.get_loc('b')\n        1\n    \n        >>> monotonic_index = pd.Index(list('abbc'))\n        >>> monotonic_index.get_loc('b')\n        slice(1, 3, None)\n    \n        >>> non_monotonic_index = pd.Index(list('abcb'))\n        >>> non_monotonic_index.get_loc('b')\n        array([False,  True, False,  True])\n        \"\"\"\n        casted_key = self._maybe_cast_indexer(key)\n        try:\n            return self._engine.get_loc(casted_key)\n        except KeyError as err:\n            if isinstance(casted_key, slice) or (\n                isinstance(casted_key, abc.Iterable)\n                and any(isinstance(x, slice) for x in casted_key)\n            ):\n                raise InvalidIndexError(key)\n>           raise KeyError(key) from err\nE           KeyError: 'legendary'\n\n/home/vscode/.local/lib/python3.10/site-packages/pandas/core/indexes/base.py:3812: KeyError\n=========================== short test summary info ============================\nFAILED .learn/exercises/05.7-filter-and-count/test.py::test_expected_output - KeyError: 'legendary'\n========================= 1 failed, 5 passed in 0.56s ==========================\n,\n\n   \n          Your code must to comply with the following tests: \n\n     x (fail) 0. The output should be the expected \n\n","ending_at":1725575830332,"ai_response":"Parece que el error se debe a que estás intentando acceder a una columna llamada `'legendary'` en tu DataFrame, pero la columna correcta se llama `'Legendary'` (con mayúscula inicial). En Python, las mayúsculas y minúsculas son importantes, por lo que `'legendary'` y `'Legendary'` se consideran diferentes.\n\nVamos a revisar los pasos necesarios para completar este ejercicio:\n\n1. **Importar Pandas**: Asegúrate de que has importado la biblioteca Pandas correctamente.\n2. **Leer el archivo CSV**: Asegúrate de que estás leyendo el archivo CSV correctamente para crear tu DataFrame.\n3. **Filtrar los datos**: Usa la función `loc` para filtrar los Pokémon legendarios.\n4. **Contar los resultados**: Usa la función `len` para contar cuántos Pokémon legendarios hay.\n\nAquí hay algunas preguntas para guiarte:\n\n1. ¿Has importado Pandas correctamente con `import pandas as pd`?\n2. ¿Has leído el archivo CSV correctamente usando `pd.read_csv`?\n3. ¿Estás seguro de que la columna que estás usando para filtrar se llama `'Legendary'` y no `'legendary'`?\n4. ¿Estás usando la función `len` para contar los resultados?\n\nPara ayudarte a reflexionar, aquí tienes un ejemplo de cómo podrías estructurar tu código:\n\n```python\nimport pandas as pd\n\n# Leer el archivo CSV\ndf = pd.read_csv('.learn/assets/pokemon_data.csv')\n\n# Filtrar los Pokémon legendarios\nlegendary_pokemon = df.loc[df['Legendary'] == True]\n\n# Contar los Pokémon legendarios\nprint(len(legendary_pokemon))\n```\n\n¿Puedes revisar tu código y ver si hay alguna diferencia con este ejemplo? ¿Qué observas?"},{"starting_at":1725576023103,"student_message":"cual es el problema?\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Pandas for machine learning\n<!-- endhide -->\n\nPandas es la mejor y más popular biblioteca de [Python](https://4geeks.com/es/lesson/que-es-python-tutorial) para machine learning. Esta biblioteca ofrece una amplia variedad de funciones que te ayudarán a manipular datos, optimizar tu algoritmo de machine learning y mucho más. Este **tutorial de python pandas** te ayudaremos a familiarizarte con esta biblioteca y dominar las funcionalidades más utilizadas con ejemplos de código y tutoriales en video que te ayudarán a crear tu primer marco de datos (data frame), limpiar un dataset de información, leer archivos CSV, entre otras cosas...\n\n> Este tutorial de pandas [es interactivo usando LearnPack](https://4geeks.com/es/learnpack-es) y tambien cuenta con un [mentor AI llamado Rigobot](https://4geeks.com/es/rigobot), que lee tu codigo y responde todas tus preguntas inmediatamente.\n\nLos ejercicios en este tutorial han sido creados en aproximadamente 80 horas de desarrollo por expertos en machine learning y revisados cuidadosamente por nuestros [colaboradores](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) para asegurarnos de que tengas la información más precisa e importante que te ayudará a comenzar tu carrera en machine learning.\n\n## Contenidos a revisar en el tutorial de pandas\n\nEn este tutorial, veremos las funciones más importantes y básicas proporcionadas por Pandas que te ayudarán a trabajar con datos en machine learning. A continuación, algunos de los temas que se cubrirán en este tutorial son:\n\n| Ejercicio     | Descripción del tema                                                                                                    |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|**Instalar Pandas** | Estos ejercicios cubren cómo instalar Pandas, cómo importar la biblioteca Pandas en un archivo de Python, y cómo crear tu primer script en Python.          |\n|**DataSets**       | Estos ejercicios explican qué son los conjuntos de datos y cómo trabajar con ellos.                                                                                |\n|**Series**         | Estos ejercicios explican qué son las **series** en Pandas y cómo usarlas.                                                                    |\n|**DataFrames**     | Estos ejercicios explican cómo crear un **DataFrame** de información y qué funciones se pueden usar para trabajar con ellos.                                    |\n|**Clean DataSets** | Esta clase cubre qué es la limpieza de datos, las funciones que Pandas ofrece para limpiar un DataSet, y las mejores prácticas para limpiar un DataSet. |\n\n## 🌱 ¿Cómo iniciar este tutorial de pandas?\n\nPuedes iniciar este tutorial rapidamente usando nuestra tecnologia `aprende en un clic` para tu maquina local o en la nube en 2 pasos sencillos, [haz click aqui para empezar](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=es&utm_source=github&utm_medium=organic&utm_content=readme).\n\n## Colaboradores\n\nQueremos expresar nuestro más profundo agradecimiento a los siguientes colaboradores por su valioso apoyo en la creación de este tutorial.\n\n| Colaborador       | Cuenta de GitHub                                  |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nEste tutorial y muchos otros ejercicios están diseñados para estudiantes como parte del [Bootcamp de Programación](https://4geeksacademy.com/us/coding-bootcamp) de 4Geeks Academy. Actualmente, tenemos dos cursos disponibles. El primero es el Curso de [Desarrollador Full Stack](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), en este curso aprenderás tecnologías como HTML5, CSS3, JavaScript, Python, Flask, SQL y muchas otras. El segundo es el [Bootcamp de Data Science](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning) donde aprenderás tecnologías como Python, fundamentos de algoritmos, Pandas, bases de datos SQL y muchas otras tecnologías. Puedes encontrar más información sobre estos cursos y el próximo curso de Blockchain y Web3 en la página web oficial de [4Geeks Academy](http://4geeksacademy.com/).\n\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `# Pandas for machine learning\n\nPandas is the best and most popular [Python](https://4geeks.com/lesson/intro-to-python) library for machine learning. This library offers a wide variety of functions that will help you manipulate data, optimize your machine-learning algorithm, and much more. This tutorial will help you to get familiar with this library and master the most used functionalities with code samples and video tutorials that will help you to create your first data frame, clean a dataset of information, read CSV files, etc.\n\n> This Pandas tutorial [is interactive using LearnPack](https://4geeks.com/learnpack) and also features an [AI mentor named Rigobot](https://4geeks.com/rigobot), which reads your code and answers all your questions immediately.\n\nThe exercises in this tutorial have been created after about 60 hours of development by many experts in machine learning and they have been carefully reviewed by our [contributors](https://github.com/4GeeksAcademy/python-functions-programming-exercises/graphs/contributors) to make sure you have the most accurate and important information that will help you start your machine learning career. \n\n## Content table\n\nIn this tutorial, we will see the most important and basic functions provided by Pandas that will help you work with data in machine learning. The following are some of the topics that will be covered in this tutorial. \n\n| Exercise      | Description of the topic                                                                                                                           |\n|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------|\n|Install Pandas | These exercises cover how to install Pandas, how to import the Pandas library in a Python file, and how to create your first Python script.            |\n|DataSets       | These exercises explain what datasets are and how to work with them.                                                                                   |\n|Series         | These exercises explain what Series are in Pandas and how to use them.                                                                                 |\n|DataFrames     | These exercises explain how to create an information DataFrame and what functions can be used to work with them.                                      |\n|Clean DataSets | This class covers what data cleaning is, the functions Pandas offers to clean up a dataset, and the best practices to use when cleaning a dataset. |\n\n## 🌱 How to start these exercises?\n\nYou can start this tutorial quickly using our `learn in one click` technology for your local machine or in the cloud in 2 simple steps, [click here to get started](https://s.4geeks.com/start?repo=https://github.com/4GeeksAcademy/python-pandas-tutorial&lang=us&utm_source=github&utm_medium=organic&utm_content=readme).\n\n\n## Contributors\n\nWe would like to express our deepest gratitude to the following contributors for their invaluable support in making this tutorial possible.\n\n| Contributor       | GitHub account                                      |\n|-------------------|-----------------------------------------------------|\n| Alejandro Sanchez | [alesanchezr](https://github.com/alesanchezr)       |\n| Martín Suárez     | [kiddopro](https://github.com/kiddopro)             |\n| Lorena Gubaira    | [Lorenagubaira](https://github.com/Lorenagubaira)   |\n| Tomas Gonzalez    | [tommygonzaleza](https://github.com/tommygonzaleza) |\n| Hernán García     | [hernanjkd](https://github.com/hernanjkd)           |\n| Ernesto Gonzalez  | [UmiKami](https://github.com/UmiKami)               |\n| Hector Chocobar   | [hchocobar](https://github.com/hchocobar)           |\n| Charly Chacón     | [Charlytoc](https://github.com/Charlytoc)           |\n| Agustín Fernández | [Dasher83](https://github.com/Dasher83)             |\n| Ignacio Cordoba   | [nachovz](https://github.com/nachovz)               |\n\nThis tutorial and many other exercises are designed for students as part of the 4Geeks Academy's [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp). Currently, we have two courses available. The first one is the [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer). In this course, you will learn technologies like HTML5, CSS3, JavaScript, Python, Flask, SQL and many others. The second one is the [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning), where you will learn technologies like Python, Algorithms' basics, Pandas, SQL Database, and many other technologies. You can find more information about these courses and the upcoming **Blockchain and Web3** course on the official [4Geeks Academy](http://4geeksacademy.com/) web page.\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import io, os, sys, pytest, re\n\n\n@pytest.mark.it('You must import pandas')\ndef test_import_pandas():\n    path = 'app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"import\\s*pandas\\s*as\\s*pd\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it(\"Use the print function\")\ndef test_output():\n    f = open('app.py')\n    content = f.read()\n    assert \"print\" in content\n\n@pytest.mark.it('The output should be the expected')\ndef test_expected_output(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert \"65\\n\" in captured.out\n\n@pytest.mark.it(\"Do not hardcode the expected output\")\ndef test_harcoded_output():\n    path = os.path.dirname(os.path.abspath('app.py'))+'/app.py'\n    with open(path, 'r') as content_file:\n        content = content_file.read()\n        regex = re.compile(r\"print\\s*\\((?!\\s*\\d)\")\n        assert bool(regex.search(content)) == True\n\n@pytest.mark.it(\"Use the loc function\")\ndef test_loc_func_exists():\n    f = open('app.py')\n    content = f.read()\n    assert \"loc\" in content\n\n@pytest.mark.it(\"You should be reading the csv file located at .learn/assets/pokemon_data.csv to create your DataFrame\")\ndef test_reading_csv():\n    f = open('app.py')\n    content = f.read()\n    assert \".learn/assets/pokemon_data.csv\" in content and 'read_csv' in content`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `05.7` Filter and Count\n\n¿Cuántos pokemones son legendarios?\n\n## 📝 Instrucciones:\n\n1. Usa la misma variable de DataFrame que usaste en el ejercicio anterior.\n\n2. Usa la función `loc` con una operación lógica como índice. \n\n## 💻 Resultado Esperado:\n\n```bash\n65\n```\n\n## 💡 Pista: \n\n+ Usa la función `len` para contar.\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs: ============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-7.3.1, pluggy-1.0.0\nrootdir: /workspaces/python-pandas-tutorial\nplugins: testdox-3.1.0\ncollected 6 items\n\n.learn/exercises/05.7-filter-and-count/test.py ..F...                    [100%]\n\n=================================== FAILURES ===================================\n_____________________________ test_expected_output _____________________________\n\nself = Index(['#', 'Name', 'Type 1', 'Type 2', 'HP', 'Attack', 'Defense', 'Sp. Atk',\n       'Sp. Def', 'Speed', 'Generation', 'Legendary'],\n      dtype='object')\nkey = 'legendary'\n\n    def get_loc(self, key):\n        \"\"\"\n        Get integer location, slice or boolean mask for requested label.\n    \n        Parameters\n        ----------\n        key : label\n    \n        Returns\n        -------\n        int if unique index, slice if monotonic index, else mask\n    \n        Examples\n        --------\n        >>> unique_index = pd.Index(list('abc'))\n        >>> unique_index.get_loc('b')\n        1\n    \n        >>> monotonic_index = pd.Index(list('abbc'))\n        >>> monotonic_index.get_loc('b')\n        slice(1, 3, None)\n    \n        >>> non_monotonic_index = pd.Index(list('abcb'))\n        >>> non_monotonic_index.get_loc('b')\n        array([False,  True, False,  True])\n        \"\"\"\n        casted_key = self._maybe_cast_indexer(key)\n        try:\n>           return self._engine.get_loc(casted_key)\n\n/home/vscode/.local/lib/python3.10/site-packages/pandas/core/indexes/base.py:3805: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\n\nindex.pyx:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\n\nindex.pyx:196: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\n\npandas/_libs/hashtable_class_helper.pxi:7081: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   KeyError: 'legendary'\n\npandas/_libs/hashtable_class_helper.pxi:7089: KeyError\n\nThe above exception was the direct cause of the following exception:\n\ncapsys = <_pytest.capture.CaptureFixture object at 0x794e2f4273d0>\n\n    @pytest.mark.it('The output should be the expected')\n    def test_expected_output(capsys):\n>       import app\n\n.learn/exercises/05.7-filter-and-count/test.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napp.py:46: in <module>\n    legendary_pokemon = df.loc[df['legendary'] == True]\n/home/vscode/.local/lib/python3.10/site-packages/pandas/core/frame.py:4102: in __getitem__\n    indexer = self.columns.get_loc(key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Index(['#', 'Name', 'Type 1', 'Type 2', 'HP', 'Attack', 'Defense', 'Sp. Atk',\n       'Sp. Def', 'Speed', 'Generation', 'Legendary'],\n      dtype='object')\nkey = 'legendary'\n\n    def get_loc(self, key):\n        \"\"\"\n        Get integer location, slice or boolean mask for requested label.\n    \n        Parameters\n        ----------\n        key : label\n    \n        Returns\n        -------\n        int if unique index, slice if monotonic index, else mask\n    \n        Examples\n        --------\n        >>> unique_index = pd.Index(list('abc'))\n        >>> unique_index.get_loc('b')\n        1\n    \n        >>> monotonic_index = pd.Index(list('abbc'))\n        >>> monotonic_index.get_loc('b')\n        slice(1, 3, None)\n    \n        >>> non_monotonic_index = pd.Index(list('abcb'))\n        >>> non_monotonic_index.get_loc('b')\n        array([False,  True, False,  True])\n        \"\"\"\n        casted_key = self._maybe_cast_indexer(key)\n        try:\n            return self._engine.get_loc(casted_key)\n        except KeyError as err:\n            if isinstance(casted_key, slice) or (\n                isinstance(casted_key, abc.Iterable)\n                and any(isinstance(x, slice) for x in casted_key)\n            ):\n                raise InvalidIndexError(key)\n>           raise KeyError(key) from err\nE           KeyError: 'legendary'\n\n/home/vscode/.local/lib/python3.10/site-packages/pandas/core/indexes/base.py:3812: KeyError\n=========================== short test summary info ============================\nFAILED .learn/exercises/05.7-filter-and-count/test.py::test_expected_output - KeyError: 'legendary'\n========================= 1 failed, 5 passed in 0.55s ==========================\n,\n\n   \n          Your code must to comply with the following tests: \n\n     x (fail) 0. The output should be the expected \n\n","ending_at":1725576028534,"ai_response":"El problema principal parece ser que estás intentando acceder a una columna llamada `'legendary'` en tu DataFrame, pero la columna correcta se llama `'Legendary'` (con mayúscula inicial). En Python, las mayúsculas y minúsculas son importantes, por lo que `'legendary'` y `'Legendary'` se consideran diferentes.\n\nVamos a revisar los pasos necesarios para completar este ejercicio:\n\n1. **Importar Pandas**: Asegúrate de que has importado la biblioteca Pandas correctamente.\n2. **Leer el archivo CSV**: Asegúrate de que estás leyendo el archivo CSV correctamente para crear tu DataFrame.\n3. **Filtrar los datos**: Usa la función `loc` para filtrar los Pokémon legendarios.\n4. **Contar los resultados**: Usa la función `len` para contar cuántos Pokémon legendarios hay.\n\nAquí hay algunas preguntas para guiarte:\n\n1. ¿Has importado Pandas correctamente con `import pandas as pd`?\n2. ¿Has leído el archivo CSV correctamente usando `pd.read_csv`?\n3. ¿Estás seguro de que la columna que estás usando para filtrar se llama `'Legendary'` y no `'legendary'`?\n4. ¿Estás usando la función `len` para contar los resultados?\n\nPara ayudarte a reflexionar, aquí tienes un ejemplo de cómo podrías estructurar tu código:\n\n```python\nimport pandas as pd\n\n# Leer el archivo CSV\ndf = pd.read_csv('.learn/assets/pokemon_data.csv')\n\n# Filtrar los Pokémon legendarios\nlegendary_pokemon = df.loc[df['Legendary'] == True]\n\n# Contar los Pokémon legendarios\nprint(len(legendary_pokemon))\n```\n\n¿Puedes revisar tu código y ver si hay alguna diferencia con este ejemplo? ¿Qué observas?"}],"compilations":[{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9pbmRleGVzL2Jhc2UucHkiLCBsaW5lIDM4MDUsIGluIGdldF9sb2MKICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTY3LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTk2LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4MSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4OSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQpLZXlFcnJvcjogJ2xlZ2VuZGFyeScKClRoZSBhYm92ZSBleGNlcHRpb24gd2FzIHRoZSBkaXJlY3QgY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRpb246CgpUcmFjZWJhY2sgKG1vc3QgcmVjZW50IGNhbGwgbGFzdCk6CiAgRmlsZSAiL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbC9hcHAucHkiLCBsaW5lIDQ2LCBpbiA8bW9kdWxlPgogICAgcHJpbnQoZGYubG9jW2RmWydsZWdlbmRhcnknXS5jb3VudF0pCiAgRmlsZSAiL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3BhbmRhcy9jb3JlL2ZyYW1lLnB5IiwgbGluZSA0MTAyLCBpbiBfX2dldGl0ZW1fXwogICAgaW5kZXhlciA9IHNlbGYuY29sdW1ucy5nZXRfbG9jKGtleSkKICBGaWxlICIvaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFjaw==","stdout":"","signal":"SIGTERM","memoryUsage":393216,"cpuUsage":4062,"errorType":"run-time","starting_at":1725575771871,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5sb2NbZGZbJ2xlZ2VuZGFyeSddLmNvdW50XSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725575772264,"exit_code":null},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9pbmRleGVzL2Jhc2UucHkiLCBsaW5lIDM4MDUsIGluIGdldF9sb2MKICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTY3LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTk2LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4MSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4OSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQpLZXlFcnJvcjogJ2xlZ2VuZGFyeScKClRoZSBhYm92ZSBleGNlcHRpb24gd2FzIHRoZSBkaXJlY3QgY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRpb246CgpUcmFjZWJhY2sgKG1vc3QgcmVjZW50IGNhbGwgbGFzdCk6CiAgRmlsZSAiL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbC9hcHAucHkiLCBsaW5lIDQ2LCBpbiA8bW9kdWxlPgogICAgcHJpbnQoZGYubG9jW2RmWydsZWdlbmRhcnknXS5jb3VudCgpXSkKICBGaWxlICIvaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvZnJhbWUucHkiLCBsaW5lIDQxMDIsIGluIF9fZ2V0aXRlbV9fCiAgICBpbmRleGVyID0gc2VsZi5jb2x1bW5zLmdldF9sb2Moa2V5KQogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYQ==","stdout":"","signal":"SIGTERM","memoryUsage":262144,"cpuUsage":7002,"errorType":"run-time","starting_at":1725575780891,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5sb2NbZGZbJ2xlZ2VuZGFyeSddLmNvdW50KCldKQoKCiMgc2VsZWN0ZWRfY29sdW1ucyA9IGRmW1snTmFtZScsICdUeXBlIDEnXV0KIyBwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725575781306,"exit_code":null},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9pbmRleGVzL2Jhc2UucHkiLCBsaW5lIDM4MDUsIGluIGdldF9sb2MKICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTY3LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTk2LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4MSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4OSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQpLZXlFcnJvcjogJ2xlZ2VuZGFyeScKClRoZSBhYm92ZSBleGNlcHRpb24gd2FzIHRoZSBkaXJlY3QgY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRpb246CgpUcmFjZWJhY2sgKG1vc3QgcmVjZW50IGNhbGwgbGFzdCk6CiAgRmlsZSAiL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbC9hcHAucHkiLCBsaW5lIDQ2LCBpbiA8bW9kdWxlPgogICAgcHJpbnQoZGYubG9jW2RmWydsZWdlbmRhcnknXS5sZW5dKQogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9mcmFtZS5weSIsIGxpbmUgNDEwMiwgaW4gX19nZXRpdGVtX18KICAgIGluZGV4ZXIgPSBzZWxmLmNvbHVtbnMuZ2V0X2xvYyhrZXkpCiAgRmlsZSAiL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZw==","stdout":"","signal":"SIGTERM","memoryUsage":524288,"cpuUsage":7703,"errorType":"run-time","starting_at":1725575814509,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5sb2NbZGZbJ2xlZ2VuZGFyeSddLmxlbl0pCgoKIyBzZWxlY3RlZF9jb2x1bW5zID0gZGZbWydOYW1lJywgJ1R5cGUgMSddXQojIHByaW50KHNlbGVjdGVkX2NvbHVtbnMuaGVhZCgxMCkpCiMgcHJpbnQoZGYuaWxvY1sxMzMsNl0p","ended_at":1725575814852,"exit_code":null},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9pbmRleGVzL2Jhc2UucHkiLCBsaW5lIDM4MDUsIGluIGdldF9sb2MKICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTY3LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgImluZGV4LnB5eCIsIGxpbmUgMTk2LCBpbiBwYW5kYXMuX2xpYnMuaW5kZXguSW5kZXhFbmdpbmUuZ2V0X2xvYwogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4MSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQogIEZpbGUgInBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aSIsIGxpbmUgNzA4OSwgaW4gcGFuZGFzLl9saWJzLmhhc2h0YWJsZS5QeU9iamVjdEhhc2hUYWJsZS5nZXRfaXRlbQpLZXlFcnJvcjogJ2xlZ2VuZGFyeScKClRoZSBhYm92ZSBleGNlcHRpb24gd2FzIHRoZSBkaXJlY3QgY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRpb246CgpUcmFjZWJhY2sgKG1vc3QgcmVjZW50IGNhbGwgbGFzdCk6CiAgRmlsZSAiL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbC9hcHAucHkiLCBsaW5lIDQ2LCBpbiA8bW9kdWxlPgogICAgbGVnZW5kYXJ5X3Bva2Vtb24gPSBkZi5sb2NbZGZbJ2xlZ2VuZGFyeSddID09IFRydWVdCiAgRmlsZSAiL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3BhbmRhcy9jb3JlL2ZyYW1lLnB5IiwgbGluZSA0MTAyLCBpbiBfX2dldGl0ZW1fXwogICAgaW5kZXhlciA9IHNlbGYuY29sdW1ucy5nZXRfbG9jKGtleSkKICBGaWxlICIvaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRobw==","stdout":"","signal":"SIGTERM","memoryUsage":524288,"cpuUsage":6198,"errorType":"run-time","starting_at":1725576004397,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnbGVnZW5kYXJ5J10gPT0gVHJ1ZV0KcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725576004779,"exit_code":null},{"stderr":"","stdout":"NjUK","signal":null,"memoryUsage":393216,"cpuUsage":7973,"starting_at":1725576046117,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725576046518,"exit_code":0},{"stderr":"","stdout":"ICAgICAgICMgICAgICAgICAgICAgICAgIE5hbWUgICAgVHlwZSAxICAuLi4gU3BlZWQgIEdlbmVyYXRpb24gIExlZ2VuZGFyeQoxNTYgIDE0NCAgICAgICAgICAgICBBcnRpY3VubyAgICAgICBJY2UgIC4uLiAgICA4NSAgICAgICAgICAgMSAgICAgICBUcnVlCjE1NyAgMTQ1ICAgICAgICAgICAgICAgWmFwZG9zICBFbGVjdHJpYyAgLi4uICAgMTAwICAgICAgICAgICAxICAgICAgIFRydWUKMTU4ICAxNDYgICAgICAgICAgICAgIE1vbHRyZXMgICAgICBGaXJlICAuLi4gICAgOTAgICAgICAgICAgIDEgICAgICAgVHJ1ZQoxNjIgIDE1MCAgICAgICAgICAgICAgIE1ld3R3byAgIFBzeWNoaWMgIC4uLiAgIDEzMCAgICAgICAgICAgMSAgICAgICBUcnVlCjE2MyAgMTUwICBNZXd0d29NZWdhIE1ld3R3byBYICAgUHN5Y2hpYyAgLi4uICAgMTMwICAgICAgICAgICAxICAgICAgIFRydWUKLi4gICAuLi4gICAgICAgICAgICAgICAgICAuLi4gICAgICAgLi4uICAuLi4gICAuLi4gICAgICAgICAuLi4gICAgICAgIC4uLgo3OTUgIDcxOSAgICAgICAgICAgICAgRGlhbmNpZSAgICAgIFJvY2sgIC4uLiAgICA1MCAgICAgICAgICAgNiAgICAgICBUcnVlCjc5NiAgNzE5ICBEaWFuY2llTWVnYSBEaWFuY2llICAgICAgUm9jayAgLi4uICAgMTEwICAgICAgICAgICA2ICAgICAgIFRydWUKNzk3ICA3MjAgIEhvb3BhSG9vcGEgQ29uZmluZWQgICBQc3ljaGljICAuLi4gICAgNzAgICAgICAgICAgIDYgICAgICAgVHJ1ZQo3OTggIDcyMCAgIEhvb3BhSG9vcGEgVW5ib3VuZCAgIFBzeWNoaWMgIC4uLiAgICA4MCAgICAgICAgICAgNiAgICAgICBUcnVlCjc5OSAgNzIxICAgICAgICAgICAgVm9sY2FuaW9uICAgICAgRmlyZSAgLi4uICAgIDcwICAgICAgICAgICA2ICAgICAgIFRydWUKCls2NSByb3dzIHggMTIgY29sdW1uc10K","signal":null,"memoryUsage":524288,"cpuUsage":7935,"starting_at":1725576059838,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KcHJpbnQobGVnZW5kYXJ5X3Bva2Vtb24pCgoKIyBzZWxlY3RlZF9jb2x1bW5zID0gZGZbWydOYW1lJywgJ1R5cGUgMSddXQojIHByaW50KHNlbGVjdGVkX2NvbHVtbnMuaGVhZCgxMCkpCiMgcHJpbnQoZGYuaWxvY1sxMzMsNl0p","ended_at":1725576060256,"exit_code":0},{"stderr":"","stdout":"NjUK","signal":null,"memoryUsage":393216,"cpuUsage":6583,"starting_at":1725576068149,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725576068582,"exit_code":0}],"tests":[{"starting_at":1725575823705,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpwcmludChkZi5sb2NbZGZbJ2xlZ2VuZGFyeSddLmxlbl0pCgoKIyBzZWxlY3RlZF9jb2x1bW5zID0gZGZbWydOYW1lJywgJ1R5cGUgMSddXQojIHByaW50KHNlbGVjdGVkX2NvbHVtbnMuaGVhZCgxMCkpCiMgcHJpbnQoZGYuaWxvY1sxMzMsNl0p","ended_at":1725575824569,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA2IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjctZmlsdGVyLWFuZC1jb3VudC90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMW1GG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCnNlbGYgPSBJbmRleChbJyMnLCAnTmFtZScsICdUeXBlIDEnLCAnVHlwZSAyJywgJ0hQJywgJ0F0dGFjaycsICdEZWZlbnNlJywgJ1NwLiBBdGsnLAogICAgICAgJ1NwLiBEZWYnLCAnU3BlZWQnLCAnR2VuZXJhdGlvbicsICdMZWdlbmRhcnknXSwKICAgICAgZHR5cGU9J29iamVjdCcpCmtleSA9ICdsZWdlbmRhcnknCgogICAgZGVmIGdldF9sb2Moc2VsZiwga2V5KToKICAgICAgICAiIiIKICAgICAgICBHZXQgaW50ZWdlciBsb2NhdGlvbiwgc2xpY2Ugb3IgYm9vbGVhbiBtYXNrIGZvciByZXF1ZXN0ZWQgbGFiZWwuCiAgICAKICAgICAgICBQYXJhbWV0ZXJzCiAgICAgICAgLS0tLS0tLS0tLQogICAgICAgIGtleSA6IGxhYmVsCiAgICAKICAgICAgICBSZXR1cm5zCiAgICAgICAgLS0tLS0tLQogICAgICAgIGludCBpZiB1bmlxdWUgaW5kZXgsIHNsaWNlIGlmIG1vbm90b25pYyBpbmRleCwgZWxzZSBtYXNrCiAgICAKICAgICAgICBFeGFtcGxlcwogICAgICAgIC0tLS0tLS0tCiAgICAgICAgPj4+IHVuaXF1ZV9pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiYycpKQogICAgICAgID4+PiB1bmlxdWVfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgMQogICAgCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiYmMnKSkKICAgICAgICA+Pj4gbW9ub3RvbmljX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIHNsaWNlKDEsIDMsIE5vbmUpCiAgICAKICAgICAgICA+Pj4gbm9uX21vbm90b25pY19pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiY2InKSkKICAgICAgICA+Pj4gbm9uX21vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBhcnJheShbRmFsc2UsICBUcnVlLCBGYWxzZSwgIFRydWVdKQogICAgICAgICIiIgogICAgICAgIGNhc3RlZF9rZXkgPSBzZWxmLl9tYXliZV9jYXN0X2luZGV4ZXIoa2V5KQogICAgICAgIHRyeToKPiAgICAgICAgICAgcmV0dXJuIHNlbGYuX2VuZ2luZS5nZXRfbG9jKGNhc3RlZF9rZXkpCgobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5G1swbTozODA1OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbWluZGV4LnB5eBtbMG06MTY3OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbWluZGV4LnB5eBtbMG06MTk2OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbXBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aRtbMG06NzA4MTogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/ChtbMW0bWzMxbUUgICBLZXlFcnJvcjogJ2xlZ2VuZGFyeScbWzBtCgobWzFtG1szMW1wYW5kYXMvX2xpYnMvaGFzaHRhYmxlX2NsYXNzX2hlbHBlci5weGkbWzBtOjcwODk6IEtleUVycm9yCgobWzMzbVRoZSBhYm92ZSBleGNlcHRpb24gd2FzIHRoZSBkaXJlY3QgY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRpb246G1swbQoKY2Fwc3lzID0gPF9weXRlc3QuY2FwdHVyZS5DYXB0dXJlRml4dHVyZSBvYmplY3QgYXQgMHg3MTNhYTY4YmU5ZTA+CgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQnKQogICAgZGVmIHRlc3RfZXhwZWN0ZWRfb3V0cHV0KGNhcHN5cyk6Cj4gICAgICAgaW1wb3J0IGFwcAoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wNS43LWZpbHRlci1hbmQtY291bnQvdGVzdC5weRtbMG06MjA6IApfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIAobWzFtG1szMW1hcHAucHkbWzBtOjQ2OiBpbiA8bW9kdWxlPgogICAgcHJpbnQoZGYubG9jW2RmWydsZWdlbmRhcnknXS5sZW5dKQobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvZnJhbWUucHkbWzBtOjQxMDI6IGluIF9fZ2V0aXRlbV9fCiAgICBpbmRleGVyID0gc2VsZi5jb2x1bW5zLmdldF9sb2Moa2V5KQpfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIAoKc2VsZiA9IEluZGV4KFsnIycsICdOYW1lJywgJ1R5cGUgMScsICdUeXBlIDInLCAnSFAnLCAnQXR0YWNrJywgJ0RlZmVuc2UnLCAnU3AuIEF0aycsCiAgICAgICAnU3AuIERlZicsICdTcGVlZCcsICdHZW5lcmF0aW9uJywgJ0xlZ2VuZGFyeSddLAogICAgICBkdHlwZT0nb2JqZWN0JykKa2V5ID0gJ2xlZ2VuZGFyeScKCiAgICBkZWYgZ2V0X2xvYyhzZWxmLCBrZXkpOgogICAgICAgICIiIgogICAgICAgIEdldCBpbnRlZ2VyIGxvY2F0aW9uLCBzbGljZSBvciBib29sZWFuIG1hc2sgZm9yIHJlcXVlc3RlZCBsYWJlbC4KICAgIAogICAgICAgIFBhcmFtZXRlcnMKICAgICAgICAtLS0tLS0tLS0tCiAgICAgICAga2V5IDogbGFiZWwKICAgIAogICAgICAgIFJldHVybnMKICAgICAgICAtLS0tLS0tCiAgICAgICAgaW50IGlmIHVuaXF1ZSBpbmRleCwgc2xpY2UgaWYgbW9ub3RvbmljIGluZGV4LCBlbHNlIG1hc2sKICAgIAogICAgICAgIEV4YW1wbGVzCiAgICAgICAgLS0tLS0tLS0KICAgICAgICA+Pj4gdW5pcXVlX2luZGV4ID0gcGQuSW5kZXgobGlzdCgnYWJjJykpCiAgICAgICAgPj4+IHVuaXF1ZV9pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICAxCiAgICAKICAgICAgICA+Pj4gbW9ub3RvbmljX2luZGV4ID0gcGQuSW5kZXgobGlzdCgnYWJiYycpKQogICAgICAgID4+PiBtb25vdG9uaWNfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgc2xpY2UoMSwgMywgTm9uZSkKICAgIAogICAgICAgID4+PiBub25fbW9ub3RvbmljX2luZGV4ID0gcGQuSW5kZXgobGlzdCgnYWJjYicpKQogICAgICAgID4+PiBub25fbW9ub3RvbmljX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIGFycmF5KFtGYWxzZSwgIFRydWUsIEZhbHNlLCAgVHJ1ZV0pCiAgICAgICAgIiIiCiAgICAgICAgY2FzdGVkX2tleSA9IHNlbGYuX21heWJlX2Nhc3RfaW5kZXhlcihrZXkpCiAgICAgICAgdHJ5OgogICAgICAgICAgICByZXR1cm4gc2VsZi5fZW5naW5lLmdldF9sb2MoY2FzdGVkX2tleSkKICAgICAgICBleGNlcHQgS2V5RXJyb3IgYXMgZXJyOgogICAgICAgICAgICBpZiBpc2luc3RhbmNlKGNhc3RlZF9rZXksIHNsaWNlKSBvciAoCiAgICAgICAgICAgICAgICBpc2luc3RhbmNlKGNhc3RlZF9rZXksIGFiYy5JdGVyYWJsZSkKICAgICAgICAgICAgICAgIGFuZCBhbnkoaXNpbnN0YW5jZSh4LCBzbGljZSkgZm9yIHggaW4gY2FzdGVkX2tleSkKICAgICAgICAgICAgKToKICAgICAgICAgICAgICAgIHJhaXNlIEludmFsaWRJbmRleEVycm9yKGtleSkKPiAgICAgICAgICAgcmFpc2UgS2V5RXJyb3Ioa2V5KSBmcm9tIGVycgobWzFtG1szMW1FICAgICAgICAgICBLZXlFcnJvcjogJ2xlZ2VuZGFyeScbWzBtCgobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5G1swbTozODEyOiBLZXlFcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDUuNy1maWx0ZXItYW5kLWNvdW50L3Rlc3QucHk6OhtbMW10ZXN0X2V4cGVjdGVkX291dHB1dBtbMG0gLSBLZXlFcnJvcjogJ2xlZ2VuZGFyeScKG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbSwgG1szMm01IHBhc3NlZBtbMG0bWzMxbSBpbiAwLjU2cxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0K","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA2IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjctZmlsdGVyLWFuZC1jb3VudC90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMW1GG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCnNlbGYgPSBJbmRleChbJyMnLCAnTmFtZScsICdUeXBlIDEnLCAnVHlwZSAyJywgJ0hQJywgJ0F0dGFjaycsICdEZWZlbnNlJywgJ1NwLiBBdGsnLAogICAgICAgJ1NwLiBEZWYnLCAnU3BlZWQnLCAnR2VuZXJhdGlvbicsICdMZWdlbmRhcnknXSwKICAgICAgZHR5cGU9J29iamVjdCcpCmtleSA9ICdsZWdlbmRhcnknCgogICAgZGVmIGdldF9sb2Moc2VsZiwga2V5KToKICAgICAgICAiIiIKICAgICAgICBHZXQgaW50ZWdlciBsb2NhdGlvbiwgc2xpY2Ugb3IgYm9vbGVhbiBtYXNrIGZvciByZXF1ZXN0ZWQgbGFiZWwuCiAgICAKICAgICAgICBQYXJhbWV0ZXJzCiAgICAgICAgLS0tLS0tLS0tLQogICAgICAgIGtleSA6IGxhYmVsCiAgICAKICAgICAgICBSZXR1cm5zCiAgICAgICAgLS0tLS0tLQogICAgICAgIGludCBpZiB1bmlxdWUgaW5kZXgsIHNsaWNlIGlmIG1vbm90b25pYyBpbmRleCwgZWxzZSBtYXNrCiAgICAKICAgICAgICBFeGFtcGxlcwogICAgICAgIC0tLS0tLS0tCiAgICAgICAgPj4+IHVuaXF1ZV9pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiYycpKQogICAgICAgID4+PiB1bmlxdWVfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgMQogICAgCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiYmMnKSkKICAgICAgICA+Pj4gbW9ub3RvbmljX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIHNsaWNlKDEsIDMsIE5vbmUpCiAgICAKICAgICAgICA+Pj4gbm9uX21vbm90b25pY19pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiY2InKSkKICAgICAgICA+Pj4gbm9uX21vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBhcnJheShbRmFsc2UsICBUcnVlLCBGYWxzZSwgIFRydWVdKQogICAgICAgICIiIgogICAgICAgIGNhc3RlZF9rZXkgPSBzZWxmLl9tYXliZV9jYXN0X2luZGV4ZXIoa2V5KQogICAgICAgIHRyeToKPiAgICAgICAgICAgcmV0dXJuIHNlbGYuX2VuZ2luZS5nZXRfbG9jKGNhc3RlZF9rZXkpCgobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5G1swbTozODA1OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbWluZGV4LnB5eBtbMG06MTY3OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbWluZGV4LnB5eBtbMG06MTk2OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbXBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aRtbMG06NzA4MTogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/ChtbMW0bWzMxbUUgICBLZXlFcnJvcjogJ2xlZ2VuZGFyeScbWzBtCgobWzFtG1szMW1wYW5kYXMvX2xpYnMvaGFzaHRhYmxlX2NsYXNzX2hlbHBlci5weGkbWzBtOjcwODk6IEtleUVycm9yCgobWzMzbVRoZSBhYm92ZSBleGNlcHRpb24gd2FzIHRoZSBkaXJlY3QgY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRpb246G1swbQoKY2Fwc3lzID0gPF9weXRlc3QuY2FwdHVyZS5DYXB0dXJlRml4dHVyZSBvYmplY3QgYXQgMHg3MTNhYTY4YmU5ZTA+CgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQnKQogICAgZGVmIHRlc3RfZXhwZWN0ZWRfb3V0cHV0KGNhcHN5cyk6Cj4gICAgICAgaW1wb3J0IGFwcAoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wNS43LWZpbHRlci1hbmQtY291bnQvdGVzdC5weRtbMG06MjA6IApfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIAobWzFtG1szMW1hcHAucHkbWzBtOjQ2OiBpbiA8bW9kdWxlPgogICAgcHJpbnQoZGYubG9jW2RmWydsZWdlbmRhcnknXS5sZW5dKQobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvZnJhbWUucHkbWzBtOjQxMDI6IGluIF9fZ2V0aXRlbV9fCiAgICBpbmRleGVyID0gc2VsZi5jb2x1bW5zLmdldF9sb2Moa2V5KQpfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIAoKc2VsZiA9IEluZGV4KFsnIycsICdOYW1lJywgJ1R5cGUgMScsICdUeXBlIDInLCAnSFAnLCAnQXR0YWNrJywgJ0RlZmVuc2UnLCAnU3AuIEF0aycsCiAgICAgICAnU3AuIERlZicsICdTcGVlZCcsICdHZW5lcmF0aW9uJywgJ0xlZ2VuZGFyeSddLAogICAgICBkdHlwZT0nb2JqZWN0JykKa2V5ID0gJ2xlZ2VuZGFyeScKCiAgICBkZWYgZ2V0X2xvYyhzZWxmLCBrZXkpOgogICAgICAgICIiIgogICAgICAgIEdldCBpbnRlZ2VyIGxvY2F0aW9uLCBzbGljZSBvciBib29sZWFuIG1hc2sgZm9yIHJlcXVlc3RlZCBsYWJlbC4KICAgIAogICAgICAgIFBhcmFtZXRlcnMKICAgICAgICAtLS0tLS0tLS0tCiAgICAgICAga2V5IDogbGFiZWwKICAgIAogICAgICAgIFJldHVybnMKICAgICAgICAtLS0tLS0tCiAgICAgICAgaW50IGlmIHVuaXF1ZSBpbmRleCwgc2xpY2UgaWYgbW9ub3RvbmljIGluZGV4LCBlbHNlIG1hc2sKICAgIAogICAgICAgIEV4YW1wbGVzCiAgICAgICAgLS0tLS0tLS0KICAgICAgICA+Pj4gdW5pcXVlX2luZGV4ID0gcGQuSW5kZXgobGlzdCgnYWJjJykpCiAgICAgICAgPj4+IHVuaXF1ZV9pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICAxCiAgICAKICAgICAgICA+Pj4gbW9ub3RvbmljX2luZGV4ID0gcGQuSW5kZXgobGlzdCgnYWJiYycpKQogICAgICAgID4+PiBtb25vdG9uaWNfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgc2xpY2UoMSwgMywgTm9uZSkKICAgIAogICAgICAgID4+PiBub25fbW9ub3RvbmljX2luZGV4ID0gcGQuSW5kZXgobGlzdCgnYWJjYicpKQogICAgICAgID4+PiBub25fbW9ub3RvbmljX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIGFycmF5KFtGYWxzZSwgIFRydWUsIEZhbHNlLCAgVHJ1ZV0pCiAgICAgICAgIiIiCiAgICAgICAgY2FzdGVkX2tleSA9IHNlbGYuX21heWJlX2Nhc3RfaW5kZXhlcihrZXkpCiAgICAgICAgdHJ5OgogICAgICAgICAgICByZXR1cm4gc2VsZi5fZW5naW5lLmdldF9sb2MoY2FzdGVkX2tleSkKICAgICAgICBleGNlcHQgS2V5RXJyb3IgYXMgZXJyOgogICAgICAgICAgICBpZiBpc2luc3RhbmNlKGNhc3RlZF9rZXksIHNsaWNlKSBvciAoCiAgICAgICAgICAgICAgICBpc2luc3RhbmNlKGNhc3RlZF9rZXksIGFiYy5JdGVyYWJsZSkKICAgICAgICAgICAgICAgIGFuZCBhbnkoaXNpbnN0YW5jZSh4LCBzbGljZSkgZm9yIHggaW4gY2FzdGVkX2tleSkKICAgICAgICAgICAgKToKICAgICAgICAgICAgICAgIHJhaXNlIEludmFsaWRJbmRleEVycm9yKGtleSkKPiAgICAgICAgICAgcmFpc2UgS2V5RXJyb3Ioa2V5KSBmcm9tIGVycgobWzFtG1szMW1FICAgICAgICAgICBLZXlFcnJvcjogJ2xlZ2VuZGFyeScbWzBtCgobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5G1swbTozODEyOiBLZXlFcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDUuNy1maWx0ZXItYW5kLWNvdW50L3Rlc3QucHk6OhtbMW10ZXN0X2V4cGVjdGVkX291dHB1dBtbMG0gLSBLZXlFcnJvcjogJ2xlZ2VuZGFyeScKG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbSwgG1szMm01IHBhc3NlZBtbMG0bWzMxbSBpbiAwLjU2cxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KLAoKICAgCiAgICAgICAgICAbWzMxbVlvdXIgY29kZSBtdXN0IHRvIGNvbXBseSB3aXRoIHRoZSBmb2xsb3dpbmcgdGVzdHM6G1szOW0gCgogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSAwLiAbWzM3bVRoZSBvdXRwdXQgc2hvdWxkIGJlIHRoZSBleHBlY3RlZBtbMzltIAoK","exit_code":1},{"starting_at":1725576021063,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnbGVnZW5kYXJ5J10gPT0gVHJ1ZV0KcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725576021978,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA2IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjctZmlsdGVyLWFuZC1jb3VudC90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMW1GG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCnNlbGYgPSBJbmRleChbJyMnLCAnTmFtZScsICdUeXBlIDEnLCAnVHlwZSAyJywgJ0hQJywgJ0F0dGFjaycsICdEZWZlbnNlJywgJ1NwLiBBdGsnLAogICAgICAgJ1NwLiBEZWYnLCAnU3BlZWQnLCAnR2VuZXJhdGlvbicsICdMZWdlbmRhcnknXSwKICAgICAgZHR5cGU9J29iamVjdCcpCmtleSA9ICdsZWdlbmRhcnknCgogICAgZGVmIGdldF9sb2Moc2VsZiwga2V5KToKICAgICAgICAiIiIKICAgICAgICBHZXQgaW50ZWdlciBsb2NhdGlvbiwgc2xpY2Ugb3IgYm9vbGVhbiBtYXNrIGZvciByZXF1ZXN0ZWQgbGFiZWwuCiAgICAKICAgICAgICBQYXJhbWV0ZXJzCiAgICAgICAgLS0tLS0tLS0tLQogICAgICAgIGtleSA6IGxhYmVsCiAgICAKICAgICAgICBSZXR1cm5zCiAgICAgICAgLS0tLS0tLQogICAgICAgIGludCBpZiB1bmlxdWUgaW5kZXgsIHNsaWNlIGlmIG1vbm90b25pYyBpbmRleCwgZWxzZSBtYXNrCiAgICAKICAgICAgICBFeGFtcGxlcwogICAgICAgIC0tLS0tLS0tCiAgICAgICAgPj4+IHVuaXF1ZV9pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiYycpKQogICAgICAgID4+PiB1bmlxdWVfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgMQogICAgCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiYmMnKSkKICAgICAgICA+Pj4gbW9ub3RvbmljX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIHNsaWNlKDEsIDMsIE5vbmUpCiAgICAKICAgICAgICA+Pj4gbm9uX21vbm90b25pY19pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiY2InKSkKICAgICAgICA+Pj4gbm9uX21vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBhcnJheShbRmFsc2UsICBUcnVlLCBGYWxzZSwgIFRydWVdKQogICAgICAgICIiIgogICAgICAgIGNhc3RlZF9rZXkgPSBzZWxmLl9tYXliZV9jYXN0X2luZGV4ZXIoa2V5KQogICAgICAgIHRyeToKPiAgICAgICAgICAgcmV0dXJuIHNlbGYuX2VuZ2luZS5nZXRfbG9jKGNhc3RlZF9rZXkpCgobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5G1swbTozODA1OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbWluZGV4LnB5eBtbMG06MTY3OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbWluZGV4LnB5eBtbMG06MTk2OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbXBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aRtbMG06NzA4MTogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/ChtbMW0bWzMxbUUgICBLZXlFcnJvcjogJ2xlZ2VuZGFyeScbWzBtCgobWzFtG1szMW1wYW5kYXMvX2xpYnMvaGFzaHRhYmxlX2NsYXNzX2hlbHBlci5weGkbWzBtOjcwODk6IEtleUVycm9yCgobWzMzbVRoZSBhYm92ZSBleGNlcHRpb24gd2FzIHRoZSBkaXJlY3QgY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRpb246G1swbQoKY2Fwc3lzID0gPF9weXRlc3QuY2FwdHVyZS5DYXB0dXJlRml4dHVyZSBvYmplY3QgYXQgMHg3OTRlMmY0MjczZDA+CgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQnKQogICAgZGVmIHRlc3RfZXhwZWN0ZWRfb3V0cHV0KGNhcHN5cyk6Cj4gICAgICAgaW1wb3J0IGFwcAoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wNS43LWZpbHRlci1hbmQtY291bnQvdGVzdC5weRtbMG06MjA6IApfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIAobWzFtG1szMW1hcHAucHkbWzBtOjQ2OiBpbiA8bW9kdWxlPgogICAgbGVnZW5kYXJ5X3Bva2Vtb24gPSBkZi5sb2NbZGZbJ2xlZ2VuZGFyeSddID09IFRydWVdChtbMW0bWzMxbS9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9mcmFtZS5weRtbMG06NDEwMjogaW4gX19nZXRpdGVtX18KICAgIGluZGV4ZXIgPSBzZWxmLmNvbHVtbnMuZ2V0X2xvYyhrZXkpCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgpzZWxmID0gSW5kZXgoWycjJywgJ05hbWUnLCAnVHlwZSAxJywgJ1R5cGUgMicsICdIUCcsICdBdHRhY2snLCAnRGVmZW5zZScsICdTcC4gQXRrJywKICAgICAgICdTcC4gRGVmJywgJ1NwZWVkJywgJ0dlbmVyYXRpb24nLCAnTGVnZW5kYXJ5J10sCiAgICAgIGR0eXBlPSdvYmplY3QnKQprZXkgPSAnbGVnZW5kYXJ5JwoKICAgIGRlZiBnZXRfbG9jKHNlbGYsIGtleSk6CiAgICAgICAgIiIiCiAgICAgICAgR2V0IGludGVnZXIgbG9jYXRpb24sIHNsaWNlIG9yIGJvb2xlYW4gbWFzayBmb3IgcmVxdWVzdGVkIGxhYmVsLgogICAgCiAgICAgICAgUGFyYW1ldGVycwogICAgICAgIC0tLS0tLS0tLS0KICAgICAgICBrZXkgOiBsYWJlbAogICAgCiAgICAgICAgUmV0dXJucwogICAgICAgIC0tLS0tLS0KICAgICAgICBpbnQgaWYgdW5pcXVlIGluZGV4LCBzbGljZSBpZiBtb25vdG9uaWMgaW5kZXgsIGVsc2UgbWFzawogICAgCiAgICAgICAgRXhhbXBsZXMKICAgICAgICAtLS0tLS0tLQogICAgICAgID4+PiB1bmlxdWVfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmMnKSkKICAgICAgICA+Pj4gdW5pcXVlX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIDEKICAgIAogICAgICAgID4+PiBtb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmJjJykpCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBzbGljZSgxLCAzLCBOb25lKQogICAgCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmNiJykpCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgYXJyYXkoW0ZhbHNlLCAgVHJ1ZSwgRmFsc2UsICBUcnVlXSkKICAgICAgICAiIiIKICAgICAgICBjYXN0ZWRfa2V5ID0gc2VsZi5fbWF5YmVfY2FzdF9pbmRleGVyKGtleSkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogICAgICAgIGV4Y2VwdCBLZXlFcnJvciBhcyBlcnI6CiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UoY2FzdGVkX2tleSwgc2xpY2UpIG9yICgKICAgICAgICAgICAgICAgIGlzaW5zdGFuY2UoY2FzdGVkX2tleSwgYWJjLkl0ZXJhYmxlKQogICAgICAgICAgICAgICAgYW5kIGFueShpc2luc3RhbmNlKHgsIHNsaWNlKSBmb3IgeCBpbiBjYXN0ZWRfa2V5KQogICAgICAgICAgICApOgogICAgICAgICAgICAgICAgcmFpc2UgSW52YWxpZEluZGV4RXJyb3Ioa2V5KQo+ICAgICAgICAgICByYWlzZSBLZXlFcnJvcihrZXkpIGZyb20gZXJyChtbMW0bWzMxbUUgICAgICAgICAgIEtleUVycm9yOiAnbGVnZW5kYXJ5JxtbMG0KChtbMW0bWzMxbS9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9pbmRleGVzL2Jhc2UucHkbWzBtOjM4MTI6IEtleUVycm9yChtbMzZtG1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PSBzaG9ydCB0ZXN0IHN1bW1hcnkgaW5mbyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wNS43LWZpbHRlci1hbmQtY291bnQvdGVzdC5weTo6G1sxbXRlc3RfZXhwZWN0ZWRfb3V0cHV0G1swbSAtIEtleUVycm9yOiAnbGVnZW5kYXJ5JwobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtLCAbWzMybTUgcGFzc2VkG1swbRtbMzFtIGluIDAuNTVzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA2IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjctZmlsdGVyLWFuZC1jb3VudC90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMW1GG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCnNlbGYgPSBJbmRleChbJyMnLCAnTmFtZScsICdUeXBlIDEnLCAnVHlwZSAyJywgJ0hQJywgJ0F0dGFjaycsICdEZWZlbnNlJywgJ1NwLiBBdGsnLAogICAgICAgJ1NwLiBEZWYnLCAnU3BlZWQnLCAnR2VuZXJhdGlvbicsICdMZWdlbmRhcnknXSwKICAgICAgZHR5cGU9J29iamVjdCcpCmtleSA9ICdsZWdlbmRhcnknCgogICAgZGVmIGdldF9sb2Moc2VsZiwga2V5KToKICAgICAgICAiIiIKICAgICAgICBHZXQgaW50ZWdlciBsb2NhdGlvbiwgc2xpY2Ugb3IgYm9vbGVhbiBtYXNrIGZvciByZXF1ZXN0ZWQgbGFiZWwuCiAgICAKICAgICAgICBQYXJhbWV0ZXJzCiAgICAgICAgLS0tLS0tLS0tLQogICAgICAgIGtleSA6IGxhYmVsCiAgICAKICAgICAgICBSZXR1cm5zCiAgICAgICAgLS0tLS0tLQogICAgICAgIGludCBpZiB1bmlxdWUgaW5kZXgsIHNsaWNlIGlmIG1vbm90b25pYyBpbmRleCwgZWxzZSBtYXNrCiAgICAKICAgICAgICBFeGFtcGxlcwogICAgICAgIC0tLS0tLS0tCiAgICAgICAgPj4+IHVuaXF1ZV9pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiYycpKQogICAgICAgID4+PiB1bmlxdWVfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgMQogICAgCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiYmMnKSkKICAgICAgICA+Pj4gbW9ub3RvbmljX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIHNsaWNlKDEsIDMsIE5vbmUpCiAgICAKICAgICAgICA+Pj4gbm9uX21vbm90b25pY19pbmRleCA9IHBkLkluZGV4KGxpc3QoJ2FiY2InKSkKICAgICAgICA+Pj4gbm9uX21vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBhcnJheShbRmFsc2UsICBUcnVlLCBGYWxzZSwgIFRydWVdKQogICAgICAgICIiIgogICAgICAgIGNhc3RlZF9rZXkgPSBzZWxmLl9tYXliZV9jYXN0X2luZGV4ZXIoa2V5KQogICAgICAgIHRyeToKPiAgICAgICAgICAgcmV0dXJuIHNlbGYuX2VuZ2luZS5nZXRfbG9jKGNhc3RlZF9rZXkpCgobWzFtG1szMW0vaG9tZS92c2NvZGUvLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5G1swbTozODA1OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbWluZGV4LnB5eBtbMG06MTY3OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbWluZGV4LnB5eBtbMG06MTk2OiAKXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyAKCj4gICA/Pz8KChtbMW0bWzMxbXBhbmRhcy9fbGlicy9oYXNodGFibGVfY2xhc3NfaGVscGVyLnB4aRtbMG06NzA4MTogCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgo+ICAgPz8/ChtbMW0bWzMxbUUgICBLZXlFcnJvcjogJ2xlZ2VuZGFyeScbWzBtCgobWzFtG1szMW1wYW5kYXMvX2xpYnMvaGFzaHRhYmxlX2NsYXNzX2hlbHBlci5weGkbWzBtOjcwODk6IEtleUVycm9yCgobWzMzbVRoZSBhYm92ZSBleGNlcHRpb24gd2FzIHRoZSBkaXJlY3QgY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyBleGNlcHRpb246G1swbQoKY2Fwc3lzID0gPF9weXRlc3QuY2FwdHVyZS5DYXB0dXJlRml4dHVyZSBvYmplY3QgYXQgMHg3OTRlMmY0MjczZDA+CgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQnKQogICAgZGVmIHRlc3RfZXhwZWN0ZWRfb3V0cHV0KGNhcHN5cyk6Cj4gICAgICAgaW1wb3J0IGFwcAoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wNS43LWZpbHRlci1hbmQtY291bnQvdGVzdC5weRtbMG06MjA6IApfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIAobWzFtG1szMW1hcHAucHkbWzBtOjQ2OiBpbiA8bW9kdWxlPgogICAgbGVnZW5kYXJ5X3Bva2Vtb24gPSBkZi5sb2NbZGZbJ2xlZ2VuZGFyeSddID09IFRydWVdChtbMW0bWzMxbS9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9mcmFtZS5weRtbMG06NDEwMjogaW4gX19nZXRpdGVtX18KICAgIGluZGV4ZXIgPSBzZWxmLmNvbHVtbnMuZ2V0X2xvYyhrZXkpCl8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gXyBfIF8gCgpzZWxmID0gSW5kZXgoWycjJywgJ05hbWUnLCAnVHlwZSAxJywgJ1R5cGUgMicsICdIUCcsICdBdHRhY2snLCAnRGVmZW5zZScsICdTcC4gQXRrJywKICAgICAgICdTcC4gRGVmJywgJ1NwZWVkJywgJ0dlbmVyYXRpb24nLCAnTGVnZW5kYXJ5J10sCiAgICAgIGR0eXBlPSdvYmplY3QnKQprZXkgPSAnbGVnZW5kYXJ5JwoKICAgIGRlZiBnZXRfbG9jKHNlbGYsIGtleSk6CiAgICAgICAgIiIiCiAgICAgICAgR2V0IGludGVnZXIgbG9jYXRpb24sIHNsaWNlIG9yIGJvb2xlYW4gbWFzayBmb3IgcmVxdWVzdGVkIGxhYmVsLgogICAgCiAgICAgICAgUGFyYW1ldGVycwogICAgICAgIC0tLS0tLS0tLS0KICAgICAgICBrZXkgOiBsYWJlbAogICAgCiAgICAgICAgUmV0dXJucwogICAgICAgIC0tLS0tLS0KICAgICAgICBpbnQgaWYgdW5pcXVlIGluZGV4LCBzbGljZSBpZiBtb25vdG9uaWMgaW5kZXgsIGVsc2UgbWFzawogICAgCiAgICAgICAgRXhhbXBsZXMKICAgICAgICAtLS0tLS0tLQogICAgICAgID4+PiB1bmlxdWVfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmMnKSkKICAgICAgICA+Pj4gdW5pcXVlX2luZGV4LmdldF9sb2MoJ2InKQogICAgICAgIDEKICAgIAogICAgICAgID4+PiBtb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmJjJykpCiAgICAgICAgPj4+IG1vbm90b25pY19pbmRleC5nZXRfbG9jKCdiJykKICAgICAgICBzbGljZSgxLCAzLCBOb25lKQogICAgCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXggPSBwZC5JbmRleChsaXN0KCdhYmNiJykpCiAgICAgICAgPj4+IG5vbl9tb25vdG9uaWNfaW5kZXguZ2V0X2xvYygnYicpCiAgICAgICAgYXJyYXkoW0ZhbHNlLCAgVHJ1ZSwgRmFsc2UsICBUcnVlXSkKICAgICAgICAiIiIKICAgICAgICBjYXN0ZWRfa2V5ID0gc2VsZi5fbWF5YmVfY2FzdF9pbmRleGVyKGtleSkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJldHVybiBzZWxmLl9lbmdpbmUuZ2V0X2xvYyhjYXN0ZWRfa2V5KQogICAgICAgIGV4Y2VwdCBLZXlFcnJvciBhcyBlcnI6CiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UoY2FzdGVkX2tleSwgc2xpY2UpIG9yICgKICAgICAgICAgICAgICAgIGlzaW5zdGFuY2UoY2FzdGVkX2tleSwgYWJjLkl0ZXJhYmxlKQogICAgICAgICAgICAgICAgYW5kIGFueShpc2luc3RhbmNlKHgsIHNsaWNlKSBmb3IgeCBpbiBjYXN0ZWRfa2V5KQogICAgICAgICAgICApOgogICAgICAgICAgICAgICAgcmFpc2UgSW52YWxpZEluZGV4RXJyb3Ioa2V5KQo+ICAgICAgICAgICByYWlzZSBLZXlFcnJvcihrZXkpIGZyb20gZXJyChtbMW0bWzMxbUUgICAgICAgICAgIEtleUVycm9yOiAnbGVnZW5kYXJ5JxtbMG0KChtbMW0bWzMxbS9ob21lL3ZzY29kZS8ubG9jYWwvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9wYW5kYXMvY29yZS9pbmRleGVzL2Jhc2UucHkbWzBtOjM4MTI6IEtleUVycm9yChtbMzZtG1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PSBzaG9ydCB0ZXN0IHN1bW1hcnkgaW5mbyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wNS43LWZpbHRlci1hbmQtY291bnQvdGVzdC5weTo6G1sxbXRlc3RfZXhwZWN0ZWRfb3V0cHV0G1swbSAtIEtleUVycm9yOiAnbGVnZW5kYXJ5JwobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtLCAbWzMybTUgcGFzc2VkG1swbRtbMzFtIGluIDAuNTVzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQosCgogICAKICAgICAgICAgIBtbMzFtWW91ciBjb2RlIG11c3QgdG8gY29tcGx5IHdpdGggdGhlIGZvbGxvd2luZyB0ZXN0czobWzM5bSAKCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDAuIBtbMzdtVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkG1szOW0gCgo=","exit_code":1},{"starting_at":1725576107039,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3Bva2Vtb25fZGF0YS5jc3YnKQpsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725576107757,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA2IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA1LjctZmlsdGVyLWFuZC1jb3VudC90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW02IHBhc3NlZBtbMG0bWzMybSBpbiAwLjMxcxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725575102221,"completed_at":1725576107757},{"slug":"06-clean-datasets","position":18,"files":[{"path":".learn/exercises/06-clean-datasets/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/06-clean-datasets/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/06-clean-datasets/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/06-clean-datasets/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"ICAgVW5uYW1lZDogMCAgICAgSWQgICAgIE5hbWUgIFllYXIgR2VuZGVyIFN0YXRlICBDb3VudAowICAgICAgIDExMzQ5ICAxMTM1MCAgICAgRW1tYSAgMjAwNCAgICAgIEYgICAgQUsgICAgIDYyCjEgICAgICAgMTEzNTAgIDExMzUxICBNYWRpc29uICAyMDA0ICAgICAgRiAgICBBSyAgICAgNDgKMiAgICAgICAxMTM1MSAgMTEzNTIgICBIYW5uYWggIDIwMDQgICAgICBGICAgIEFLICAgICA0NgozICAgICAgIDExMzUyICAxMTM1MyAgICBHcmFjZSAgMjAwNCAgICAgIEYgICAgQUsgICAgIDQ0CjQgICAgICAgMTEzNTMgIDExMzU0ICAgIEVtaWx5ICAyMDA0ICAgICAgRiAgICBBSyAgICAgNDEK","signal":null,"memoryUsage":524288,"cpuUsage":8782,"starting_at":1725576244200,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKcHJpbnQoZGYuaGVhZCgpKQoKIyBsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KIyBwcmludChsZW4obGVnZW5kYXJ5X3Bva2Vtb24pKQoKCiMgc2VsZWN0ZWRfY29sdW1ucyA9IGRmW1snTmFtZScsICdUeXBlIDEnXV0KIyBwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725576245158,"exit_code":0}],"tests":[{"starting_at":1725576254062,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKcHJpbnQoZGYuaGVhZCgpKQoKIyBsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KIyBwcmludChsZW4obGVnZW5kYXJ5X3Bva2Vtb24pKQoKCiMgc2VsZWN0ZWRfY29sdW1ucyA9IGRmW1snTmFtZScsICdUeXBlIDEnXV0KIyBwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725576255212,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA1IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA2LWNsZWFuLWRhdGFzZXRzL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW01IHBhc3NlZBtbMG0bWzMybSBpbiAwLjc2cxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725576113468,"completed_at":1725576255212},{"slug":"06.1-remove-column","position":19,"files":[{"path":".learn/exercises/06.1-remove-column/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/06.1-remove-column/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/06.1-remove-column/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/06.1-remove-column/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"ICAgVW5uYW1lZDogMCAgICAgSWQgICAgIE5hbWUgIFllYXIgR2VuZGVyIFN0YXRlICBDb3VudAowICAgICAgIDExMzQ5ICAxMTM1MCAgICAgRW1tYSAgMjAwNCAgICAgIEYgICAgQUsgICAgIDYyCjEgICAgICAgMTEzNTAgIDExMzUxICBNYWRpc29uICAyMDA0ICAgICAgRiAgICBBSyAgICAgNDgKMiAgICAgICAxMTM1MSAgMTEzNTIgICBIYW5uYWggIDIwMDQgICAgICBGICAgIEFLICAgICA0NgozICAgICAgIDExMzUyICAxMTM1MyAgICBHcmFjZSAgMjAwNCAgICAgIEYgICAgQUsgICAgIDQ0CjQgICAgICAgMTEzNTMgIDExMzU0ICAgIEVtaWx5ICAyMDA0ICAgICAgRiAgICBBSyAgICAgNDEK","signal":null,"memoryUsage":393216,"cpuUsage":3972,"starting_at":1725576288544,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKcHJpbnQoZGYuaGVhZCgpKQoKIyBsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KIyBwcmludChsZW4obGVnZW5kYXJ5X3Bva2Vtb24pKQoKCiMgc2VsZWN0ZWRfY29sdW1ucyA9IGRmW1snTmFtZScsICdUeXBlIDEnXV0KIyBwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725576289404,"exit_code":0},{"stderr":"","stdout":"ICAgICAgSWQgICAgIE5hbWUgIFllYXIgR2VuZGVyIFN0YXRlICBDb3VudAowICAxMTM1MCAgICAgRW1tYSAgMjAwNCAgICAgIEYgICAgQUsgICAgIDYyCjEgIDExMzUxICBNYWRpc29uICAyMDA0ICAgICAgRiAgICBBSyAgICAgNDgKMiAgMTEzNTIgICBIYW5uYWggIDIwMDQgICAgICBGICAgIEFLICAgICA0NgozICAxMTM1MyAgICBHcmFjZSAgMjAwNCAgICAgIEYgICAgQUsgICAgIDQ0CjQgIDExMzU0ICAgIEVtaWx5ICAyMDA0ICAgICAgRiAgICBBSyAgICAgNDEK","signal":null,"memoryUsage":393216,"cpuUsage":3791,"starting_at":1725576550349,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKZGYuZHJvcChjb2x1bW5zPVsnVW5uYW1lZDogMCddLCBpbnBsYWNlPVRydWUpCnByaW50KGRmLmhlYWQoKSkKCiMgbGVnZW5kYXJ5X3Bva2Vtb24gPSBkZi5sb2NbZGZbJ0xlZ2VuZGFyeSddID09IFRydWVdCiMgcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725576551161,"exit_code":0}],"tests":[{"starting_at":1725576556463,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKZGYuZHJvcChjb2x1bW5zPVsnVW5uYW1lZDogMCddLCBpbnBsYWNlPVRydWUpCnByaW50KGRmLmhlYWQoKSkKCiMgbGVnZW5kYXJ5X3Bva2Vtb24gPSBkZi5sb2NbZGZbJ0xlZ2VuZGFyeSddID09IFRydWVdCiMgcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725576557703,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA2IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA2LjEtcmVtb3ZlLWNvbHVtbi90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW02IHBhc3NlZBtbMG0bWzMybSBpbiAwLjg5cxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725576262891,"completed_at":1725576557703},{"slug":"06.2-value-counts","position":20,"files":[{"path":".learn/exercises/06.2-value-counts/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/06.2-value-counts/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/06.2-value-counts/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/06.2-value-counts/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"ICAgICAgSWQgICAgIE5hbWUgIFllYXIgR2VuZGVyIFN0YXRlICBDb3VudAowICAxMTM1MCAgICAgRW1tYSAgMjAwNCAgICAgIEYgICAgQUsgICAgIDYyCjEgIDExMzUxICBNYWRpc29uICAyMDA0ICAgICAgRiAgICBBSyAgICAgNDgKMiAgMTEzNTIgICBIYW5uYWggIDIwMDQgICAgICBGICAgIEFLICAgICA0NgozICAxMTM1MyAgICBHcmFjZSAgMjAwNCAgICAgIEYgICAgQUsgICAgIDQ0CjQgIDExMzU0ICAgIEVtaWx5ICAyMDA0ICAgICAgRiAgICBBSyAgICAgNDEK","signal":null,"memoryUsage":262144,"cpuUsage":7804,"starting_at":1725576877155,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKZGYuZHJvcChjb2x1bW5zPVsnVW5uYW1lZDogMCddLCBpbnBsYWNlPVRydWUpCmdlbmRlcl9jb3VudHMgPSBkZlsnR2VuZGVyJ10udmFsdWVfY291bnRzKCkKcHJpbnQoZGYuaGVhZCgpKQoKIyBsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KIyBwcmludChsZW4obGVnZW5kYXJ5X3Bva2Vtb24pKQoKCiMgc2VsZWN0ZWRfY29sdW1ucyA9IGRmW1snTmFtZScsICdUeXBlIDEnXV0KIyBwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725576878004,"exit_code":0},{"stderr":"","stdout":"R2VuZGVyCkYgICAgNTU4ODQ2Ck0gICAgNDU3NTQ5Ck5hbWU6IGNvdW50LCBkdHlwZTogaW50NjQK","signal":null,"memoryUsage":393216,"cpuUsage":7486,"starting_at":1725576886498,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKZGYuZHJvcChjb2x1bW5zPVsnVW5uYW1lZDogMCddLCBpbnBsYWNlPVRydWUpCmdlbmRlcl9jb3VudHMgPSBkZlsnR2VuZGVyJ10udmFsdWVfY291bnRzKCkKcHJpbnQoZ2VuZGVyX2NvdW50cykKCiMgbGVnZW5kYXJ5X3Bva2Vtb24gPSBkZi5sb2NbZGZbJ0xlZ2VuZGFyeSddID09IFRydWVdCiMgcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725576887374,"exit_code":0}],"tests":[{"starting_at":1725576893625,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKZGYuZHJvcChjb2x1bW5zPVsnVW5uYW1lZDogMCddLCBpbnBsYWNlPVRydWUpCmdlbmRlcl9jb3VudHMgPSBkZlsnR2VuZGVyJ10udmFsdWVfY291bnRzKCkKcHJpbnQoZ2VuZGVyX2NvdW50cykKCiMgbGVnZW5kYXJ5X3Bva2Vtb24gPSBkZi5sb2NbZGZbJ0xlZ2VuZGFyeSddID09IFRydWVdCiMgcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725576894818,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA1IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA2LjItdmFsdWUtY291bnRzL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybSAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW01IHBhc3NlZBtbMG0bWzMybSBpbiAwLjg1cxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725576571793,"completed_at":1725576894818},{"slug":"06.3-group-by","position":21,"files":[{"path":".learn/exercises/06.3-group-by/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/06.3-group-by/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/06.3-group-by/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/06.3-group-by/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"","signal":null,"memoryUsage":393216,"cpuUsage":6733,"starting_at":1725577252751,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKZGYuZHJvcChjb2x1bW5zPVsnVW5uYW1lZDogMCddLCBpbnBsYWNlPVRydWUpCm5hbWVfc2NvcmUgPSBkZi5ncm91cGJ5KCdOYW1lJykuc3VtKCkKCiMgZ2VuZGVyX2NvdW50cyA9IGRmWydHZW5kZXInXS52YWx1ZV9jb3VudHMoKQojIHByaW50KGdlbmRlcl9jb3VudHMpCgojIGxlZ2VuZGFyeV9wb2tlbW9uID0gZGYubG9jW2RmWydMZWdlbmRhcnknXSA9PSBUcnVlXQojIHByaW50KGxlbihsZWdlbmRhcnlfcG9rZW1vbikpCgoKIyBzZWxlY3RlZF9jb2x1bW5zID0gZGZbWydOYW1lJywgJ1R5cGUgMSddXQojIHByaW50KHNlbGVjdGVkX2NvbHVtbnMuaGVhZCgxMCkpCiMgcHJpbnQoZGYuaWxvY1sxMzMsNl0p","ended_at":1725577253913,"exit_code":0},{"stderr":"","stdout":"ICAgICAgICAgICAgICAgIElkICAuLi4gIENvdW50Ck5hbWUgICAgICAgICAgICAgICAgLi4uICAgICAgIApBYWJhbiAgICAgIDc3MzM4MDMgIC4uLiAgICAgMTIKQWFkYW4gICAgICA3MTU4MDY1ICAuLi4gICAgIDIzCkFhZGFyc2ggICAgMTcyODAzMSAgLi4uICAgICAgNQpBYWRlbiAgICA1NTUwNTIyMjUgIC4uLiAgIDM0MjYKQWFkaGF2ICAgICAgNzA5NjA3ICAuLi4gICAgICA2Ci4uLiAgICAgICAgICAgIC4uLiAgLi4uICAgIC4uLgpaeXJhICAgICAgMTc1MzkwMDUgIC4uLiAgICAgNDIKWnlyYWggICAgICA1NDg3MDc1ICAuLi4gICAgIDExClp5cmVuICAgICAgNTA3NDIzMCAgLi4uICAgICAgNgpaeXJpYSAgICAgMjk3ODcwMzkgIC4uLiAgICAgNTkKWnlyaWFoICAgIDM0MTQ2MjA1ICAuLi4gICAgIDU4CgpbMTc2MzIgcm93cyB4IDUgY29sdW1uc10K","signal":null,"memoryUsage":524288,"cpuUsage":7895,"starting_at":1725577315907,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKZGYuZHJvcChjb2x1bW5zPVsnVW5uYW1lZDogMCddLCBpbnBsYWNlPVRydWUpCm5hbWVfc2NvcmUgPSBkZi5ncm91cGJ5KCdOYW1lJykuc3VtKCkKcHJpbnQobmFtZV9zY29yZSkKCiMgZ2VuZGVyX2NvdW50cyA9IGRmWydHZW5kZXInXS52YWx1ZV9jb3VudHMoKQojIHByaW50KGdlbmRlcl9jb3VudHMpCgojIGxlZ2VuZGFyeV9wb2tlbW9uID0gZGYubG9jW2RmWydMZWdlbmRhcnknXSA9PSBUcnVlXQojIHByaW50KGxlbihsZWdlbmRhcnlfcG9rZW1vbikpCgoKIyBzZWxlY3RlZF9jb2x1bW5zID0gZGZbWydOYW1lJywgJ1R5cGUgMSddXQojIHByaW50KHNlbGVjdGVkX2NvbHVtbnMuaGVhZCgxMCkpCiMgcHJpbnQoZGYuaWxvY1sxMzMsNl0p","ended_at":1725577317057,"exit_code":0},{"stderr":"","stdout":"ICAgICAgICAgICAgICAgIElkICAuLi4gIENvdW50Ck5hbWUgICAgICAgICAgICAgICAgLi4uICAgICAgIApBYWJhbiAgICAgIDc3MzM4MDMgIC4uLiAgICAgMTIKQWFkYW4gICAgICA3MTU4MDY1ICAuLi4gICAgIDIzCkFhZGFyc2ggICAgMTcyODAzMSAgLi4uICAgICAgNQpBYWRlbiAgICA1NTUwNTIyMjUgIC4uLiAgIDM0MjYKQWFkaGF2ICAgICAgNzA5NjA3ICAuLi4gICAgICA2Ci4uLiAgICAgICAgICAgIC4uLiAgLi4uICAgIC4uLgpaeXJhICAgICAgMTc1MzkwMDUgIC4uLiAgICAgNDIKWnlyYWggICAgICA1NDg3MDc1ICAuLi4gICAgIDExClp5cmVuICAgICAgNTA3NDIzMCAgLi4uICAgICAgNgpaeXJpYSAgICAgMjk3ODcwMzkgIC4uLiAgICAgNTkKWnlyaWFoICAgIDM0MTQ2MjA1ICAuLi4gICAgIDU4CgpbMTc2MzIgcm93cyB4IDUgY29sdW1uc10K","signal":null,"memoryUsage":524288,"cpuUsage":7928,"starting_at":1725577333885,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKZGYuZHJvcChjb2x1bW5zPVsnVW5uYW1lZDogMCddLCBpbnBsYWNlPVRydWUpCm5hbWVfc2NvcmUgPSBkZi5ncm91cGJ5KCdOYW1lJykuc3VtKCkKcHJpbnQobmFtZV9zY29yZSkKCiMgZ2VuZGVyX2NvdW50cyA9IGRmWydHZW5kZXInXS52YWx1ZV9jb3VudHMoKQojIHByaW50KGdlbmRlcl9jb3VudHMpCgojIGxlZ2VuZGFyeV9wb2tlbW9uID0gZGYubG9jW2RmWydMZWdlbmRhcnknXSA9PSBUcnVlXQojIHByaW50KGxlbihsZWdlbmRhcnlfcG9rZW1vbikpCgoKIyBzZWxlY3RlZF9jb2x1bW5zID0gZGZbWydOYW1lJywgJ1R5cGUgMSddXQojIHByaW50KHNlbGVjdGVkX2NvbHVtbnMuaGVhZCgxMCkpCiMgcHJpbnQoZGYuaWxvY1sxMzMsNl0p","ended_at":1725577335276,"exit_code":0},{"stderr":"","stdout":"ICAgICAgICAgVW5uYW1lZDogMCAgLi4uICBDb3VudApOYW1lICAgICAgICAgICAgICAgICAuLi4gICAgICAgCkFhYmFuICAgICAgIDc3MzM4MDEgIC4uLiAgICAgMTIKQWFkYW4gICAgICAgNzE1ODA2MSAgLi4uICAgICAyMwpBYWRhcnNoICAgICAxNzI4MDMwICAuLi4gICAgICA1CkFhZGVuICAgICA1NTUwNTIwMjkgIC4uLiAgIDM0MjYKQWFkaGF2ICAgICAgIDcwOTYwNiAgLi4uICAgICAgNgouLi4gICAgICAgICAgICAgLi4uICAuLi4gICAgLi4uClp5cmEgICAgICAgMTc1Mzg5OTggIC4uLiAgICAgNDIKWnlyYWggICAgICAgNTQ4NzA3MyAgLi4uICAgICAxMQpaeXJlbiAgICAgICA1MDc0MjI5ICAuLi4gICAgICA2Clp5cmlhICAgICAgMjk3ODcwMjkgIC4uLiAgICAgNTkKWnlyaWFoICAgICAzNDE0NjE5NiAgLi4uICAgICA1OAoKWzE3NjMyIHJvd3MgeCA2IGNvbHVtbnNdCg==","signal":null,"memoryUsage":524288,"cpuUsage":7852,"starting_at":1725577359166,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKIyBkZi5kcm9wKGNvbHVtbnM9WydVbm5hbWVkOiAwJ10sIGlucGxhY2U9VHJ1ZSkKbmFtZV9zY29yZSA9IGRmLmdyb3VwYnkoJ05hbWUnKQpwcmludChuYW1lX3Njb3JlLnN1bSgpKQoKIyBnZW5kZXJfY291bnRzID0gZGZbJ0dlbmRlciddLnZhbHVlX2NvdW50cygpCiMgcHJpbnQoZ2VuZGVyX2NvdW50cykKCiMgbGVnZW5kYXJ5X3Bva2Vtb24gPSBkZi5sb2NbZGZbJ0xlZ2VuZGFyeSddID09IFRydWVdCiMgcHJpbnQobGVuKGxlZ2VuZGFyeV9wb2tlbW9uKSkKCgojIHNlbGVjdGVkX2NvbHVtbnMgPSBkZltbJ05hbWUnLCAnVHlwZSAxJ11dCiMgcHJpbnQoc2VsZWN0ZWRfY29sdW1ucy5oZWFkKDEwKSkKIyBwcmludChkZi5pbG9jWzEzMyw2XSk=","ended_at":1725577360339,"exit_code":0},{"stderr":"","stdout":"MTc2MzIK","signal":null,"memoryUsage":524288,"cpuUsage":7562,"starting_at":1725577387336,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKIyBkZi5kcm9wKGNvbHVtbnM9WydVbm5hbWVkOiAwJ10sIGlucGxhY2U9VHJ1ZSkKbmFtZV9zY29yZSA9IGRmLmdyb3VwYnkoJ05hbWUnKS5zdW0oKQpwcmludChsZW4obmFtZV9zY29yZSkpCgojIGdlbmRlcl9jb3VudHMgPSBkZlsnR2VuZGVyJ10udmFsdWVfY291bnRzKCkKIyBwcmludChnZW5kZXJfY291bnRzKQoKIyBsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KIyBwcmludChsZW4obGVnZW5kYXJ5X3Bva2Vtb24pKQoKCiMgc2VsZWN0ZWRfY29sdW1ucyA9IGRmW1snTmFtZScsICdUeXBlIDEnXV0KIyBwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725577388493,"exit_code":0}],"tests":[{"starting_at":1725577327453,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKZGYuZHJvcChjb2x1bW5zPVsnVW5uYW1lZDogMCddLCBpbnBsYWNlPVRydWUpCm5hbWVfc2NvcmUgPSBkZi5ncm91cGJ5KCdOYW1lJykuc3VtKCkKcHJpbnQobmFtZV9zY29yZSkKCiMgZ2VuZGVyX2NvdW50cyA9IGRmWydHZW5kZXInXS52YWx1ZV9jb3VudHMoKQojIHByaW50KGdlbmRlcl9jb3VudHMpCgojIGxlZ2VuZGFyeV9wb2tlbW9uID0gZGYubG9jW2RmWydMZWdlbmRhcnknXSA9PSBUcnVlXQojIHByaW50KGxlbihsZWdlbmRhcnlfcG9rZW1vbikpCgoKIyBzZWxlY3RlZF9jb2x1bW5zID0gZGZbWydOYW1lJywgJ1R5cGUgMSddXQojIHByaW50KHNlbGVjdGVkX2NvbHVtbnMuaGVhZCgxMCkpCiMgcHJpbnQoZGYuaWxvY1sxMzMsNl0p","ended_at":1725577328917,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA4IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA2LjMtZ3JvdXAtYnkvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMW1GG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4N2M3MzkyMGUxOGEwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiMTc2MzJcbiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnMTc2MzJcbicgaW4gJyAgICAgICAgICAgICAgICBJZCAgLi4uICBDb3VudFxuTmFtZSAgICAgICAgICAgICAgICAuLi4gICAgICAgXG5BYWJhbiAgICAgIDc3MzM4MDMgIC4uLiAgICAgMTJcbkFhZGFuICAgICAgNzE1ODA2NSAgLi4uLiAgICAgNTA3NDIzMCAgLi4uICAgICAgNlxuWnlyaWEgICAgIDI5Nzg3MDM5ICAuLi4gICAgIDU5XG5aeXJpYWggICAgMzQxNDYyMDUgIC4uLiAgICAgNThcblxuWzE3NjMyIHJvd3MgeCA1IGNvbHVtbnNdXG4nG1swbQobWzFtG1szMW1FICAgICAgICArICB3aGVyZSAnICAgICAgICAgICAgICAgIElkICAuLi4gIENvdW50XG5OYW1lICAgICAgICAgICAgICAgIC4uLiAgICAgICBcbkFhYmFuICAgICAgNzczMzgwMyAgLi4uICAgICAxMlxuQWFkYW4gICAgICA3MTU4MDY1ICAuLi4uICAgICA1MDc0MjMwICAuLi4gICAgICA2XG5aeXJpYSAgICAgMjk3ODcwMzkgIC4uLiAgICAgNTlcblp5cmlhaCAgICAzNDE0NjIwNSAgLi4uICAgICA1OFxuXG5bMTc2MzIgcm93cyB4IDUgY29sdW1uc11cbicgPSBDYXB0dXJlUmVzdWx0KG91dD0nICAgICAgICAgICAgICAgIElkICAuLi4gIENvdW50XG5OYW1lICAgICAgICAgICAgICAgIC4uLiAgICAgICBcbkFhYmFuICAgICAgNzczMzgwMyAgLi4uICAgICAxMlxuQWFkLi4uMjMwICAuLi4gICAgICA2XG5aeXJpYSAgICAgMjk3ODcwMzkgIC4uLiAgICAgNTlcblp5cmlhaCAgICAzNDE0NjIwNSAgLi4uICAgICA1OFxuXG5bMTc2MzIgcm93cyB4IDUgY29sdW1uc11cbicsIGVycj0nJykub3V0G1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wNi4zLWdyb3VwLWJ5L3Rlc3QucHkbWzBtOjU0OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDYuMy1ncm91cC1ieS90ZXN0LnB5OjobWzFtdGVzdF9leHBlY3RlZF9vdXRwdXQbWzBtIC0gQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnMTc2MzJcbicgaW4gJyAgICAgICAgICAgICAgICBJZCAgLi4uICBDb3VudFxuTmFtZSAgLi4uChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMxbRtbMW0xIGZhaWxlZBtbMG0sIBtbMzJtNyBwYXNzZWQbWzBtG1szMW0gaW4gMS4xNXMbWzBtG1szMW0gPT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA4IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA2LjMtZ3JvdXAtYnkvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMW1GG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBGQUlMVVJFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQobWzMxbRtbMW1fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2V4cGVjdGVkX291dHB1dCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXxtbMG0KCmNhcHN5cyA9IDxfcHl0ZXN0LmNhcHR1cmUuQ2FwdHVyZUZpeHR1cmUgb2JqZWN0IGF0IDB4N2M3MzkyMGUxOGEwPgoKICAgIEBweXRlc3QubWFyay5pdCgnVGhlIG91dHB1dCBzaG91bGQgYmUgdGhlIGV4cGVjdGVkJykKICAgIGRlZiB0ZXN0X2V4cGVjdGVkX291dHB1dChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgICAiMTc2MzJcbiIgaW4gY2FwdHVyZWQub3V0ChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnMTc2MzJcbicgaW4gJyAgICAgICAgICAgICAgICBJZCAgLi4uICBDb3VudFxuTmFtZSAgICAgICAgICAgICAgICAuLi4gICAgICAgXG5BYWJhbiAgICAgIDc3MzM4MDMgIC4uLiAgICAgMTJcbkFhZGFuICAgICAgNzE1ODA2NSAgLi4uLiAgICAgNTA3NDIzMCAgLi4uICAgICAgNlxuWnlyaWEgICAgIDI5Nzg3MDM5ICAuLi4gICAgIDU5XG5aeXJpYWggICAgMzQxNDYyMDUgIC4uLiAgICAgNThcblxuWzE3NjMyIHJvd3MgeCA1IGNvbHVtbnNdXG4nG1swbQobWzFtG1szMW1FICAgICAgICArICB3aGVyZSAnICAgICAgICAgICAgICAgIElkICAuLi4gIENvdW50XG5OYW1lICAgICAgICAgICAgICAgIC4uLiAgICAgICBcbkFhYmFuICAgICAgNzczMzgwMyAgLi4uICAgICAxMlxuQWFkYW4gICAgICA3MTU4MDY1ICAuLi4uICAgICA1MDc0MjMwICAuLi4gICAgICA2XG5aeXJpYSAgICAgMjk3ODcwMzkgIC4uLiAgICAgNTlcblp5cmlhaCAgICAzNDE0NjIwNSAgLi4uICAgICA1OFxuXG5bMTc2MzIgcm93cyB4IDUgY29sdW1uc11cbicgPSBDYXB0dXJlUmVzdWx0KG91dD0nICAgICAgICAgICAgICAgIElkICAuLi4gIENvdW50XG5OYW1lICAgICAgICAgICAgICAgIC4uLiAgICAgICBcbkFhYmFuICAgICAgNzczMzgwMyAgLi4uICAgICAxMlxuQWFkLi4uMjMwICAuLi4gICAgICA2XG5aeXJpYSAgICAgMjk3ODcwMzkgIC4uLiAgICAgNTlcblp5cmlhaCAgICAzNDE0NjIwNSAgLi4uICAgICA1OFxuXG5bMTc2MzIgcm93cyB4IDUgY29sdW1uc11cbicsIGVycj0nJykub3V0G1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wNi4zLWdyb3VwLWJ5L3Rlc3QucHkbWzBtOjU0OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDYuMy1ncm91cC1ieS90ZXN0LnB5OjobWzFtdGVzdF9leHBlY3RlZF9vdXRwdXQbWzBtIC0gQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnMTc2MzJcbicgaW4gJyAgICAgICAgICAgICAgICBJZCAgLi4uICBDb3VudFxuTmFtZSAgLi4uChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMxbRtbMW0xIGZhaWxlZBtbMG0sIBtbMzJtNyBwYXNzZWQbWzBtG1szMW0gaW4gMS4xNXMbWzBtG1szMW0gPT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCiwKCiAgIAogICAgICAgICAgG1szMW1Zb3VyIGNvZGUgbXVzdCB0byBjb21wbHkgd2l0aCB0aGUgZm9sbG93aW5nIHRlc3RzOhtbMzltIAoKICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMC4gG1szN21UaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQbWzM5bSAKCg==","exit_code":1},{"starting_at":1725577391674,"source_code":"aW1wb3J0IHBhbmRhcyBhcyBwZAoKIyBkYXRhX2ZyYW1lID0gcGQucmVhZF9jc3YoJy5sZWFybi9hc3NldHMvcG9rZW1vbl9kYXRhLmNzdicpCgojIHByaW50KGRhdGFfZnJhbWUpCgojIFsyMyw0NSw3LDM0LDYsNjMsMzYsNzgsNTQsMzRdCgojIGRhdGEgPSBwZC5TZXJpZXMoWzIzLDQ1LDcsMzQsNiw2MywzNiw3OCw1NCwzNF0pCgojIHByaW50KGRhdGEpCgojIGRhdGEgPSBwZC5kYXRlX3JhbmdlKHN0YXJ0PScyMDIxLTA1LTAxJywgZW5kPScyMDIxLTA1LTEyJykKCiMgcHJpbnQoZGF0YSkKCiMgbXlfc2VyaWVzID0gcGQuU2VyaWVzKFsyLCA0LCA2LCA4LCAxMF0pCgojIG15X3NlcmllcyA9IG15X3Nlcmllcy5hcHBseShsYW1iZGEgeDogeC8yKQoKIyBwcmludChteV9zZXJpZXMpCgojIGRhdGEgPSBbCiMgICAgIHsgCiMgICAgICAgICAiYnJhbmQiOiAiVG95b3RhIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ29yb2xsYSIsCiMgICAgICAgICAiY29sb3IiOiAiQmx1ZSIKIyAgICAgfSwKIyAgICAgewojICAgICAgICAgImJyYW5kIjogIkZvcmQiLCAKIyAgICAgICAgICJtb2RlbCI6ICJLIiwKIyAgICAgICAgICJjb2xvciI6ICJZZWxsb3ciCiMgICAgIH0sCiMgICAgIHsKIyAgICAgICAgICJicmFuZCI6ICJQb3JzY2hlIiwgCiMgICAgICAgICAibW9kZWwiOiAiQ2F5ZW5uZSIsCiMgICAgICAgICAiY29sb3IiOiAiV2hpdGUiCiMgICAgIH0KIyBdCgojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEsIGNvbHVtbnM9WydCcmFuZCcsICdNb2RlbCcsICdDb2xvciddKQojIGRmID0gcGQuRGF0YUZyYW1lKGRhdGEpCiMgZGYubG9jW2xlbihkZildID0gWydUZXNsYScsICdNb2RlbCBTJywgJ1JlZCddCgpkZiA9IHBkLnJlYWRfY3N2KCcubGVhcm4vYXNzZXRzL3VzX2JhYnlfbmFtZXNfcmlnaHQuY3N2JykKIyBkZi5kcm9wKGNvbHVtbnM9WydVbm5hbWVkOiAwJ10sIGlucGxhY2U9VHJ1ZSkKbmFtZV9zY29yZSA9IGRmLmdyb3VwYnkoJ05hbWUnKS5zdW0oKQpwcmludChsZW4obmFtZV9zY29yZSkpCgojIGdlbmRlcl9jb3VudHMgPSBkZlsnR2VuZGVyJ10udmFsdWVfY291bnRzKCkKIyBwcmludChnZW5kZXJfY291bnRzKQoKIyBsZWdlbmRhcnlfcG9rZW1vbiA9IGRmLmxvY1tkZlsnTGVnZW5kYXJ5J10gPT0gVHJ1ZV0KIyBwcmludChsZW4obGVnZW5kYXJ5X3Bva2Vtb24pKQoKCiMgc2VsZWN0ZWRfY29sdW1ucyA9IGRmW1snTmFtZScsICdUeXBlIDEnXV0KIyBwcmludChzZWxlY3RlZF9jb2x1bW5zLmhlYWQoMTApKQojIHByaW50KGRmLmlsb2NbMTMzLDZdKQ==","ended_at":1725577393009,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvcHl0aG9uLXBhbmRhcy10dXRvcmlhbApwbHVnaW5zOiB0ZXN0ZG94LTMuMS4wCmNvbGxlY3RlZCA4IGl0ZW1zCgoubGVhcm4vZXhlcmNpc2VzLzA2LjMtZ3JvdXAtYnkvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICAgICBbMTAwJV0bWzBtCgobWzMybT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMybRtbMW04IHBhc3NlZBtbMG0bWzMybSBpbiAxLjAycxtbMG0bWzMybSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1725576898267,"completed_at":1725577393009}],"workout_session":[{"started_at":1725398484672,"ended_at":1725403992423},{"started_at":1725410131023,"ended_at":1725410938123},{"started_at":1725411719986,"ended_at":1725413310034},{"started_at":1725418862783,"ended_at":1725413310034},{"started_at":1725424548940,"ended_at":1725425910531},{"started_at":1725465812784,"ended_at":1725425910531},{"started_at":1725469781619,"ended_at":1725471962355},{"started_at":1725564725014,"ended_at":1725564828972},{"started_at":1725566649295,"ended_at":1725564828972},{"started_at":1725571961879,"ended_at":1725577393009},{"started_at":1725830318066}],"user_id":5043,"last_interaction_at":1725577393009}